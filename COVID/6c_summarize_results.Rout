
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # modified based on 2c
> # log changed to log10 when plotting fisher exact pvalues
> 
> # for each cell type, this code plots the negative log of 
> # fisher exact test pvalues between any two methods
> 
> 
> library(ggcorrplot)
Loading required package: ggplot2
> library(data.table)
> library(ggpubr)
> library(ggrepel)
> library(reshape2)

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

> 
> theme_set(theme_classic())
> 
> # -------------------------------------------------------------------
> # read in cell type information
> # -------------------------------------------------------------------
> 
> cell_types = c("CD8+Tcells_1")
> 
> # -------------------------------------------------------------------
> # read p-values, draw histogram of p-values, and record 
> # fisher exact test to compare each pair of method
> # -------------------------------------------------------------------
> 
> methods = c("DESeq2", "rank_sum", "MAST_glm", "MAST_glmer", 
+             "PS_nb_Was", "PS_dca_direct_Was", "PS_saver_direct_Was")
> 
> pi0     = matrix(NA, nrow=length(cell_types), ncol=length(methods))
> ngenes  = rep(NA, length(cell_types))
> or_list = fp_list  = list()
> 
> 
> for(i in 1:length(cell_types)){
+   ct1 = cell_types[i]
+   p1  = fread(sprintf("res/5e_pvals_%s.tsv", ct1))
+   
+   odds_ratio = fisher_pvl = matrix(NA, nrow=length(methods), 
+                                    ncol=length(methods))
+   
+   colnames(odds_ratio) = rownames(odds_ratio) = methods
+   colnames(fisher_pvl) = rownames(fisher_pvl) = methods
+   
+   j = 0
+   for(m1 in methods){
+     j = j + 1
+     pi0[i,j] = min(1, 2*mean(p1[[m1]] > 0.5, na.rm=TRUE))
+     
+     pj = p1[[m1]] < 0.05
+     if(sum(pj, na.rm=TRUE) == 0){ next }
+     
+     for(k1 in methods){
+       pk = p1[[k1]] < 0.05
+       if(sum(pk, na.rm=TRUE) == 0){ next }
+       # here the alternative is modified to greater
+       fjk = fisher.test(pj, pk, alternative = "greater")
+       odds_ratio[m1, k1] = fjk$estimate
+       fisher_pvl[m1, k1] = fjk$p.value
+     }
+   }
+   plot(0:1,0:1, type="n", xaxt="n", yaxt="n", bty="n", xlab="", ylab="")
+   or_list[[ct1]] = odds_ratio
+   fp_list[[ct1]] = fisher_pvl
+   
+ }
> 
> 
> 
> 
> pdf("figures/6c_fisher_exact_neg_log_pvals.pdf", width=6, height=6)
> par(mfrow=c(1,1), bty="n", mar=c(5,4,3,1))
> 
> for(ct1 in cell_types){
+   fp1 = fp_list[[ct1]]
+   neg_log_fp1 = -log10(fp1)
+   neg_log_fp1[which(neg_log_fp1 > 10)] = 10
+   g1 = ggcorrplot(neg_log_fp1, tl.srt=90) + ggtitle(gsub("PFC_", "", ct1)) +
+     scale_fill_gradient2(limit = c(0,10), low = "blue", 
+                          high =  "red", mid = "white", 
+                          midpoint = 2)
+   print(g1)
+ }
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> dev.off()
pdf 
  2 
> 
> 
> 
> 
> 
> gc()
          used (Mb) gc trigger  (Mb) limit (Mb) max used (Mb)
Ncells 1074464 57.4    2192580 117.1         NA  1387061 74.1
Vcells 2216584 17.0    8388608  64.0      65536  8388036 64.0
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] reshape2_1.4.4    ggrepel_0.9.1     ggpubr_0.4.0      data.table_1.14.0
[5] ggcorrplot_0.1.3  ggplot2_3.3.5    

loaded via a namespace (and not attached):
 [1] tidyselect_1.1.1 purrr_0.3.4      haven_2.4.1      carData_3.0-4   
 [5] colorspace_2.0-2 vctrs_0.3.8      generics_0.1.0   utf8_1.2.1      
 [9] rlang_0.4.11     pillar_1.6.1     foreign_0.8-81   glue_1.4.2      
[13] withr_2.4.2      DBI_1.1.1        readxl_1.3.1     lifecycle_1.0.0 
[17] plyr_1.8.6       stringr_1.4.0    munsell_0.5.0    ggsignif_0.6.2  
[21] gtable_0.3.0     cellranger_1.1.0 zip_2.2.0        labeling_0.4.2  
[25] rio_0.5.27       forcats_0.5.1    curl_4.3.2       fansi_0.5.0     
[29] broom_0.7.8      Rcpp_1.0.7       backports_1.2.1  scales_1.1.1    
[33] abind_1.4-5      farver_2.1.0     hms_1.1.0        digest_0.6.27   
[37] stringi_1.6.2    openxlsx_4.2.4   rstatix_0.7.0    dplyr_1.0.7     
[41] grid_4.1.0       tools_4.1.0      magrittr_2.0.1   tibble_3.1.2    
[45] crayon_1.4.1     car_3.0-11       tidyr_1.1.3      pkgconfig_2.0.3 
[49] ellipsis_0.3.2   assertthat_0.2.1 R6_2.5.0         compiler_4.1.0  
> q(save="no")
> proc.time()
   user  system elapsed 
  1.022   0.103   1.118 
