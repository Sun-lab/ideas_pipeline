
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(MAST)
Loading required package: SingleCellExperiment
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:dplyr’:

    first, rename

The following objects are masked from ‘package:data.table’:

    first, second

The following objects are masked from ‘package:Matrix’:

    expand, unname

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges

Attaching package: ‘IRanges’

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

The following object is masked from ‘package:data.table’:

    shift

Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

Warning messages:
1: package ‘MatrixGenerics’ was built under R version 4.1.1 
2: package ‘GenomeInfoDb’ was built under R version 4.1.1 
> library(lme4)
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
> library(foreach)
> library(doRNG)
Loading required package: rngtools
> 
> data.dir = "../../ideas_data/COVID/PBMC_10x"
> nCore    = 4
> 
> args=(commandArgs(TRUE))
> args
[1] "grp='NKcells'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'CD8+Tcells_1' as default.\n")
+   grp = "CD8+Tcells_1"
+ }else{
+   eval(parse(text=args[[1]]))
+ }
> 
> grp
[1] "NKcells"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"))
> dim(cell_info)
[1] 99049    40
> cell_info[1:2,]
                   cell orig.ident nCount_RNA nFeature_RNA nReads_RNA
1: 1_AAACCCAAGGCTTTCA-1    Covid19       4842         1925       4842
2: 1_AAACCCACAACTTCTT-1    Covid19       9582         3004       9582
   nReads_ALL percent.mito percent.hb       donor onset_of_symptoms
1:       5102     6.608839          0 C19-CB-0001        25.02.2020
2:      10008     4.195366          0 C19-CB-0003        29.02.2020
   days_after_onset        sampleID origID date_of_sampling DaysAfterSample0
1:               11 C19-CB-0001_d11   1_d4       06.03.2020                4
2:               13 C19-CB-0003_d13   3_d0       12.03.2020                0
   experiment PoolID sampletag         hash.ID        platform purification
1:       A3_2      1  Hashtag6 Hashtag6-TotalA scRNA-seq (10x)        Fresh
2:       A3_2      1  Hashtag8 Hashtag8-TotalA scRNA-seq (10x)        Fresh
   cells   age  sex group_per_sample who_per_sample disease_stage    outcome
1:  PBMC 21_25 male             mild              3          late discharged
2:  PBMC 41_45 male             mild              3          late discharged
             comorbidities COVID.19.related_medication_and_anti.microbials
1:                    none                                            none
2: Cardiovascular diseases                                            none
   RNA_snn_res.0.4  cluster_labels_res.0.4 new.order                id.celltype
1:               7 HLA-DR+ CD83+ Monocytes         1 1: HLA-DR+ CD83+ Monocytes
2:               7 HLA-DR+ CD83+ Monocytes         1 1: HLA-DR+ CD83+ Monocytes
   hpca.labels blueprint.labels monaco.labels immune.labels dmap.labels
1:    Monocyte        Monocytes     Monocytes     Monocytes   Monocytes
2:    Monocyte        Monocytes     Monocytes     Monocytes   Monocytes
   hemato.labels
1:     Monocytes
2:     Monocytes
> 
> table(cell_info$id.celltype)

     0: Classical Monocytes  1: HLA-DR+ CD83+ Monocytes 
                      16982                        3414 
         10: CD4+ T cells_2          11: CD4+ T cells_3 
                      10588                        2969 
         12: CD8+ T cells_1          13: CD8+ T cells_2 
                      11002                        1119 
         14: CD8+ T cells_3                15: NK cells 
                       2981                        8436 
              16: B cells_1               17: B cells_2 
                       7235                         259 
              18: B cells_3            19: Plasmablasts 
                        209                         839 
        2: CD163+ Monocytes           20: Megakaryocyte 
                       1445                        1161 
                  21: mixed               22: undefined 
                        164                         161 
3: HLA-DR- S100A+ monocytes  4: Non-classical Monocytes 
                       5273                        3399 
             5: Neutrophils     6: Immature Neutrophils 
                       2878                        1386 
                    7: mDCs                     8: pDCs 
                        833                         516 
          9: CD4+ T cells_1 
                      15800 
> 
> sort(table(paste(cell_info$group_per_sample, cell_info$donor, sep=":")))

severe:C19-CB-0011   mild:C19-CB-0052   control:one_k_v3       control:P07H 
               932               1132               1142               1211 
  mild:C19-CB-0005       control:P04H       control:P08H       control:P17H 
              1323               1410               1440               1486 
    control:C2P05F       control:P20H       control:P15F       control:P18F 
              1494               1504               1511               1576 
    control:C2P01H       control:P06F       control:P13H     control:C2P07H 
              1701               1715               1725               1753 
severe:C19-CB-0199   mild:C19-CB-0214   mild:C19-CB-0053     control:C2P15H 
              1755               1777               1812               1817 
    control:C2P19H     control:C2P16H     control:C2P10H     control:C2P13F 
              1879               2153               2200               2231 
      control:P02H       control:P09H severe:C19-CB-0016   mild:C19-CB-0003 
              2379               2469               2524               2583 
severe:C19-CB-0013   mild:C19-CB-0204 severe:C19-CB-0198   mild:C19-CB-0002 
              2713               2823               2992               3131 
severe:C19-CB-0021   mild:C19-CB-0001 severe:C19-CB-0012 severe:C19-CB-0020 
              3288               3614               3677               3789 
severe:C19-CB-0008 severe:C19-CB-0009  control:Five_k_v3   control:Ten_k_v3 
              4069               4332               4626              11361 
> 
> # ------------------------------------------------------------------------
> # read in count data of cell type
> # ------------------------------------------------------------------------
> 
> dat = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> dim(dat)
[1] 10167  8436
> class(dat)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> dat[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
          1_AAATGGATCATCAGTG-1 1_AACAAAGGTATGATCC-1 1_AACGAAACAGGTGGAT-1
LINC00115                    .                    .                    .
NOC2L                        .                    .                    .
HES4                         .                    .                    .
ISG15                        .                    1                    1
C1orf159                     .                    .                    .
          1_AATGGAACATGGGTCC-1
LINC00115                    .
NOC2L                        .
HES4                         .
ISG15                        1
C1orf159                     .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat) %in% cell_info$cell)

TRUE 
8436 
> meta = cell_info[match(colnames(dat), cell_info$cell),]
> dim(meta)
[1] 8436   40
> meta[1:2,]
                   cell orig.ident nCount_RNA nFeature_RNA nReads_RNA
1: 1_AAATGGATCATCAGTG-1    Covid19       4317         1905       4317
2: 1_AACAAAGGTATGATCC-1    Covid19       3134         1532       3134
   nReads_ALL percent.mito percent.hb       donor onset_of_symptoms
1:       4512     7.319898          0 C19-CB-0002        25.02.2020
2:       3284     4.626675          0 C19-CB-0001        25.02.2020
   days_after_onset        sampleID origID date_of_sampling DaysAfterSample0
1:               13 C19-CB-0002_d13   2_d6       09.03.2020                6
2:               11 C19-CB-0001_d11   1_d4       06.03.2020                4
   experiment PoolID sampletag         hash.ID        platform purification
1:       A3_2      1  Hashtag5 Hashtag5-TotalA scRNA-seq (10x)        Fresh
2:       A3_2      1  Hashtag6 Hashtag6-TotalA scRNA-seq (10x)        Fresh
   cells   age    sex group_per_sample who_per_sample disease_stage    outcome
1:  PBMC 31_35 female             mild              3          late discharged
2:  PBMC 21_25   male             mild              3          late discharged
   comorbidities COVID.19.related_medication_and_anti.microbials
1:          none                                            none
2:          none                                            none
   RNA_snn_res.0.4 cluster_labels_res.0.4 new.order  id.celltype hpca.labels
1:               4                     NK        15 15: NK cells     NK_cell
2:               4                     NK        15 15: NK cells     NK_cell
   blueprint.labels monaco.labels immune.labels dmap.labels hemato.labels
1:         NK cells      NK cells      NK cells    NK cells      NK cells
2:         NK cells      NK cells      NK cells    NK cells      NK cells
> 
> summary(meta$nCount_RNA/meta$nFeature_RNA)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.381   2.179   2.507   2.471   2.756   4.327 
> 
> # check how many samples (each sample contains multiple cells) each donor has
> table(tapply(meta$sampleID, meta$donor, function(v){length(unique(v))}))

 1  2  3 
32  7  1 
> 
> 
> table(meta$cluster_labels_res.0.4)

  NK 
8436 
> table(meta$id.celltype)

15: NK cells 
        8436 
> 
> sort(table(paste(meta$group_per_sample, meta$sampleID, sep=":")))

  mild:C19-CB-0001_d16        control:P04H_d0   mild:C19-CB-0005_d15 
                     9                     11                     16 
  mild:C19-CB-0005_d20 severe:C19-CB-0008_d13   mild:C19-CB-0001_d11 
                    20                     21                     24 
  mild:C19-CB-0002_d13        control:P07H_d0   mild:C19-CB-0003_d13 
                    24                     25                     26 
       control:P06F_d0      control:C2P13F_d0        control:P13H_d0 
                    35                     53                     55 
 severe:C19-CB-0013_d8  severe:C19-CB-0199_d8      control:C2P15H_d0 
                    56                     56                     57 
   control:one_k_v3_d0  severe:C19-CB-0012_d9 severe:C19-CB-0011_d13 
                    58                     61                     71 
       control:P20H_d0   mild:C19-CB-0003_d18        control:P15F_d0 
                    75                     84                     86 
  mild:C19-CB-0052_d10        control:P17H_d0    mild:C19-CB-0001_d7 
                   105                    112                    115 
severe:C19-CB-0016_d16        control:P08H_d0  severe:C19-CB-0009_d9 
                   130                    132                    133 
severe:C19-CB-0198_d18 severe:C19-CB-0008_d20      control:C2P05F_d0 
                   145                    155                    172 
     control:C2P07H_d0    mild:C19-CB-0002_d8      control:C2P01H_d0 
                   184                    192                    201 
     control:C2P10H_d0 severe:C19-CB-0009_d16      control:C2P16H_d0 
                   224                    232                    256 
       control:P18F_d0   mild:C19-CB-0204_d15    mild:C19-CB-0214_d7 
                   257                    286                    301 
severe:C19-CB-0013_d15        control:P02H_d0 severe:C19-CB-0021_d18 
                   301                    324                    328 
  control:Five_k_v3_d0        control:P09H_d0 severe:C19-CB-0012_d16 
                   330                    366                    413 
   mild:C19-CB-0053_d3      control:C2P19H_d0    control:Ten_k_v3_d0 
                   477                    493                    557 
severe:C19-CB-0020_d16 
                   592 
> 
> 
> # ------------------------------------------------------------------------
> # filter out cells from early stage samples
> # get individual level information
> # ------------------------------------------------------------------------
> 
> table(meta$donor, meta$disease_stage)
             
              control early late
  C19-CB-0001       0   115   33
  C19-CB-0002       0   192   24
  C19-CB-0003       0     0  110
  C19-CB-0005       0     0   36
  C19-CB-0008       0     0  176
  C19-CB-0009       0   133  232
  C19-CB-0011       0     0   71
  C19-CB-0012       0    61  413
  C19-CB-0013       0    56  301
  C19-CB-0016       0     0  130
  C19-CB-0020       0     0  592
  C19-CB-0021       0     0  328
  C19-CB-0052       0   105    0
  C19-CB-0053       0   477    0
  C19-CB-0198       0     0  145
  C19-CB-0199       0    56    0
  C19-CB-0204       0     0  286
  C19-CB-0214       0   301    0
  C2P01H          201     0    0
  C2P05F          172     0    0
  C2P07H          184     0    0
  C2P10H          224     0    0
  C2P13F           53     0    0
  C2P15H           57     0    0
  C2P16H          256     0    0
  C2P19H          493     0    0
  Five_k_v3       330     0    0
  one_k_v3         58     0    0
  P02H            324     0    0
  P04H             11     0    0
  P06F             35     0    0
  P07H             25     0    0
  P08H            132     0    0
  P09H            366     0    0
  P13H             55     0    0
  P15F             86     0    0
  P17H            112     0    0
  P18F            257     0    0
  P20H             75     0    0
  Ten_k_v3        557     0    0
> 
> meta_no_early = meta[which(meta$disease_stage != "early"),]
> dim(meta_no_early)
[1] 6940   40
> 
> table(meta_no_early$donor, meta_no_early$disease_stage)
             
              control late
  C19-CB-0001       0   33
  C19-CB-0002       0   24
  C19-CB-0003       0  110
  C19-CB-0005       0   36
  C19-CB-0008       0  176
  C19-CB-0009       0  232
  C19-CB-0011       0   71
  C19-CB-0012       0  413
  C19-CB-0013       0  301
  C19-CB-0016       0  130
  C19-CB-0020       0  592
  C19-CB-0021       0  328
  C19-CB-0198       0  145
  C19-CB-0204       0  286
  C2P01H          201    0
  C2P05F          172    0
  C2P07H          184    0
  C2P10H          224    0
  C2P13F           53    0
  C2P15H           57    0
  C2P16H          256    0
  C2P19H          493    0
  Five_k_v3       330    0
  one_k_v3         58    0
  P02H            324    0
  P04H             11    0
  P06F             35    0
  P07H             25    0
  P08H            132    0
  P09H            366    0
  P13H             55    0
  P15F             86    0
  P17H            112    0
  P18F            257    0
  P20H             75    0
  Ten_k_v3        557    0
> 
> df_donor = as.data.frame(table(meta_no_early$donor))
> donor2kp = df_donor$Var1[which(df_donor$Freq >= 30)]
> 
> meta2kp = meta_no_early[which(meta_no_early$donor %in% donor2kp),]
> dim(meta2kp)
[1] 6880   40
> 
> # create a column for cell level label in terms of COVID and control
> table(meta2kp$group_per_sample)

control    mild  severe 
   4027     465    2388 
> meta2kp$diagnosis = meta2kp$group_per_sample
> meta2kp$diagnosis[which(meta2kp$group_per_sample == "mild")] = "COVID"
> meta2kp$diagnosis[which(meta2kp$group_per_sample == "severe")] = "COVID"
> table(meta2kp$diagnosis)

control   COVID 
   4027    2853 
> dim(meta2kp)
[1] 6880   41
> 
> cell2kp_index = which(meta$cell %in% meta2kp$cell)
> 
> # select counts of cells to keep
> dat1 = dat[, cell2kp_index]
> mean(colnames(dat1) == meta2kp$cell)
[1] 1
> 
> # ------------------------------------------------------------------------
> # run MAST
> # ------------------------------------------------------------------------
> 
> rds = colSums(dat1)
> med_rds = median(rds)
> summary(rds)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    489    1794    3728    3774    5384   15700 
> med_rds
[1] 3728.5
> 
> dim(dat1)
[1] 10167  6880
> dat1[1:3,1:6]
3 x 6 sparse Matrix of class "dgCMatrix"
          1_AACAAAGGTATGATCC-1 1_AACGAAACAGGTGGAT-1 1_AATGGAACATGGGTCC-1
LINC00115                    .                    .                    .
NOC2L                        .                    .                    .
HES4                         .                    .                    .
          1_ACCCTTGTCATTCGTT-1 1_ACTCCCAGTCACTGAT-1 1_ACTCTCGGTGACCTGC-1
LINC00115                    .                    .                    .
NOC2L                        2                    .                    .
HES4                         .                    .                    .
> dat1 = t(t(dat1)/rds)*med_rds
> dim(dat1)
[1] 10167  6880
> dat1[1:3,1:6]
3 x 6 sparse Matrix of class "dgCMatrix"
          1_AACAAAGGTATGATCC-1 1_AACGAAACAGGTGGAT-1 1_AATGGAACATGGGTCC-1
LINC00115                    .                    .                    .
NOC2L                        .                    .                    .
HES4                         .                    .                    .
          1_ACCCTTGTCATTCGTT-1 1_ACTCCCAGTCACTGAT-1 1_ACTCTCGGTGACCTGC-1
LINC00115             .                           .                    .
NOC2L                 1.114649                    .                    .
HES4                  .                           .                    .
> summary(colSums(dat1))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   3728    3728    3728    3728    3728    3728 
> 
> dat1_log = as.matrix(log2(1 + dat1)) #log transformed data
> 
> dim(dat1_log)
[1] 10167  6880
> dat1_log[1:3, 1:4]
          1_AACAAAGGTATGATCC-1 1_AACGAAACAGGTGGAT-1 1_AATGGAACATGGGTCC-1
LINC00115                    0                    0                    0
NOC2L                        0                    0                    0
HES4                         0                    0                    0
          1_ACCCTTGTCATTCGTT-1
LINC00115             0.000000
NOC2L                 1.080418
HES4                  0.000000
> cell_id = colnames(dat1_log)   # get the cell id from the data
> gene_id = rownames(dat1_log)   # get the gene id from the data
> 
> fData = data.frame(primerid = gene_id)
> cData = data.frame(wellKey  = cell_id)
> 
> # Cell info for meta
> cell_rd = colSums(dat1)
> CDR     = colSums(dat1 > 0) / nrow(dat1)
> 
> 
> meta_ind = distinct(meta2kp[,c('donor', 'group_per_sample')])
> meta_ind$group_per_sample[which(meta_ind$group_per_sample != "control")] = "COVID"
> colnames(meta_ind)[2] = 'diagnosis'
> rownames(meta_ind) = meta_ind$donor
> meta_ind
          donor diagnosis
 1: C19-CB-0001     COVID
 2: C19-CB-0003     COVID
 3: C19-CB-0005     COVID
 4: C19-CB-0011     COVID
 5: C19-CB-0008     COVID
 6: C19-CB-0020     COVID
 7: C19-CB-0013     COVID
 8: C19-CB-0021     COVID
 9: C19-CB-0009     COVID
10: C19-CB-0012     COVID
11: C19-CB-0016     COVID
12: C19-CB-0204     COVID
13: C19-CB-0198     COVID
14:        P17H   control
15:        P18F   control
16:        P20H   control
17:        P08H   control
18:        P13H   control
19:        P15F   control
20:        P06F   control
21:      C2P01H   control
22:        P09H   control
23:        P02H   control
24:      C2P07H   control
25:      C2P05F   control
26:      C2P10H   control
27:      C2P16H   control
28:      C2P13F   control
29:      C2P19H   control
30:      C2P15H   control
31:    one_k_v3   control
32:   Five_k_v3   control
33:    Ten_k_v3   control
          donor diagnosis
> 
> 
> dim(meta2kp)
[1] 6880   41
> meta2kp[1:2,]
                   cell orig.ident nCount_RNA nFeature_RNA nReads_RNA
1: 1_AACAAAGGTATGATCC-1    Covid19       3134         1532       3134
2: 1_AACGAAACAGGTGGAT-1    Covid19       5055         2084       5055
   nReads_ALL percent.mito percent.hb       donor onset_of_symptoms
1:       3284     4.626675          0 C19-CB-0001        25.02.2020
2:       5897     2.176063          0 C19-CB-0003        29.02.2020
   days_after_onset        sampleID origID date_of_sampling DaysAfterSample0
1:               11 C19-CB-0001_d11   1_d4       06.03.2020                4
2:               13 C19-CB-0003_d13   3_d0       12.03.2020                0
   experiment PoolID sampletag         hash.ID        platform purification
1:       A3_2      1  Hashtag6 Hashtag6-TotalA scRNA-seq (10x)        Fresh
2:       A3_2      1  Hashtag8 Hashtag8-TotalA scRNA-seq (10x)        Fresh
   cells   age  sex group_per_sample who_per_sample disease_stage    outcome
1:  PBMC 21_25 male             mild              3          late discharged
2:  PBMC 41_45 male             mild              3          late discharged
             comorbidities COVID.19.related_medication_and_anti.microbials
1:                    none                                            none
2: Cardiovascular diseases                                            none
   RNA_snn_res.0.4 cluster_labels_res.0.4 new.order  id.celltype hpca.labels
1:               4                     NK        15 15: NK cells     NK_cell
2:               4                     NK        15 15: NK cells     NK_cell
   blueprint.labels monaco.labels immune.labels  dmap.labels hemato.labels
1:         NK cells      NK cells      NK cells     NK cells      NK cells
2:         NK cells      NK cells      NK cells CD8+ T cells  CD8+ T cells
   diagnosis
1:     COVID
2:     COVID
> dim(meta_ind)
[1] 33  2
> meta_ind[1:2,]
         donor diagnosis
1: C19-CB-0001     COVID
2: C19-CB-0003     COVID
> 
> gc()
            used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   6147337 328.4    9482091  506.4         NA   7122040  380.4
Vcells 120645062 920.5  276967481 2113.1      65536 270325087 2062.5
> sca = FromMatrix(dat1_log, cData, fData)
Assuming data assay in position 1, with name et is log-transformed.
> colData(sca)$cngeneson = as.numeric(CDR)
> colData(sca)$diagnosis = as.factor(meta2kp$diagnosis)
> colData(sca)$ind = as.factor(meta2kp$donor)
> #colData(sca)$RIN = meta$'RNA Integrity Number'
> colData(sca)
DataFrame with 6880 rows and 4 columns
                                  wellKey cngeneson diagnosis         ind
                              <character> <numeric>  <factor>    <factor>
1_AACAAAGGTATGATCC-1 1_AACAAAGGTATGATCC-1  0.146454     COVID C19-CB-0001
1_AACGAAACAGGTGGAT-1 1_AACGAAACAGGTGGAT-1  0.199862     COVID C19-CB-0003
1_AATGGAACATGGGTCC-1 1_AATGGAACATGGGTCC-1  0.210091     COVID C19-CB-0003
1_ACCCTTGTCATTCGTT-1 1_ACCCTTGTCATTCGTT-1  0.246680     COVID C19-CB-0001
1_ACTCCCAGTCACTGAT-1 1_ACTCCCAGTCACTGAT-1  0.213337     COVID C19-CB-0003
...                                   ...       ...       ...         ...
TTTATGCGTGCGGATA_3     TTTATGCGTGCGGATA_3  0.155011   control    Ten_k_v3
TTTCACAAGACGAGCT_3     TTTCACAAGACGAGCT_3  0.201534   control    Ten_k_v3
TTTCCTCCAGGAACCA_3     TTTCCTCCAGGAACCA_3  0.188453   control    Ten_k_v3
TTTGACTTCTGTGCAA_3     TTTGACTTCTGTGCAA_3  0.169175   control    Ten_k_v3
TTTGGTTAGTATTCCG_3     TTTGGTTAGTATTCCG_3  0.198289   control    Ten_k_v3
> 
> #sca=sca[1:10,]
> 
> rm(dat1_log)
> gc()
            used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   6176951 329.9    9482091  506.4         NA   7660837  409.2
Vcells 120712625 921.0  356771927 2722.0      65536 296439110 2261.7
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> getOption("mc.cores")
[1] 4
> 
> date()
[1] "Tue Sep 28 11:12:07 2021"
> b0 = zlm(formula = ~ diagnosis + cngeneson, sca = sca, 
+          parallel = TRUE)
