
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # this file combines the pvalue results from 1b, 1c, 
> # and 1d together to a dataframe
> 
> # files to load:
> #   -- the 7 pvalue files
> #   -- the orignal full count and cell info matrices to filter 
> #      out genes with too many zeros
> 
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
character(0)
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'CD8+Tcells_1' as default.\n")
+   grp = "CD8+Tcells_1"
+ }else{
+   eval(parse(text=args[[1]]))
+ }
one argument is expected, use 'CD8+Tcells_1' as default.

> 
> grp
[1] "CD8+Tcells_1"
> 
> 
> # ========================================================================
> # libraries and path
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> 
> 
> data.dir = "../../ideas_data/COVID/PBMC_10x"
> 
> 
> 
> # DESeq2 and ranksum pvalues did not filter out genes with 
> # large proportion of zeros (MAST for COVID has done that)
> # need to repeat the filtering out genes step to get the genes we want
> pvals_deseq2     = fread(sprintf("res/1b_DESeq2_%s_logtotalrd_sex_age_mild_severe.tsv", grp))
> pvals_nb_rd      = fread(sprintf("res/1c_nb_pvals_%s.tsv", grp))
> pvals_dca_direct = fread(sprintf("res/1d_dca_direct_pvals_%s.tsv", grp))
> 
> pvals_mast_glm   = fread(sprintf("res/1b_MAST_%s_glm.tsv", grp))
> pvals_mast_glmer = fread(sprintf("res/1b_MAST_%s_glmer.tsv", grp))
> 
> pvals_rank_sum   = fread(sprintf("res/1b_ranksum_%s.tsv", grp))
> pvals_saver      = fread(sprintf("res/1d_saver_direct_pvals_%s.tsv", grp))
> 
> dim(pvals_deseq2)
[1] 10167     6
> dim(pvals_nb_rd)
[1] 2893    5
> dim(pvals_dca_direct)
[1] 2893    5
> dim(pvals_mast_glm)
[1] 2893    2
> dim(pvals_mast_glmer)
[1] 2893    2
> dim(pvals_rank_sum)
[1] 10167     2
> dim(pvals_saver)
[1] 2893    5
> 
> pvals_deseq2[1:2,]
    baseMean log2FoldChange     lfcSE        stat    pvalue      padj
1:  6.911225   -0.478838555 0.4056708 -1.18036248 0.2378561        NA
2: 46.197583    0.009872298 0.2117909  0.04661341 0.9628213 0.9830408
> pvals_nb_rd[1:2,]
    gene KR_nb_Was KR_nb_JSD PS_nb_Was PS_nb_JSD
1: ISG15    0.0157    0.0074    0.0142    0.0106
2:  SDF4    0.2524    0.1960    0.2910    0.2334
> pvals_dca_direct[1:2,]
    gene KR_dca_direct_Was KR_dca_direct_JSD PS_dca_direct_Was
1: ISG15            0.0192            0.0306            0.0144
2:  SDF4            0.1666            0.1566            0.0949
   PS_dca_direct_JSD
1:            0.0144
2:            0.1544
> pvals_mast_glm[1:2,]
      V1           V2
1: ISG15 1.672245e-17
2:  SDF4 1.144136e-01
> pvals_mast_glmer[1:2,]
      V1           V2
1: ISG15 0.0006409979
2:  SDF4 0.6025166525
> pvals_rank_sum[1:2,]
          V1         V2
1: LINC00115 0.80768580
2:     NOC2L 0.07759581
> pvals_saver[1:2,]
    gene KR_saver_direct_Was KR_saver_direct_JSD PS_saver_direct_Was
1: ISG15              0.0042              0.0037              0.0056
2:  SDF4              0.1344              0.1790              0.1020
   PS_saver_direct_JSD
1:              0.0040
2:              0.1276
> 
> 
> # add row name and gene column to help verify results after filtering
> dat = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> full_genes = rownames(dat)  
> row.names(pvals_deseq2) = full_genes 
> pvals_deseq2$gene = full_genes
> 
> 
> 
> # get filtering condition
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> 
> meta = cell_info[match(colnames(dat), cell_info$cell),]
> meta_covid = meta[which(meta$group_per_sample != "control"),]
> 
> df_donor = as.data.frame(table(meta_covid$donor))
> donor2kp = df_donor$Var1[which(df_donor$Freq >= 10)]
> 
> meta2kp = meta_covid[which(meta_covid$donor %in% donor2kp),]
> cell2kp_index = which(meta$cell %in% meta2kp$cell)
> 
> dat1 = dat[, cell2kp_index]
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    4302    4989    4572    5307    5557 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> length(w2kp)
[1] 2893
> 
> 
> # subset pvalues for genes to keep
> pvals_deseq2 = pvals_deseq2[w2kp,]
> #pvals_mast_glm   = pvals_mast_glm[w2kp]
> #pvals_mast_glmer = pvals_mast_glmer[w2kp,]
> pvals_rank_sum   = pvals_rank_sum[w2kp,]
> 
> stopifnot(all(pvals_deseq2$gene == pvals_nb_rd$gene))
> stopifnot(all(pvals_deseq2$gene == pvals_dca_direct$gene))
> stopifnot(all(pvals_deseq2$gene == pvals_mast_glm$V1))
> stopifnot(all(pvals_deseq2$gene == pvals_mast_glmer$V1))
> stopifnot(all(pvals_deseq2$gene == pvals_rank_sum$V1))
> stopifnot(all(pvals_deseq2$gene == pvals_saver$gene))
> 
> pvals = cbind(pvals_nb_rd$gene, pvals_deseq2$pvalue, pvals_nb_rd[, 2:5], 
+               pvals_dca_direct[, 2:5], pvals_mast_glm$V2, pvals_mast_glmer$V2,
+               pvals_rank_sum$V2, pvals_saver[, 2:5])
> names(pvals)[1] = "gene"
> names(pvals)[2] = "DESeq2"
> names(pvals)
 [1] "gene"                "DESeq2"              "KR_nb_Was"          
 [4] "KR_nb_JSD"           "PS_nb_Was"           "PS_nb_JSD"          
 [7] "KR_dca_direct_Was"   "KR_dca_direct_JSD"   "PS_dca_direct_Was"  
[10] "PS_dca_direct_JSD"   "V5"                  "V6"                 
[13] "V7"                  "KR_saver_direct_Was" "KR_saver_direct_JSD"
[16] "PS_saver_direct_Was" "PS_saver_direct_JSD"
> 
> names(pvals)[11] = "MAST_glm"
> names(pvals)[12] = "MAST_glmer"
> names(pvals)[13] = "rank_sum"
> 
> dim(pvals)
[1] 2893   17
> head(pvals)
       gene      DESeq2 KR_nb_Was KR_nb_JSD PS_nb_Was PS_nb_JSD
1:    ISG15 0.353055274    0.0157    0.0074    0.0142    0.0106
2:     SDF4 0.052880583    0.2524    0.1960    0.2910    0.2334
3:   UBE2J2 0.012907553    0.2980    0.6254    0.2710    0.5816
4: AURKAIP1 0.003491869    0.0264    0.0227    0.0284    0.0239
5:   MRPL20 0.005056790    0.5456    0.5908    0.5560    0.5836
6:    SSU72 0.020070112    0.0738    0.1304    0.0747    0.1444
   KR_dca_direct_Was KR_dca_direct_JSD PS_dca_direct_Was PS_dca_direct_JSD
1:            0.0192            0.0306            0.0144            0.0144
2:            0.1666            0.1566            0.0949            0.1544
3:            0.0397            0.0521            0.0135            0.0245
4:            0.0447            0.0488            0.0123            0.0162
5:            0.2526            0.5848            0.2276            0.5246
6:            0.0030            0.0087            0.0006            0.0023
       MAST_glm   MAST_glmer     rank_sum KR_saver_direct_Was
1: 1.672245e-17 0.0006409979 6.006121e-08              0.0042
2: 1.144136e-01 0.6025166525 1.063160e-02              0.1344
3: 8.451672e-07 0.0007315719 5.809272e-06              0.0260
4: 4.545703e-07 0.0860942833 2.341623e-10              0.0538
5: 5.090390e-07 0.0003590724 4.110250e-07              0.4654
6: 1.965369e-05 0.0269847971 2.182268e-07              0.0157
   KR_saver_direct_JSD PS_saver_direct_Was PS_saver_direct_JSD
1:              0.0037              0.0056              0.0040
2:              0.1790              0.1020              0.1276
3:              0.0436              0.0006              0.0030
4:              0.0653              0.0042              0.0036
5:              0.4280              0.4464              0.3628
6:              0.0263              0.0002              0.0007
> # plot(-log10(pvals$PS_dca_direct_Was), -log10(pvals$PS_saver_direct_Was))
> 
> file.name = sprintf("res/1e_pvals_%s.tsv", grp)
> fwrite(pvals, file = file.name, sep = "\t")
> 
> 
> gc()
           used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells  1601586  85.6    2851655  152.3         NA   1950947  104.2
Vcells 46047233 351.4  158990736 1213.1      65536 131143163 1000.6
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] data.table_1.14.0 Matrix_1.3-3      MASS_7.3-54      

loaded via a namespace (and not attached):
[1] compiler_4.1.0  grid_4.1.0      lattice_0.20-44
> q(save="no")
> proc.time()
   user  system elapsed 
  2.107   0.283   2.382 
