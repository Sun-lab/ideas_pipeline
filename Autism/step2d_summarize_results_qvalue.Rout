
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # this code compares genes thresholded by qvalue
> # from each method
> 
> library(ggcorrplot)
Loading required package: ggplot2
> library(data.table)
> library(ggpubr)
> library(ggrepel)
> library(reshape2)

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

> 
> theme_set(theme_classic())
> 
> # -------------------------------------------------------------------
> # read in cell type information
> # -------------------------------------------------------------------
> 
> cell_types = scan("cell_types.txt", what=character())
Read 17 items
> cell_types = sort(cell_types)
> cell_types
 [1] "PFC_AST-FB"           "PFC_AST-PP"           "PFC_Endothelial"     
 [4] "PFC_IN-PV"            "PFC_IN-SST"           "PFC_IN-SV2C"         
 [7] "PFC_IN-VIP"           "PFC_L2_3"             "PFC_L4"              
[10] "PFC_L5_6"             "PFC_L5_6-CC"          "PFC_Microglia"       
[13] "PFC_Neu-mat"          "PFC_Neu-NRGN-I"       "PFC_Neu-NRGN-II"     
[16] "PFC_Oligodendrocytes" "PFC_OPC"             
> 
> # -------------------------------------------------------------------
> # read p-values, draw histogram of p-values, and record 
> # fisher exact test to compare each pair of method
> # -------------------------------------------------------------------
> 
> methods = c("DESeq2", "rank_sum", "MAST_glm", "MAST_glmer", 
+             "PS_nb_Was", "PS_dca_direct_Was", "PS_saver_direct_Was")
> 
> or_list = fp_list = list()
> n_overlap_list = prop_overlap_list = list()
> 
> 
> for(i in 1:length(cell_types)){
+   ct1 = cell_types[i]
+   q1  = fread(sprintf("res/step1l_qvals_%s.tsv", ct1))
+ 
+   odds_ratio = fisher_pvl = matrix(NA, nrow=length(methods), 
+                                    ncol=length(methods))
+   n_overlap = prop_overlap = matrix(NA, nrow=length(methods), 
+                                     ncol=length(methods))
+   
+   colnames(odds_ratio) = rownames(odds_ratio) = methods
+   colnames(fisher_pvl) = rownames(fisher_pvl) = methods
+   
+   colnames(n_overlap) = rownames(n_overlap) = methods
+   colnames(prop_overlap) = rownames(prop_overlap) = methods
+   
+   j = 0
+   for(m1 in methods){
+     j = j + 1
+     # use q value cutoff 0.1 instead of pvalue cutoff 0.05
+     qj = q1[[m1]] < 0.1
+     if(sum(qj, na.rm=TRUE) == 0){ next }
+     
+     for(k1 in methods){
+       # use q value cutoff 0.1 instead of pvalue cutoff 0.05
+       qk = q1[[k1]] < 0.1
+       if(sum(qk, na.rm=TRUE) == 0){ next }
+       # here the alternative is modified to greater
+       fjk = fisher.test(qj, qk, alternative = "greater")
+       odds_ratio[m1, k1] = fjk$estimate
+       fisher_pvl[m1, k1] = fjk$p.value
+       n_overlap[m1, k1] = sum(qj & qk, na.rm = TRUE)
+       prop_overlap[m1, k1] = sum(qj & qk, na.rm = TRUE)/sum(qj, na.rm = TRUE)
+     }
+   }
+   #plot(0:1,0:1, type="n", xaxt="n", yaxt="n", bty="n", xlab="", ylab="")
+   or_list[[ct1]] = odds_ratio
+   fp_list[[ct1]] = fisher_pvl
+   n_overlap_list[[ct1]] = n_overlap
+   prop_overlap_list[[ct1]] = round(prop_overlap, digits = 3)
+   
+ }
> 
> 
> 
> pdf("figures/step2d_odds_ratio_qvalue_threshold.pdf", width=6, height=6)
> par(mfrow=c(1,1), bty="n", mar=c(5,4,3,1))
> 
> for(ct1 in cell_types){
+   or1 = or_list[[ct1]]
+   or1[which(or1 > 10)] = 10
+   g1 = ggcorrplot(or1, tl.srt=90) + ggtitle(gsub("PFC_", "", ct1)) +
+     scale_fill_gradient2(limit = c(0,10), low = "blue", 
+                          high =  "red", mid = "white", 
+                          midpoint = 1)
+   print(g1)
+ }
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> dev.off()
null device 
          1 
> 
> 
> 
> pdf("figures/step2d_fisher_exact_neglogpvals_qvalue_threshold.pdf", width=6, height=6)
> par(mfrow=c(1,1), bty="n", mar=c(5,4,3,1))
> 
> for(ct1 in cell_types){
+   fp1 = fp_list[[ct1]]
+   neg_log_fp1 = -log10(fp1)
+   neg_log_fp1[which(neg_log_fp1 > 10)] = 10
+   g1 = ggcorrplot(neg_log_fp1, tl.srt=90) + ggtitle(gsub("PFC_", "", ct1)) +
+     scale_fill_gradient2(limit = c(0,10), low = "blue", 
+                          high =  "red", mid = "white", 
+                          midpoint = 2)
+   print(g1)
+ }
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> dev.off()
null device 
          1 
> 
> 
> for(ct1 in cell_types){
+   filename_n_overlap = sprintf("res/step2d_n_overlap_%s.csv", ct1)
+   write.csv(n_overlap_list[[ct1]], file = filename_n_overlap, 
+             row.names = TRUE)
+   filename_prop_overlap = sprintf("res/step2d_prop_overlap_%s.csv", ct1)
+   write.csv(prop_overlap_list[[ct1]], file = filename_prop_overlap,
+             row.names = TRUE)  
+ }
> 
> 
> 
> 
> 
> 
> 
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   1559994   83.4    2662137  142.2         NA   2662137  142.2
Vcells 302298599 2306.4  507229810 3869.9      65536 330385581 2520.7
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] reshape2_1.4.4    ggrepel_0.9.1     ggpubr_0.4.0      data.table_1.14.0
[5] ggcorrplot_0.1.3  ggplot2_3.3.5    

loaded via a namespace (and not attached):
 [1] tidyselect_1.1.1 purrr_0.3.4      haven_2.4.1      carData_3.0-4   
 [5] colorspace_2.0-2 vctrs_0.3.8      generics_0.1.0   utf8_1.2.1      
 [9] rlang_0.4.11     pillar_1.6.1     foreign_0.8-81   glue_1.4.2      
[13] withr_2.4.2      DBI_1.1.1        readxl_1.3.1     lifecycle_1.0.0 
[17] plyr_1.8.6       stringr_1.4.0    munsell_0.5.0    ggsignif_0.6.2  
[21] gtable_0.3.0     cellranger_1.1.0 zip_2.2.0        labeling_0.4.2  
[25] rio_0.5.27       forcats_0.5.1    curl_4.3.2       fansi_0.5.0     
[29] broom_0.7.8      Rcpp_1.0.7       backports_1.2.1  scales_1.1.1    
[33] abind_1.4-5      farver_2.1.0     hms_1.1.0        digest_0.6.27   
[37] stringi_1.6.2    openxlsx_4.2.4   rstatix_0.7.0    dplyr_1.0.7     
[41] grid_4.1.0       tools_4.1.0      magrittr_2.0.1   tibble_3.1.2    
[45] crayon_1.4.1     car_3.0-11       tidyr_1.1.3      pkgconfig_2.0.3 
[49] ellipsis_0.3.2   assertthat_0.2.1 R6_2.5.0         compiler_4.1.0  
> q(save="no")
> proc.time()
   user  system elapsed 
 15.919   0.818  16.843 
