
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ideas with nb, read depth as the only covariates in variable per cell
> 
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_Neu-NRGN-II'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   eval(parse(text=args[[1]]))
+ }
> 
> grp
[1] "PFC_Neu-NRGN-II"
> 
> print(Sys.getenv("R_HOME"))
[1] "/Library/Frameworks/R.framework/Resources"
> 
> # ========================================================================
> # libraries and path
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> #library(ideas)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
> library(ggpointdensity)
> theme_set(theme_bw())
> 
> 
> # no need to load these libraries again here if load ideas
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> 
> # number of cores for multi-core computation
> nCore = 4
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
> 
> data.dir = "data/"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  3861
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AACCATGTCTCTTGAT-1_4341_BA46 AACCGCGGTCGGCATC-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AACCGCGTCAAGGTAA-1_4341_BA46 AACGTTGAGTCATGCT-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
3861 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 3861   16
> meta_cell[1:2,]
                           cell     cluster    sample individual region age sex
1: AACCATGTCTCTTGAT-1_4341_BA46 Neu-NRGN-II 4341_BA46       4341    PFC  13   M
2: AACCGCGGTCGGCATC-1_4341_BA46 Neu-NRGN-II 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2   711  868                2.304148
2:                  7.2   716  857                2.917153
   RNA ribosomal percent
1:              1.843318
2:              2.100350
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 3861   16
> meta_cell[1:2,]
                           cell     cluster    sample individual region age sex
1: AACCATGTCTCTTGAT-1_4341_BA46 Neu-NRGN-II 4341_BA46       4341    PFC  13   M
2: AACCGCGGTCGGCATC-1_4341_BA46 Neu-NRGN-II 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2   711  868    2.304148    1.843318
2:   Control      CB6      SB2  16 7.2   716  857    2.917153    2.100350
> 
> summary(meta_cell)
                          cell             cluster               sample    
 AAACCTGAGACATAAC-1_5958_BA9:   1   Neu-NRGN-II:3861   5387_BA9     : 661  
 AAACCTGAGCGACGTA-1_5387_BA9:   1   AST-FB     :   0   5841_BA9     : 657  
 AAACCTGAGGCATTGG-1_5565_BA9:   1   AST-PP     :   0   5577_BA9     : 556  
 AAACCTGCAATCTGCA-1_5841_BA9:   1   Endothelial:   0   5294_BA9     : 282  
 AAACCTGCACTTAAGC-1_5387_BA9:   1   IN-PV      :   0   5864_BA9     : 244  
 AAACCTGCAGTATAAG-1_5577_BA9:   1   IN-SST     :   0   5408_PFC_Nova: 222  
 (Other)                    :3855   (Other)    :   0   (Other)      :1239  
   individual   region          age        sex        diagnosis   
 Min.   :4341   ACC:   0   Min.   : 4.00   F: 303   ASD    :1795  
 1st Qu.:5387   PFC:3861   1st Qu.:12.00   M:3558   Control:2066  
 Median :5577              Median :13.00                          
 Mean   :5558              Mean   :15.06                          
 3rd Qu.:5841              3rd Qu.:20.00                          
 Max.   :6033              Max.   :22.00                          
                                                                  
    Capbatch    Seqbatch        PMI             RIN            genes       
 CB6    :2606   SB1: 657   Min.   : 3.00   Min.   :6.500   Min.   : 500.0  
 CB7    : 598   SB2:3204   1st Qu.:15.00   1st Qu.:7.600   1st Qu.: 548.0  
 CB1    : 448   SB3:   0   Median :16.00   Median :8.000   Median : 618.0  
 CB2    : 209              Mean   :19.34   Mean   :7.964   Mean   : 647.1  
 CB3    :   0              3rd Qu.:22.00   3rd Qu.:8.400   3rd Qu.: 716.0  
 CB4    :   0              Max.   :42.00   Max.   :9.000   Max.   :1879.0  
 (Other):   0                                                              
      UMIs       mitoPercent     riboPercent   
 Min.   : 564   Min.   :0.000   Min.   :0.000  
 1st Qu.: 661   1st Qu.:1.366   1st Qu.:1.236  
 Median : 763   Median :2.212   Median :1.744  
 Mean   : 810   Mean   :2.366   Mean   :1.818  
 3rd Qu.: 912   3rd Qu.:3.292   3rd Qu.:2.316  
 Max.   :3649   Max.   :4.995   Max.   :4.922  
                                               
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                          cell             cluster               sample    
 AAACCTGAGACATAAC-1_5958_BA9:   1   Neu-NRGN-II:3861   5387_BA9     : 661  
 AAACCTGAGCGACGTA-1_5387_BA9:   1   AST-FB     :   0   5841_BA9     : 657  
 AAACCTGAGGCATTGG-1_5565_BA9:   1   AST-PP     :   0   5577_BA9     : 556  
 AAACCTGCAATCTGCA-1_5841_BA9:   1   Endothelial:   0   5294_BA9     : 282  
 AAACCTGCACTTAAGC-1_5387_BA9:   1   IN-PV      :   0   5864_BA9     : 244  
 AAACCTGCAGTATAAG-1_5577_BA9:   1   IN-SST     :   0   5408_PFC_Nova: 222  
 (Other)                    :3855   (Other)    :   0   (Other)      :1239  
   individual   region          age          sex        diagnosis    Capbatch  
 5387   : 661   ACC:   0   Min.   :-2.4378   F: 303   ASD    :1795   CB1: 448  
 5841   : 657   PFC:3861   1st Qu.:-0.6738   M:3558   Control:2066   CB2: 209  
 5577   : 556              Median :-0.4533                           CB6:2606  
 5294   : 282              Mean   : 0.0000                           CB7: 598  
 5864   : 244              3rd Qu.: 1.0902                                     
 5408   : 222              Max.   : 1.5312                                     
 (Other):1239                                                                  
 Seqbatch        PMI               RIN              genes             UMIs     
 SB1: 657   Min.   :-2.1026   Min.   :-2.7571   Min.   : 500.0   Min.   : 564  
 SB2:3204   1st Qu.:-0.5586   1st Qu.:-0.6860   1st Qu.: 548.0   1st Qu.: 661  
            Median :-0.4299   Median : 0.0672   Median : 618.0   Median : 763  
            Mean   : 0.0000   Mean   : 0.0000   Mean   : 647.1   Mean   : 810  
            3rd Qu.: 0.3421   3rd Qu.: 0.8204   3rd Qu.: 716.0   3rd Qu.: 912  
            Max.   : 2.9155   Max.   : 1.9501   Max.   :1879.0   Max.   :3649  
                                                                               
  mitoPercent     riboPercent   
 Min.   :0.000   Min.   :0.000  
 1st Qu.:1.366   1st Qu.:1.236  
 Median :2.212   Median :1.744  
 Mean   :2.366   Mean   :1.818  
 3rd Qu.:3.292   3rd Qu.:2.316  
 Max.   :4.995   Max.   :4.922  
                                
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1  448    0
  CB2  209    0
  CB6    0 2606
  CB7    0  598
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.108   1.193   1.231   1.243   1.280   1.942 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0             3861                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 3861 
> table(meta_cell$diagnosis)

    ASD Control 
   1795    2066 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

    5144:ASD     5403:ASD     5978:ASD     5419:ASD     5945:ASD 5976:Control 
          18           19           19           31           32           33 
    6033:ASD     5278:ASD 5879:Control     5939:ASD 5538:Control 5893:Control 
          34           39           41           51           57           89 
5936:Control 5958:Control     5565:ASD 4341:Control     5531:ASD 5408:Control 
         109          118          150          180          219          222 
    5864:ASD     5294:ASD 5577:Control     5841:ASD 5387:Control 
         244          282          556          657          661 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5144 5403 5978 5419 5945 5976 6033 5278 5879 5939 5538 5893 5936 5958 5565 4341 
  18   19   19   31   32   33   34   39   41   51   57   89  109  118  150  180 
5531 5408 5864 5294 5577 5841 5387 
 219  222  244  282  556  657  661 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4532779   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.7762759   M       ASD      CB1      SB1
          PMI         RIN
1: -0.4298949 -1.43910545
2: -2.1025862  0.06720052
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> 
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    114    3721    3820    3724    3852    3861 
> 
> 0.6*ncol(dat1)
[1] 2316.6
> 0.8*ncol(dat1)
[1] 3088.8
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
17884   157 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
17448   593 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
16476  1565 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1]  593 3861
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
      AACCATGTCTCTTGAT-1_4341_BA46 AACCGCGGTCGGCATC-1_4341_BA46
KIF1B                            .                            1
ENO1                             .                            .
GNB1                             .                            1
ACOT7                            1                            .
CHD5                             .                            .
      AACCGCGTCAAGGTAA-1_4341_BA46 AACGTTGAGTCATGCT-1_4341_BA46
KIF1B                            3                            1
ENO1                             .                            1
GNB1                             1                            .
ACOT7                            .                            .
CHD5                             .                            1
> 
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 3861   16
> meta_cell[1:2,]
                           cell     cluster    sample individual region
1: AACCATGTCTCTTGAT-1_4341_BA46 Neu-NRGN-II 4341_BA46       4341    PFC
2: AACCGCGGTCGGCATC-1_4341_BA46 Neu-NRGN-II 4341_BA46       4341    PFC
          age sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs
1: -0.4532779   M   Control      CB6      SB2 -0.4298949 -1.439105   711  868
2: -0.4532779   M   Control      CB6      SB2 -0.4298949 -1.439105   716  857
   mitoPercent riboPercent
1:    2.304148    1.843318
2:    2.917153    2.100350
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
3861 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   97.0   272.0   322.0   337.4   389.0  1031.0 
> 
> meta_cell$rd = rd_cell
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
3861 
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> count_matrix  = as.matrix(dat1)
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> 
> dim(count_matrix)
[1]  593 3861
> count_matrix[1:2,1:4]
      AACCATGTCTCTTGAT-1_4341_BA46 AACCGCGGTCGGCATC-1_4341_BA46
KIF1B                            0                            1
ENO1                             0                            0
      AACCGCGTCAAGGTAA-1_4341_BA46 AACGTTGAGTCATGCT-1_4341_BA46
KIF1B                            3                            1
ENO1                             0                            1
> 
> 
> genes = rownames(count_matrix)
> rm(dat1)
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used  (Mb)
Ncells 3158530 168.7    5376777 287.2         NA   4892196 261.3
Vcells 9118200  69.6  112057836 855.0      65536 119826398 914.3
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used  (Mb)
Ncells 3158510 168.7    5376777 287.2         NA   4892196 261.3
Vcells 9107750  69.5   89646269 684.0      65536 119826398 914.3
> 
> set.seed(2020)
> 
> date()
[1] "Wed Oct 27 05:36:51 2021"
> 
> dist_list = list()
> 
> for(fit_method in c("nb")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     dist1 = ideas_dist(count_matrix, meta_cell, meta_ind, 
+                          var_per_cell, var2test, var2test_type, 
+                          d_metric = d_metric, 
+                          fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: nb, d_metric: Was

Wed Oct 27 05:36:51 2021
the count_matrix includes 593 genes in 3861 cells

estimating distribution for each gene and each individual by nb

fit_method: nb, d_metric: JSD

Wed Oct 27 05:37:20 2021
the count_matrix includes 593 genes in 3861 cells

estimating distribution for each gene and each individual by nb

> 
> date()
[1] "Wed Oct 27 05:37:49 2021"
> 
> lapply(dist_list, dim)
$nb_Was
[1] 593  23  23

$nb_JSD
[1] 593  23  23

> 
> dist_list$nb_Was[1,1:3,1:3]
           4341      5144       5278
4341 0.00000000 0.2818345 0.04368729
5144 0.28183453 0.0000000 0.32552182
5278 0.04368729 0.3255218 0.00000000
> dist_list$nb_JSD[1,1:3,1:3]
             4341       5144         5278
4341 0.0000000000 0.04293237 0.0007959164
5144 0.0429323672 0.00000000 0.0520123546
5278 0.0007959164 0.05201235 0.0000000000
> 
> rm(count_matrix)
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used  (Mb)
Ncells 3182357 170.0    5376777 287.2         NA   5376777 287.2
Vcells 7623234  58.2   71717016 547.2      65536 119826398 914.3
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used  (Mb)
Ncells 3182362 170.0    5376777 287.2         NA   5376777 287.2
Vcells 7623253  58.2   57373613 437.8      65536 119826398 914.3
> 
> # ---------------------------------------------------------------
> # STEP 2a: pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> 
> dim(X)
[1] 23  5
> X[1:2, 1:5]
  (Intercept)        age sexM SeqbatchSB2         RIN
1           1 -0.4532779    1           1 -1.43910545
2           1 -1.7762759    1           0  0.06720052
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> set.seed(905)
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+ 
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
nb_Was
Wed Oct 27 05:37:49 2021
nb_JSD
Wed Oct 27 05:38:07 2021
> 
> date()
[1] "Wed Oct 27 05:38:25 2021"
> 
> dim(pval_KR)
[1] 593   2
> pval_KR[1:2,]
      KR_nb_Was KR_nb_JSD
KIF1B    0.5120    0.4278
ENO1     0.7522    0.9902
> 
> 
> # ---------------------------------------------------------------
> # STEP 2b: pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Wed Oct 27 05:38:25 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
nb_Was
Wed Oct 27 05:38:25 2021
skip 2 gene(s) with NA in the dist_array

testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

nb_JSD
Wed Oct 27 05:39:36 2021
skip 2 gene(s) with NA in the dist_array

testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Wed Oct 27 05:40:49 2021"
> 
> summary(pval_KR)
   KR_nb_Was        KR_nb_JSD     
 Min.   :0.0001   Min.   :0.0001  
 1st Qu.:0.1657   1st Qu.:0.1734  
 Median :0.3958   Median :0.4282  
 Mean   :0.4270   Mean   :0.4470  
 3rd Qu.:0.6644   3rd Qu.:0.7081  
 Max.   :0.9992   Max.   :0.9988  
 NA's   :2        NA's   :2       
> summary(pval_PS)
   PS_nb_Was        PS_nb_JSD     
 Min.   :0.0001   Min.   :0.0001  
 1st Qu.:0.1089   1st Qu.:0.1170  
 Median :0.3142   Median :0.3558  
 Mean   :0.3763   Mean   :0.3988  
 3rd Qu.:0.6182   3rd Qu.:0.6589  
 Max.   :0.9992   Max.   :0.9968  
 NA's   :2        NA's   :2       
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 593   5
> df[1:5,]
       gene KR_nb_Was KR_nb_JSD PS_nb_Was PS_nb_JSD
KIF1B KIF1B    0.5120    0.4278    0.4848    0.4204
ENO1   ENO1    0.7522    0.9902    0.7186    0.9910
GNB1   GNB1    0.9718    0.9010    0.9642    0.8966
ACOT7 ACOT7    0.4184    0.4804    0.4500    0.4750
CHD5   CHD5    0.4050    0.3258    0.1498    0.1180
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> 
> fig.name  = sprintf("figures/step1c_nb_pval_hist_%s.pdf", grp)
> file.name = sprintf("res/step1c_nb_pvals_%s.tsv", grp)
> 
> 
> pdf(fig.name, width = 10, height = 10)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
Warning messages:
1: Removed 2 rows containing non-finite values (stat_bin). 
2: Removed 2 rows containing non-finite values (stat_bin). 
3: Removed 2 rows containing non-finite values (stat_bin). 
4: Removed 2 rows containing non-finite values (stat_bin). 
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used  (Mb)
Ncells 3343223 178.6    5376777 287.2         NA   5376777 287.2
Vcells 7994718  61.0   45898891 350.2      65536 119826398 914.3
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.5       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.7         
[16] data.table_1.14.0    Matrix_1.3-3         MASS_7.3-54         

loaded via a namespace (and not attached):
 [1] segmented_1.3-4     nlme_3.1-152        matrixStats_0.61.0 
 [4] numDeriv_2016.8-1.1 tools_4.1.0         backports_1.2.1    
 [7] utf8_1.2.1          R6_2.5.0            vegan_2.5-7        
[10] DBI_1.1.1           mgcv_1.8-35         colorspace_2.0-2   
[13] permute_0.9-5       withr_2.4.2         tidyselect_1.1.1   
[16] curl_4.3.2          compiler_4.1.0      quantreg_5.86      
[19] SparseM_1.81        labeling_0.4.2      scales_1.1.1       
[22] mvtnorm_1.1-2       digest_0.6.27       foreign_0.8-81     
[25] minqa_1.2.4         mixtools_1.2.0      rio_0.5.27         
[28] pkgconfig_2.0.3     lme4_1.1-27.1       bbmle_1.0.23.1     
[31] rlang_0.4.11        readxl_1.3.1        farver_2.1.0       
[34] generics_0.1.0      zip_2.2.0           car_3.0-11         
[37] magrittr_2.0.1      Rcpp_1.0.7          munsell_0.5.0      
[40] fansi_0.5.0         ape_5.5             abind_1.4-5        
[43] lifecycle_1.0.0     stringi_1.6.2       CompQuadForm_1.4.3 
[46] carData_3.0-4       plyr_1.8.6          grid_4.1.0         
[49] bdsmatrix_1.3-4     forcats_0.5.1       crayon_1.4.1       
[52] lattice_0.20-44     cowplot_1.1.1       haven_2.4.1        
[55] splines_4.1.0       hms_1.1.0           pillar_1.6.1       
[58] boot_1.3-28         ggsignif_0.6.2      codetools_0.2-18   
[61] stats4_4.1.0        glue_1.4.2          GUniFrac_1.2       
[64] vctrs_0.3.8         nloptr_1.2.2.2      MatrixModels_0.5-0 
[67] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[70] tidyr_1.1.3         kernlab_0.9-29      assertthat_0.2.1   
[73] openxlsx_4.2.4      broom_0.7.8         coda_0.19-4        
[76] rstatix_0.7.0       PearsonDS_1.2       survival_3.2-11    
[79] tibble_3.1.2        conquer_1.0.2       cluster_2.1.2      
[82] ellipsis_0.3.2     
> q(save="no")
> proc.time()
   user  system elapsed 
873.567  43.399 241.360 
