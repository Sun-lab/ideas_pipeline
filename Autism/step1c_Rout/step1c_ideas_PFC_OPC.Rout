
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ideas with nb, read depth as the only covariates in variable per cell
> 
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_OPC'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   eval(parse(text=args[[1]]))
+ }
> 
> grp
[1] "PFC_OPC"
> 
> print(Sys.getenv("R_HOME"))
[1] "/Library/Frameworks/R.framework/Resources"
> 
> # ========================================================================
> # libraries and path
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> #library(ideas)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
> library(ggpointdensity)
> theme_set(theme_bw())
> 
> 
> # no need to load these libraries again here if load ideas
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> 
> # number of cores for multi-core computation
> nCore = 4
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
> 
> data.dir = "data/"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  6251
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AAACGGGAGCGGCTTC-1_4341_BA46 AAAGATGAGCTACCGC-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AAAGCAAAGGCGTACA-1_4341_BA46 AAAGCAAGTGGTGTAG-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
6251 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 6251   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2  1620 2457               1.2617013
2:                  7.2  1545 2792               0.1074499
   RNA ribosomal percent
1:             1.2617013
2:             0.3581662
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 6251   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  1620 2457   1.2617013   1.2617013
2:   Control      CB6      SB2  16 7.2  1545 2792   0.1074499   0.3581662
> 
> summary(meta_cell)
                               cell             cluster    
 AAACCTGAGAAACCAT-1_5387_BA9     :   1   OPC        :6251  
 AAACCTGAGACTCGGA-1_5893_PFC     :   1   AST-FB     :   0  
 AAACCTGAGATGTGTA-1_5864_BA9     :   1   AST-PP     :   0  
 AAACCTGAGCTGCCCA-1_5403_PFC     :   1   Endothelial:   0  
 AAACCTGCAGGTCGTC-1_5387_BA9     :   1   IN-PV      :   0  
 AAACCTGCAGTAGAGC-1_5538_PFC_Nova:   1   IN-SST     :   0  
 (Other)                         :6245   (Other)    :   0  
           sample       individual   region          age        sex     
 5387_BA9     : 718   Min.   :4341   ACC:   0   Min.   : 4.00   F:1508  
 5841_BA9     : 494   1st Qu.:5387   PFC:6251   1st Qu.:12.00   M:4743  
 5278_PFC     : 399   Median :5538              Median :15.00           
 4341_BA46    : 383   Mean   :5549              Mean   :14.77           
 5408_PFC_Nova: 293   3rd Qu.:5893              3rd Qu.:19.00           
 5538_PFC_Nova: 290   Max.   :6033              Max.   :22.00           
 (Other)      :3674                                                     
   diagnosis       Capbatch    Seqbatch        PMI             RIN       
 ASD    :3297   CB6    :2527   SB1:2661   Min.   : 3.00   Min.   :6.500  
 Control:2954   CB1    :1634   SB2:3590   1st Qu.:15.00   1st Qu.:7.400  
                CB7    :1063   SB3:   0   Median :19.00   Median :7.600  
                CB2    :1027              Mean   :19.66   Mean   :7.779  
                CB3    :   0              3rd Qu.:24.00   3rd Qu.:8.300  
                CB4    :   0              Max.   :42.00   Max.   :9.000  
                (Other):   0                                             
     genes             UMIs       mitoPercent      riboPercent    
 Min.   : 500.0   Min.   : 572   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 931.5   1st Qu.:1346   1st Qu.:0.1423   1st Qu.:0.4141  
 Median :1245.0   Median :1929   Median :0.2589   Median :0.6106  
 Mean   :1280.7   Mean   :2033   Mean   :0.3702   Mean   :0.6920  
 3rd Qu.:1566.0   3rd Qu.:2553   3rd Qu.:0.4425   3rd Qu.:0.8594  
 Max.   :4417.0   Max.   :9985   Max.   :4.9751   Max.   :4.8780  
                                                                  
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                               cell             cluster    
 AAACCTGAGAAACCAT-1_5387_BA9     :   1   OPC        :6251  
 AAACCTGAGACTCGGA-1_5893_PFC     :   1   AST-FB     :   0  
 AAACCTGAGATGTGTA-1_5864_BA9     :   1   AST-PP     :   0  
 AAACCTGAGCTGCCCA-1_5403_PFC     :   1   Endothelial:   0  
 AAACCTGCAGGTCGTC-1_5387_BA9     :   1   IN-PV      :   0  
 AAACCTGCAGTAGAGC-1_5538_PFC_Nova:   1   IN-SST     :   0  
 (Other)                         :6245   (Other)    :   0  
           sample       individual   region          age           sex     
 5387_BA9     : 718   5387   : 718   ACC:   0   Min.   :-2.44111   F:1508  
 5841_BA9     : 494   5841   : 494   PFC:6251   1st Qu.:-0.62732   M:4743  
 5278_PFC     : 399   5278   : 399              Median : 0.05285           
 4341_BA46    : 383   4341   : 383              Mean   : 0.00000           
 5408_PFC_Nova: 293   5408   : 293              3rd Qu.: 0.95974           
 5538_PFC_Nova: 290   5538   : 290              Max.   : 1.63991           
 (Other)      :3674   (Other):3674                                         
   diagnosis    Capbatch   Seqbatch        PMI                RIN         
 ASD    :3297   CB1:1634   SB1:2661   Min.   :-2.17594   Min.   :-2.0755  
 Control:2954   CB2:1027   SB2:3590   1st Qu.:-0.60836   1st Qu.:-0.6155  
                CB6:2527              Median :-0.08583   Median :-0.2910  
                CB7:1063              Mean   : 0.00000   Mean   : 0.0000  
                                      3rd Qu.: 0.56733   3rd Qu.: 0.8445  
                                      Max.   : 2.91871   Max.   : 1.9801  
                                                                          
     genes             UMIs       mitoPercent      riboPercent    
 Min.   : 500.0   Min.   : 572   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 931.5   1st Qu.:1346   1st Qu.:0.1423   1st Qu.:0.4141  
 Median :1245.0   Median :1929   Median :0.2589   Median :0.6106  
 Mean   :1280.7   Mean   :2033   Mean   :0.3702   Mean   :0.6920  
 3rd Qu.:1566.0   3rd Qu.:2553   3rd Qu.:0.4425   3rd Qu.:0.8594  
 Max.   :4417.0   Max.   :9985   Max.   :4.9751   Max.   :4.8780  
                                                                  
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1 1634    0
  CB2 1027    0
  CB6    0 2527
  CB7    0 1063
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.135   1.421   1.543   1.539   1.641   2.775 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0             6251 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 6251 
> table(meta_cell$diagnosis)

    ASD Control 
   3297    2954 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

5976:Control     5978:ASD     6033:ASD     5294:ASD 5958:Control     5864:ASD 
         129          143          166          169          178          185 
    5144:ASD 5879:Control 5893:Control     5939:ASD 5577:Control     5419:ASD 
         197          213          231          237          247          252 
    5945:ASD     5403:ASD     5565:ASD 5936:Control     5531:ASD 5538:Control 
         254          260          262          272          279          290 
5408:Control 4341:Control     5278:ASD     5841:ASD 5387:Control 
         293          383          399          494          718 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5976 5978 6033 5294 5958 5864 5144 5879 5893 5939 5577 5419 5945 5403 5565 5936 
 129  143  166  169  178  185  197  213  231  237  247  252  254  260  262  272 
5531 5538 5408 4341 5278 5841 5387 
 279  290  293  383  399  494  718 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4006009   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.7609394   M       ASD      CB1      SB1
          PMI        RIN
1: -0.4777232 -0.9399331
2: -2.1759394  0.3578436
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> 
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    5774    6071    5815    6187    6251 
> 
> 0.6*ncol(dat1)
[1] 3750.6
> 0.8*ncol(dat1)
[1] 5000.8
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
17582   459 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
16551  1490 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
14570  3471 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 1490 6251
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
       AAACGGGAGCGGCTTC-1_4341_BA46 AAAGATGAGCTACCGC-1_4341_BA46
VPS13D                            1                            .
KIF1B                             1                            1
GNB1                              .                            .
UBE4B                             .                            .
ACAP3                             .                            2
       AAAGCAAAGGCGTACA-1_4341_BA46 AAAGCAAGTGGTGTAG-1_4341_BA46
VPS13D                            .                            1
KIF1B                             .                            2
GNB1                              .                            .
UBE4B                             .                            .
ACAP3                             .                            2
> 
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 6251   16
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC -0.4006009
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC -0.4006009
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.4777232 -0.9399331  1620 2457   1.2617013
2:   M   Control      CB6      SB2 -0.4777232 -0.9399331  1545 2792   0.1074499
   riboPercent
1:   1.2617013
2:   0.3581662
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
6251 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  269.0   823.5  1197.0  1241.6  1562.0  5970.0 
> 
> meta_cell$rd = rd_cell
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
6251 
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> count_matrix  = as.matrix(dat1)
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> 
> dim(count_matrix)
[1] 1490 6251
> count_matrix[1:2,1:4]
       AAACGGGAGCGGCTTC-1_4341_BA46 AAAGATGAGCTACCGC-1_4341_BA46
VPS13D                            1                            0
KIF1B                             1                            1
       AAAGCAAAGGCGTACA-1_4341_BA46 AAAGCAAGTGGTGTAG-1_4341_BA46
VPS13D                            0                            1
KIF1B                             0                            2
> 
> 
> genes = rownames(count_matrix)
> rm(dat1)
> gc()
           used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells  3158530 168.7    5376762  287.2         NA   4892196  261.3
Vcells 16179511 123.5  181928511 1388.1      65536 203813912 1555.0
> gc()
           used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells  3158510 168.7    5376762  287.2         NA   4892196  261.3
Vcells 16169061 123.4  145542809 1110.5      65536 203813912 1555.0
> 
> set.seed(2020)
> 
> date()
[1] "Wed Oct 27 05:27:11 2021"
> 
> dist_list = list()
> 
> for(fit_method in c("nb")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     dist1 = ideas_dist(count_matrix, meta_cell, meta_ind, 
+                          var_per_cell, var2test, var2test_type, 
+                          d_metric = d_metric, 
+                          fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: nb, d_metric: Was

Wed Oct 27 05:27:11 2021
the count_matrix includes 1490 genes in 6251 cells

estimating distribution for each gene and each individual by nb

fit_method: nb, d_metric: JSD

Wed Oct 27 05:28:53 2021
the count_matrix includes 1490 genes in 6251 cells

estimating distribution for each gene and each individual by nb

> 
> date()
[1] "Wed Oct 27 05:30:34 2021"
> 
> lapply(dist_list, dim)
$nb_Was
[1] 1490   23   23

$nb_JSD
[1] 1490   23   23

> 
> dist_list$nb_Was[1,1:3,1:3]
            4341        5144       5278
4341 0.000000000 0.009601325 0.06573275
5144 0.009601325 0.000000000 0.05613143
5278 0.065732751 0.056131426 0.00000000
> dist_list$nb_JSD[1,1:3,1:3]
             4341         5144        5278
4341 0.000000e+00 6.369446e-05 0.002654379
5144 6.369446e-05 0.000000e+00 0.002055828
5278 2.654379e-03 2.055828e-03 0.000000000
> 
> rm(count_matrix)
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)
Ncells 3185048 170.1    5376762 287.2         NA   5376762  287.2
Vcells 8608558  65.7  116434248 888.4      65536 203813912 1555.0
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)
Ncells 3185053 170.2    5376762 287.2         NA   5376762  287.2
Vcells 8608577  65.7   93147399 710.7      65536 203813912 1555.0
> 
> # ---------------------------------------------------------------
> # STEP 2a: pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> 
> dim(X)
[1] 23  5
> X[1:2, 1:5]
  (Intercept)        age sexM SeqbatchSB2        RIN
1           1 -0.4006009    1           1 -0.9399331
2           1 -1.7609394    1           0  0.3578436
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> set.seed(905)
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+ 
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
nb_Was
Wed Oct 27 05:30:35 2021
nb_JSD
Wed Oct 27 05:31:14 2021
> 
> date()
[1] "Wed Oct 27 05:31:54 2021"
> 
> dim(pval_KR)
[1] 1490    2
> pval_KR[1:2,]
       KR_nb_Was KR_nb_JSD
VPS13D    0.6698    0.4994
KIF1B     0.3430    0.3884
> 
> 
> # ---------------------------------------------------------------
> # STEP 2b: pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Wed Oct 27 05:31:54 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
nb_Was
Wed Oct 27 05:31:54 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

nb_JSD
Wed Oct 27 05:34:21 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Wed Oct 27 05:36:47 2021"
> 
> summary(pval_KR)
   KR_nb_Was        KR_nb_JSD     
 Min.   :0.0017   Min.   :0.0014  
 1st Qu.:0.2821   1st Qu.:0.2827  
 Median :0.5172   Median :0.5120  
 Mean   :0.5155   Mean   :0.5139  
 3rd Qu.:0.7510   3rd Qu.:0.7484  
 Max.   :1.0000   Max.   :0.9998  
> summary(pval_PS)
   PS_nb_Was        PS_nb_JSD     
 Min.   :0.0001   Min.   :0.0012  
 1st Qu.:0.2211   1st Qu.:0.2246  
 Median :0.4679   Median :0.4581  
 Mean   :0.4762   Mean   :0.4746  
 3rd Qu.:0.7255   3rd Qu.:0.7114  
 Max.   :1.0000   Max.   :1.0000  
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 1490    5
> df[1:5,]
         gene KR_nb_Was KR_nb_JSD PS_nb_Was PS_nb_JSD
VPS13D VPS13D    0.6698    0.4994    0.5944    0.4282
KIF1B   KIF1B    0.3430    0.3884    0.1794    0.2382
GNB1     GNB1    0.2700    0.2468    0.1758    0.1794
UBE4B   UBE4B    0.4784    0.7078    0.4134    0.6914
ACAP3   ACAP3    0.3762    0.2750    0.1358    0.0738
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> 
> fig.name  = sprintf("figures/step1c_nb_pval_hist_%s.pdf", grp)
> file.name = sprintf("res/step1c_nb_pvals_%s.tsv", grp)
> 
> 
> pdf(fig.name, width = 10, height = 10)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)
Ncells 3341545 178.5    5376762 287.2         NA   5376762  287.2
Vcells 8997479  68.7   74517920 568.6      65536 203813912 1555.0
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.5       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.7         
[16] data.table_1.14.0    Matrix_1.3-3         MASS_7.3-54         

loaded via a namespace (and not attached):
 [1] segmented_1.3-4     nlme_3.1-152        matrixStats_0.61.0 
 [4] numDeriv_2016.8-1.1 tools_4.1.0         backports_1.2.1    
 [7] utf8_1.2.1          R6_2.5.0            vegan_2.5-7        
[10] DBI_1.1.1           mgcv_1.8-35         colorspace_2.0-2   
[13] permute_0.9-5       withr_2.4.2         tidyselect_1.1.1   
[16] curl_4.3.2          compiler_4.1.0      quantreg_5.86      
[19] SparseM_1.81        labeling_0.4.2      scales_1.1.1       
[22] mvtnorm_1.1-2       digest_0.6.27       foreign_0.8-81     
[25] minqa_1.2.4         mixtools_1.2.0      rio_0.5.27         
[28] pkgconfig_2.0.3     lme4_1.1-27.1       bbmle_1.0.23.1     
[31] rlang_0.4.11        readxl_1.3.1        farver_2.1.0       
[34] generics_0.1.0      zip_2.2.0           car_3.0-11         
[37] magrittr_2.0.1      Rcpp_1.0.7          munsell_0.5.0      
[40] fansi_0.5.0         ape_5.5             abind_1.4-5        
[43] lifecycle_1.0.0     stringi_1.6.2       CompQuadForm_1.4.3 
[46] carData_3.0-4       plyr_1.8.6          grid_4.1.0         
[49] bdsmatrix_1.3-4     forcats_0.5.1       crayon_1.4.1       
[52] lattice_0.20-44     cowplot_1.1.1       haven_2.4.1        
[55] splines_4.1.0       hms_1.1.0           pillar_1.6.1       
[58] boot_1.3-28         ggsignif_0.6.2      codetools_0.2-18   
[61] stats4_4.1.0        glue_1.4.2          GUniFrac_1.2       
[64] vctrs_0.3.8         nloptr_1.2.2.2      MatrixModels_0.5-0 
[67] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[70] tidyr_1.1.3         kernlab_0.9-29      assertthat_0.2.1   
[73] openxlsx_4.2.4      broom_0.7.8         coda_0.19-4        
[76] rstatix_0.7.0       PearsonDS_1.2       survival_3.2-11    
[79] tibble_3.1.2        conquer_1.0.2       cluster_2.1.2      
[82] ellipsis_0.3.2     
> q(save="no")
> proc.time()
    user   system  elapsed 
2187.225   75.959  580.701 
