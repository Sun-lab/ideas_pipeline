
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ideas with nb, read depth as the only covariates in variable per cell
> 
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_IN-PV'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   eval(parse(text=args[[1]]))
+ }
> 
> grp
[1] "PFC_IN-PV"
> 
> print(Sys.getenv("R_HOME"))
[1] "/Library/Frameworks/R.framework/Resources"
> 
> # ========================================================================
> # libraries and path
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> #library(ideas)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
> library(ggpointdensity)
> theme_set(theme_bw())
> 
> 
> # no need to load these libraries again here if load ideas
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> 
> # number of cores for multi-core computation
> nCore = 4
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
> 
> data.dir = "data/"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  2236
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AACTCTTTCTTGCAAG-1_4341_BA46 AAGACCTAGGACGAAA-1_4341_BA46
DNAJC11                             3                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               1                            1
TNFRSF1B                            .                            .
         AATCCAGCACAGCGTC-1_4341_BA46 ACACCAACAAACCCAT-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            1
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
2236 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 2236   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AACTCTTTCTTGCAAG-1_4341_BA46   IN-PV 4341_BA46       4341    PFC  13   M
2: AAGACCTAGGACGAAA-1_4341_BA46   IN-PV 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                  7.2  4367 10999               0.1909264
2:                  7.2  5137 13167               0.2430318
   RNA ribosomal percent
1:             0.5364124
2:             0.5012531
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 2236   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AACTCTTTCTTGCAAG-1_4341_BA46   IN-PV 4341_BA46       4341    PFC  13   M
2: AAGACCTAGGACGAAA-1_4341_BA46   IN-PV 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes  UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  4367 10999   0.1909264   0.5364124
2:   Control      CB6      SB2  16 7.2  5137 13167   0.2430318   0.5012531
> 
> summary(meta_cell)
                          cell             cluster           sample    
 AAACCTGAGGTTACCT-1_5294_BA9:   1   IN-PV      :2236   5387_BA9 : 363  
 AAACCTGCACACTGCG-1_5531_BA9:   1   AST-FB     :   0   5841_BA9 : 179  
 AAACCTGGTTATTCTC-1_5144_PFC:   1   AST-PP     :   0   5531_BA9 : 146  
 AAACCTGTCCTTGCCA-1_5387_BA9:   1   Endothelial:   0   4341_BA46: 126  
 AAACCTGTCTATCCTA-1_5387_BA9:   1   IN-SST     :   0   5939_BA9 : 121  
 AAACGGGCATCGATTG-1_5841_BA9:   1   IN-SV2C    :   0   5577_BA9 : 116  
 (Other)                    :2230   (Other)    :   0   (Other)  :1185  
   individual   region          age        sex        diagnosis   
 Min.   :4341   ACC:   0   Min.   : 4.00   F: 343   ASD    :1113  
 1st Qu.:5387   PFC:2236   1st Qu.:12.00   M:1893   Control:1123  
 Median :5565              Median :15.00                          
 Mean   :5576              Mean   :15.18                          
 3rd Qu.:5893              3rd Qu.:19.00                          
 Max.   :6033              Max.   :22.00                          
                                                                  
    Capbatch    Seqbatch        PMI             RIN            genes     
 CB6    :1147   SB1: 629   Min.   : 3.00   Min.   :6.500   Min.   : 513  
 CB7    : 460   SB2:1607   1st Qu.:13.00   1st Qu.:7.400   1st Qu.:2581  
 CB1    : 329   SB3:   0   Median :19.00   Median :7.600   Median :3488  
 CB2    : 300              Mean   :19.87   Mean   :7.775   Mean   :3499  
 CB3    :   0              3rd Qu.:24.00   3rd Qu.:8.300   3rd Qu.:4396  
 CB4    :   0              Max.   :42.00   Max.   :9.000   Max.   :8196  
 (Other):   0                                                            
      UMIs        mitoPercent      riboPercent    
 Min.   :  679   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 5107   1st Qu.:0.4044   1st Qu.:0.4429  
 Median : 7842   Median :0.9569   Median :0.6063  
 Mean   : 8343   Mean   :1.3217   Mean   :0.6764  
 3rd Qu.:10893   3rd Qu.:1.9290   3rd Qu.:0.8053  
 Max.   :34117   Max.   :4.9975   Max.   :3.0082  
                                                  
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                          cell             cluster           sample    
 AAACCTGAGGTTACCT-1_5294_BA9:   1   IN-PV      :2236   5387_BA9 : 363  
 AAACCTGCACACTGCG-1_5531_BA9:   1   AST-FB     :   0   5841_BA9 : 179  
 AAACCTGGTTATTCTC-1_5144_PFC:   1   AST-PP     :   0   5531_BA9 : 146  
 AAACCTGTCCTTGCCA-1_5387_BA9:   1   Endothelial:   0   4341_BA46: 126  
 AAACCTGTCTATCCTA-1_5387_BA9:   1   IN-SST     :   0   5939_BA9 : 121  
 AAACGGGCATCGATTG-1_5841_BA9:   1   IN-SV2C    :   0   5577_BA9 : 116  
 (Other)                    :2230   (Other)    :   0   (Other)  :1185  
   individual   region          age           sex        diagnosis   
 5387   : 363   ACC:   0   Min.   :-2.45213   F: 343   ASD    :1113  
 5841   : 179   PFC:2236   1st Qu.:-0.69758   M:1893   Control:1123  
 5531   : 146              Median :-0.03963                          
 4341   : 126              Mean   : 0.00000                          
 5939   : 121              3rd Qu.: 0.83765                          
 5577   : 116              Max.   : 1.49560                          
 (Other):1185                                                        
 Capbatch   Seqbatch        PMI               RIN              genes     
 CB1: 329   SB1: 629   Min.   :-2.0728   Min.   :-2.3101   Min.   : 513  
 CB2: 300   SB2:1607   1st Qu.:-0.8442   1st Qu.:-0.6792   1st Qu.:2581  
 CB6:1147              Median :-0.1070   Median :-0.3167   Median :3488  
 CB7: 460              Mean   : 0.0000   Mean   : 0.0000   Mean   :3499  
                       3rd Qu.: 0.5073   3rd Qu.: 0.9518   3rd Qu.:4396  
                       Max.   : 2.7188   Max.   : 2.2203   Max.   :8196  
                                                                         
      UMIs        mitoPercent      riboPercent    
 Min.   :  679   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 5107   1st Qu.:0.4044   1st Qu.:0.4429  
 Median : 7842   Median :0.9569   Median :0.6063  
 Mean   : 8343   Mean   :1.3217   Mean   :0.6764  
 3rd Qu.:10893   3rd Qu.:1.9290   3rd Qu.:0.8053  
 Max.   :34117   Max.   :4.9975   Max.   :3.0082  
                                                  
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1  329    0
  CB2  300    0
  CB6    0 1147
  CB7    0  460
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.151   1.960   2.225   2.238   2.496   4.275 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0             2236 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 2236 
> table(meta_cell$diagnosis)

    ASD Control 
   1113    1123 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

    6033:ASD     5403:ASD     5278:ASD 5408:Control     5978:ASD 5879:Control 
          30           31           45           46           46           54 
5976:Control     5419:ASD 5538:Control     5144:ASD     5945:ASD 5936:Control 
          58           60           69           72           76           81 
5893:Control     5294:ASD     5565:ASD     5864:ASD 5958:Control 5577:Control 
          95           96           96          115          115          116 
    5939:ASD 4341:Control     5531:ASD     5841:ASD 5387:Control 
         121          126          146          179          363 
> tt1 = table(meta_cell$individual)
> sort(tt1)

6033 5403 5278 5408 5978 5879 5976 5419 5538 5144 5945 5936 5893 5294 5565 5864 
  30   31   45   46   46   54   58   60   69   72   76   81   95   96   96  115 
5958 5577 5939 4341 5531 5841 5387 
 115  116  121  126  146  179  363 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region       age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.478264   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.794176   M       ASD      CB1      SB1
          PMI        RIN
1: -0.4756211 -1.0415798
2: -2.0728199  0.4081385
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> 
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    1644    1993    1812    2148    2236 
> 
> 0.6*ncol(dat1)
[1] 1341.6
> 0.8*ncol(dat1)
[1] 1788.8
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
15419  2622 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
12031  6010 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
 8623  9418 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 6010 2236
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
        AACTCTTTCTTGCAAG-1_4341_BA46 AAGACCTAGGACGAAA-1_4341_BA46
DNAJC11                            3                            .
VPS13D                             9                            .
PER3                               2                            .
KIF1B                              4                            4
PRKCZ                              1                            3
        AATCCAGCACAGCGTC-1_4341_BA46 ACACCAACAAACCCAT-1_4341_BA46
DNAJC11                            .                            .
VPS13D                             2                            4
PER3                               .                            .
KIF1B                              4                            5
PRKCZ                              1                            .
> 
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 2236   16
> meta_cell[1:2,]
                           cell cluster    sample individual region       age
1: AACTCTTTCTTGCAAG-1_4341_BA46   IN-PV 4341_BA46       4341    PFC -0.478264
2: AAGACCTAGGACGAAA-1_4341_BA46   IN-PV 4341_BA46       4341    PFC -0.478264
   sex diagnosis Capbatch Seqbatch        PMI      RIN genes  UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.4756211 -1.04158  4367 10999   0.1909264
2:   M   Control      CB6      SB2 -0.4756211 -1.04158  5137 13167   0.2430318
   riboPercent
1:   0.5364124
2:   0.5012531
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
2236 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    583    4472    6808    7257    9467   29960 
> 
> meta_cell$rd = rd_cell
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
2236 
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> count_matrix  = as.matrix(dat1)
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> 
> dim(count_matrix)
[1] 6010 2236
> count_matrix[1:2,1:4]
        AACTCTTTCTTGCAAG-1_4341_BA46 AAGACCTAGGACGAAA-1_4341_BA46
DNAJC11                            3                            0
VPS13D                             9                            0
        AATCCAGCACAGCGTC-1_4341_BA46 ACACCAACAAACCCAT-1_4341_BA46
DNAJC11                            0                            0
VPS13D                             2                            4
> 
> 
> genes = rownames(count_matrix)
> rm(dat1)
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3158530 168.7    5376760 287.2         NA  4892196 261.3
Vcells 20256959 154.6   77269330 589.6      65536 88600613 676.0
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3158510 168.7    5376760 287.2         NA  4892196 261.3
Vcells 20246509 154.5   61815464 471.7      65536 88600613 676.0
> 
> set.seed(2020)
> 
> date()
[1] "Wed Oct 27 03:06:02 2021"
> 
> dist_list = list()
> 
> for(fit_method in c("nb")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     dist1 = ideas_dist(count_matrix, meta_cell, meta_ind, 
+                          var_per_cell, var2test, var2test_type, 
+                          d_metric = d_metric, 
+                          fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: nb, d_metric: Was

Wed Oct 27 03:06:02 2021
the count_matrix includes 6010 genes in 2236 cells

estimating distribution for each gene and each individual by nb

fit_method: nb, d_metric: JSD

Wed Oct 27 03:10:06 2021
the count_matrix includes 6010 genes in 2236 cells

estimating distribution for each gene and each individual by nb

> 
> date()
[1] "Wed Oct 27 03:14:09 2021"
> 
> lapply(dist_list, dim)
$nb_Was
[1] 6010   23   23

$nb_JSD
[1] 6010   23   23

> 
> dist_list$nb_Was[1,1:3,1:3]
           4341      5144       5278
4341 0.00000000 0.2326482 0.03913985
5144 0.23264819 0.0000000 0.19350834
5278 0.03913985 0.1935083 0.00000000
> dist_list$nb_JSD[1,1:3,1:3]
            4341       5144        5278
4341 0.000000000 0.02500557 0.001007502
5144 0.025005569 0.00000000 0.017507853
5278 0.001007502 0.01750785 0.000000000
> 
> rm(count_matrix)
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3198602 170.9    8351277 446.1         NA  8351277 446.1
Vcells 13356852 102.0   49452372 377.3      65536 88600613 676.0
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3198607 170.9    8351277 446.1         NA  8351277 446.1
Vcells 13356871 102.0   49452372 377.3      65536 88600613 676.0
> 
> # ---------------------------------------------------------------
> # STEP 2a: pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> 
> dim(X)
[1] 23  5
> X[1:2, 1:5]
  (Intercept)       age sexM SeqbatchSB2        RIN
1           1 -0.478264    1           1 -1.0415798
2           1 -1.794176    1           0  0.4081385
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> set.seed(905)
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+ 
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
nb_Was
Wed Oct 27 03:14:09 2021
nb_JSD
Wed Oct 27 03:16:43 2021
> 
> date()
[1] "Wed Oct 27 03:19:17 2021"
> 
> dim(pval_KR)
[1] 6010    2
> pval_KR[1:2,]
        KR_nb_Was KR_nb_JSD
DNAJC11    0.1758    0.1548
VPS13D     0.0387    0.0631
> 
> 
> # ---------------------------------------------------------------
> # STEP 2b: pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Wed Oct 27 03:19:17 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
nb_Was
Wed Oct 27 03:19:17 2021
skip 2 gene(s) with NA in the dist_array

testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

nb_JSD
Wed Oct 27 03:30:15 2021
skip 2 gene(s) with NA in the dist_array

testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Wed Oct 27 03:40:52 2021"
> 
> summary(pval_KR)
   KR_nb_Was        KR_nb_JSD     
 Min.   :0.0001   Min.   :0.0001  
 1st Qu.:0.2172   1st Qu.:0.2248  
 Median :0.4610   Median :0.4701  
 Mean   :0.4752   Mean   :0.4820  
 3rd Qu.:0.7248   3rd Qu.:0.7356  
 Max.   :1.0000   Max.   :0.9996  
 NA's   :2        NA's   :2       
> summary(pval_PS)
   PS_nb_Was        PS_nb_JSD     
 Min.   :0.0001   Min.   :0.0001  
 1st Qu.:0.1659   1st Qu.:0.1732  
 Median :0.4076   Median :0.4177  
 Mean   :0.4368   Mean   :0.4431  
 3rd Qu.:0.6938   3rd Qu.:0.6985  
 Max.   :1.0000   Max.   :1.0000  
 NA's   :2        NA's   :2       
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 6010    5
> df[1:5,]
           gene KR_nb_Was KR_nb_JSD PS_nb_Was PS_nb_JSD
DNAJC11 DNAJC11    0.1758    0.1548    0.1528    0.1498
VPS13D   VPS13D    0.0387    0.0631    0.0317    0.0670
PER3       PER3    0.8580    0.9574    0.8690    0.9550
KIF1B     KIF1B    0.6492    0.6926    0.6312    0.6784
PRKCZ     PRKCZ    0.1834    0.1736    0.0629    0.0704
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> 
> fig.name  = sprintf("figures/step1c_nb_pval_hist_%s.pdf", grp)
> file.name = sprintf("res/step1c_nb_pvals_%s.tsv", grp)
> 
> 
> pdf(fig.name, width = 10, height = 10)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
Warning messages:
1: Removed 2 rows containing non-finite values (stat_bin). 
2: Removed 2 rows containing non-finite values (stat_bin). 
3: Removed 2 rows containing non-finite values (stat_bin). 
4: Removed 2 rows containing non-finite values (stat_bin). 
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
           used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells  3343283 178.6    8351277  446.1         NA   8351277  446.1
Vcells 14192086 108.3  164397622 1254.3      65536 204562464 1560.7
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.5       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.7         
[16] data.table_1.14.0    Matrix_1.3-3         MASS_7.3-54         

loaded via a namespace (and not attached):
 [1] segmented_1.3-4     nlme_3.1-152        matrixStats_0.61.0 
 [4] numDeriv_2016.8-1.1 tools_4.1.0         backports_1.2.1    
 [7] utf8_1.2.1          R6_2.5.0            vegan_2.5-7        
[10] DBI_1.1.1           mgcv_1.8-35         colorspace_2.0-2   
[13] permute_0.9-5       withr_2.4.2         tidyselect_1.1.1   
[16] curl_4.3.2          compiler_4.1.0      quantreg_5.86      
[19] SparseM_1.81        labeling_0.4.2      scales_1.1.1       
[22] mvtnorm_1.1-2       digest_0.6.27       foreign_0.8-81     
[25] minqa_1.2.4         mixtools_1.2.0      rio_0.5.27         
[28] pkgconfig_2.0.3     lme4_1.1-27.1       bbmle_1.0.23.1     
[31] rlang_0.4.11        readxl_1.3.1        farver_2.1.0       
[34] generics_0.1.0      zip_2.2.0           car_3.0-11         
[37] magrittr_2.0.1      Rcpp_1.0.7          munsell_0.5.0      
[40] fansi_0.5.0         ape_5.5             abind_1.4-5        
[43] lifecycle_1.0.0     stringi_1.6.2       CompQuadForm_1.4.3 
[46] carData_3.0-4       plyr_1.8.6          grid_4.1.0         
[49] bdsmatrix_1.3-4     forcats_0.5.1       crayon_1.4.1       
[52] lattice_0.20-44     cowplot_1.1.1       haven_2.4.1        
[55] splines_4.1.0       hms_1.1.0           pillar_1.6.1       
[58] boot_1.3-28         ggsignif_0.6.2      codetools_0.2-18   
[61] stats4_4.1.0        glue_1.4.2          GUniFrac_1.2       
[64] vctrs_0.3.8         nloptr_1.2.2.2      MatrixModels_0.5-0 
[67] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[70] tidyr_1.1.3         kernlab_0.9-29      assertthat_0.2.1   
[73] openxlsx_4.2.4      broom_0.7.8         coda_0.19-4        
[76] rstatix_0.7.0       PearsonDS_1.2       survival_3.2-11    
[79] tibble_3.1.2        conquer_1.0.2       cluster_2.1.2      
[82] ellipsis_0.3.2     
> q(save="no")
> proc.time()
    user   system  elapsed 
7958.312  297.509 2094.674 
