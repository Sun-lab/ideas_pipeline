
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(ggcorrplot)
Loading required package: ggplot2
> library(data.table)
> library(ggpubr)
> library(ggrepel)
> library(reshape2)

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

> 
> theme_set(theme_classic())
> 
> options(width = 120)
> 
> # -------------------------------------------------------------------
> # read in cell type information
> # -------------------------------------------------------------------
> 
> cell_types = scan("cell_types.txt", what=character())
Read 17 items
> cell_types = sort(cell_types)
> cell_types
 [1] "PFC_AST-FB"           "PFC_AST-PP"           "PFC_Endothelial"      "PFC_IN-PV"            "PFC_IN-SST"          
 [6] "PFC_IN-SV2C"          "PFC_IN-VIP"           "PFC_L2_3"             "PFC_L4"               "PFC_L5_6"            
[11] "PFC_L5_6-CC"          "PFC_Microglia"        "PFC_Neu-mat"          "PFC_Neu-NRGN-I"       "PFC_Neu-NRGN-II"     
[16] "PFC_Oligodendrocytes" "PFC_OPC"             
> 
> # -------------------------------------------------------------------
> # read p-values, draw histogram of p-values, and record 
> # fisher exact test to compare each pair of method
> # -------------------------------------------------------------------
> 
> pi0     = matrix(NA, nrow=length(cell_types), ncol=9)
> ngenes  = rep(NA, length(cell_types))
> or_list = fp_list = pv_list = list()
> 
> pdf("figures/step2_pval_hist.pdf", width=9, height=9)
> par(mfrow=c(3,3), bty="n", mar=c(5,4,3,1))
> 
> for(i in 1:length(cell_types)){
+   ct1 = cell_types[i]
+   p1  = fread(sprintf("res/step1e_pvals_%s.tsv", ct1))
+   pv_list[[ct1]]= p1
+   ngenes[i] = nrow(p1)
+   
+   odds_ratio = fisher_pvl = matrix(NA, nrow=9, ncol=9)
+   colnames(odds_ratio) = rownames(odds_ratio) = names(p1)[-1]
+   colnames(fisher_pvl) = rownames(fisher_pvl) = names(p1)[-1]
+   
+   for(j in 2:10){
+     
+     hist(p1[[j]], main=paste0(names(p1)[j], "\n", ct1), 
+          xlab="p-value", breaks = 20)
+     pi0[i,j-1] = min(1, 2*mean(p1[[j]] > 0.5, na.rm=TRUE))
+     
+     pj = p1[[j]] < 0.05
+     if(sum(pj, na.rm=TRUE) == 0){ next }
+     
+     for(k in 2:10){
+       pk = p1[[k]] < 0.05
+       if(sum(pk, na.rm=TRUE) == 0){ next }
+       
+       fjk = fisher.test(pj, pk)
+       odds_ratio[j-1, k-1] = fjk$estimate
+       fisher_pvl[j-1, k-1] = fjk$p.value
+     }
+   }
+   
+   or_list[[ct1]] = odds_ratio
+   fp_list[[ct1]] = fisher_pvl
+   
+ }
> 
> dev.off()
null device 
          1 
> 
> 
> df1 = data.frame(cell_type = gsub("PFC_", "", cell_types), n_genes = ngenes)
> df1$cell_type = factor(df1$cell_type, levels = df1$cell_type)
> 
> g2  = ggplot(data=df1, aes(x=cell_type, y=n_genes)) +
+   geom_bar(stat="identity", fill="gray") + 
+   ylab("number of genes") + xlab("") + 
+   coord_flip() + theme_classic() 
> 
> ggsave("figures/step2_barplot_n_genes.pdf", g2, width=3, height=3.5)
> 
> pdf("figures/step2_odds_ratio.pdf", width=6, height=6)
> par(mfrow=c(1,1), bty="n", mar=c(5,4,3,1))
> 
> for(ct1 in cell_types){
+   or1 = or_list[[ct1]]
+   or1[which(or1 > 10)] = 10
+   g1 = ggcorrplot(or1, tl.srt=90) + ggtitle(gsub("PFC_", "", ct1)) +
+     scale_fill_gradient2(limit = c(0,10), low = "blue", 
+                          high =  "red", mid = "white", 
+                          midpoint = 5)
+   print(g1)
+ }
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
> dev.off()
null device 
          1 
> 
> # -------------------------------------------------------------------
> # summarize the proportion of non-nulls
> # -------------------------------------------------------------------
> 
> colnames(pi0) = names(p1)[-1]
> rownames(pi0) = cell_types
> 
> pi1 = t(1 - pi0)
> 
> pi1
                  PFC_AST-FB  PFC_AST-PP PFC_Endothelial  PFC_IN-PV PFC_IN-SST PFC_IN-SV2C PFC_IN-VIP   PFC_L2_3
DESeq2            0.00000000 0.004433186     0.000000000 0.17737105 0.16967152  0.14095410  0.1991051 0.20338983
KR_nb_Was         0.20629371 0.000000000     0.000000000 0.07456724 0.10665677  0.11291194  0.1137993 0.11369415
KR_nb_JSD         0.16783217 0.000000000     0.000000000 0.05559254 0.06656768  0.09490366  0.1070789 0.09819591
PS_nb_Was         0.27972028 0.029765674     0.000000000 0.17243675 0.17990596  0.18890690  0.1886201 0.24276547
PS_nb_JSD         0.23426573 0.070297657     0.055290102 0.16311585 0.12991834  0.18134342  0.1810036 0.22436130
KR_dca_direct_Was 0.11301370 0.000000000     0.000000000 0.30915141 0.43442825  0.32349235  0.3319911 0.20242131
KR_dca_direct_JSD 0.09589041 0.000000000     0.000000000 0.25723794 0.37317856  0.25940594  0.2680089 0.17142857
PS_dca_direct_Was 0.23972603 0.082963901     0.004204204 0.48785358 0.56384292  0.49234923  0.4827740 0.38450363
PS_dca_direct_JSD 0.20890411 0.094363521     0.109909910 0.41797005 0.49715979  0.39945995  0.4102908 0.32469734
                       PFC_L4    PFC_L5_6 PFC_L5_6-CC PFC_Microglia PFC_Neu-mat PFC_Neu-NRGN-I PFC_Neu-NRGN-II
DESeq2            0.195514845 0.066046766 0.075234098    0.05536332  0.13171577     0.15233161       0.3726813
KR_nb_Was         0.043272268 0.004789927 0.040172321    0.00000000  0.01217391     0.00000000       0.1878173
KR_nb_JSD         0.009791535 0.000000000 0.032848681    0.00000000  0.00000000     0.00000000       0.1269036
PS_nb_Was         0.179722047 0.117011085 0.165751212    0.00000000  0.07826087     0.06998445       0.3231810
PS_nb_JSD         0.141819330 0.114821404 0.166182014    0.00000000  0.01913043     0.05028512       0.2453469
KR_dca_direct_Was 0.144977890 0.164501573 0.002690776    0.00000000  0.36395147     0.10155440       0.4839798
KR_dca_direct_JSD 0.103600758 0.086558184 0.000000000    0.00000000  0.33102253     0.00000000       0.3288364
PS_dca_direct_Was 0.348073279 0.375632435 0.238187493    0.00000000  0.45580589     0.30569948       0.6053963
PS_dca_direct_JSD 0.280164245 0.273622316 0.175115703    0.00000000  0.40901213     0.03730570       0.4806071
                  PFC_Oligodendrocytes    PFC_OPC
DESeq2                       0.1544196 0.16644295
KR_nb_Was                    0.0516129 0.00000000
KR_nb_JSD                    0.1161290 0.00000000
PS_nb_Was                    0.2989247 0.07114094
PS_nb_JSD                    0.3182796 0.08993289
KR_dca_direct_Was            0.4547391 0.27651007
KR_dca_direct_JSD            0.4440895 0.34630872
PS_dca_direct_Was            0.6059638 0.52214765
PS_dca_direct_JSD            0.5463259 0.51275168
> rownames(pi1) = gsub("dca_direct", "dca", rownames(pi1))
> summary(c(pi1))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04327 0.14498 0.17860 0.27972 0.60596 
> 
> g1 = ggcorrplot(pi1, tl.srt=90)
> g1 = g1 + scale_fill_gradient2(limit = c(0,0.62), low = "blue", 
+                                high =  "red", mid = "white", 
+                                midpoint = 0.31)
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
> 
> ggsave("figures/step2_pi1_complete.pdf", g1, width=5, height=5)
> 
> pi1_sub = pi1[c("DESeq2", "PS_nb_Was", "PS_dca_Was"),]
> rownames(pi1_sub) = c("DESeq2", "IDEAS_NB", "IDEAS_DCA")
> 
> g1 = ggcorrplot(pi1_sub, tl.srt=90)
> g1 = g1 + scale_fill_gradient2(limit = c(0,0.62), low = "blue", 
+                                high =  "red", mid = "white", 
+                                midpoint = 0.31)
Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
> 
> ggsave("figures/step2_pi1_PS_Was.pdf", g1, width=4, height=5)
> 
> pi1_sub = as.data.frame(round(t(pi1_sub),3))
> rownames(pi1_sub) = gsub("PFC_", "", rownames(pi1_sub))
> 
> table(df1$cell_type == rownames(pi1_sub))

TRUE 
  17 
> pi1_sub
                 DESeq2 IDEAS_NB IDEAS_DCA
AST-FB            0.000    0.280     0.240
AST-PP            0.004    0.030     0.083
Endothelial       0.000    0.000     0.004
IN-PV             0.177    0.172     0.488
IN-SST            0.170    0.180     0.564
IN-SV2C           0.141    0.189     0.492
IN-VIP            0.199    0.189     0.483
L2_3              0.203    0.243     0.385
L4                0.196    0.180     0.348
L5_6              0.066    0.117     0.376
L5_6-CC           0.075    0.166     0.238
Microglia         0.055    0.000     0.000
Neu-mat           0.132    0.078     0.456
Neu-NRGN-I        0.152    0.070     0.306
Neu-NRGN-II       0.373    0.323     0.605
Oligodendrocytes  0.154    0.299     0.606
OPC               0.166    0.071     0.522
> df1 = cbind(df1, pi1_sub)
> df1
                        cell_type n_genes DESeq2 IDEAS_NB IDEAS_DCA
AST-FB                     AST-FB     584  0.000    0.280     0.240
AST-PP                     AST-PP    1579  0.004    0.030     0.083
Endothelial           Endothelial    1665  0.000    0.000     0.004
IN-PV                       IN-PV    6010  0.177    0.172     0.488
IN-SST                     IN-SST    4049  0.170    0.180     0.564
IN-SV2C                   IN-SV2C    5555  0.141    0.189     0.492
IN-VIP                     IN-VIP    4470  0.199    0.189     0.483
L2_3                         L2_3    8260  0.203    0.243     0.385
L4                             L4    6332  0.196    0.180     0.348
L5_6                         L5_6    7313  0.066    0.117     0.376
L5_6-CC                   L5_6-CC    9291  0.075    0.166     0.238
Microglia               Microglia     578  0.055    0.000     0.000
Neu-mat                   Neu-mat    1154  0.132    0.078     0.456
Neu-NRGN-I             Neu-NRGN-I    1930  0.152    0.070     0.306
Neu-NRGN-II           Neu-NRGN-II     593  0.373    0.323     0.605
Oligodendrocytes Oligodendrocytes     939  0.154    0.299     0.606
OPC                           OPC    1490  0.166    0.071     0.522
> 
> write.table(df1, file="res/Fig4A_n_genes.txt", sep="\t", quote=FALSE, 
+             row.names = FALSE)
> 
> # -------------------------------------------------------------------
> # read GSEA results
> # -------------------------------------------------------------------
> 
> f1 <- function(x){
+   ww1 = which(x$padj < 0.05)
+   if(length(ww1) > 0){
+     x1 = x[ww1, c("pathway", "pval", "padj", "NES")]
+   }else{
+     x1 = NULL
+   }
+   x1
+ }
> 
> f2 <- function(x){
+   x[which(x$pathway=="SFARI"), c("pval")]
+ }
> 
> f3 <- function(x){
+   x[which(x$pathway=="SFARI"), c("NES")]
+ }
> 
> sfari_pval = sfari_NES = NULL
> 
> gesaL = list()
> 
> sink("res/step2_GSEA.txt")
> 
> for(ct1 in cell_types){
+   
+   cat("\n---------------------------------------------------\n")
+   cat(ct1)
+   cat("\n---------------------------------------------------\n")
+   
+   gsea = readRDS(sprintf("res/step1f_gsea_%s.rds", ct1))
+   x1   = lapply(gsea, f1)
+   x1[sapply(x1, is.null)] = NULL
+   
+   if(length(x1) > 0){ print(x1) }
+   
+   x2  = unlist(sapply(gsea, f2))
+   sfari_pval = rbind(sfari_pval, x2)
+ 
+   x3   = unlist(sapply(gsea, f3))
+   sfari_NES = rbind(sfari_NES, x3)
+   
+   gesaL[[ct1]] = gsea
+ }
> sink()
> 
> rownames(sfari_pval) = rownames(sfari_NES) = cell_types
> 
> signif(sfari_pval,2)
                     DESeq2.pval KR_nb_Was.pval KR_nb_JSD.pval PS_nb_Was.pval PS_nb_JSD.pval KR_dca_direct_Was.pval
PFC_AST-FB                 0.290          0.460          0.340          0.460          0.450                 0.1000
PFC_AST-PP                 0.840          0.590          0.550          0.690          0.360                 0.2400
PFC_Endothelial            0.790          0.310          0.200          0.220          0.270                 0.1800
PFC_IN-PV                  0.090          0.240          0.140          0.270          0.130                 0.0063
PFC_IN-SST                 0.110          0.340          0.260          0.540          0.430                 0.0045
PFC_IN-SV2C                0.210          0.190          0.110          0.230          0.080                 0.1300
PFC_IN-VIP                 0.230          0.032          0.019          0.110          0.087                 0.0500
PFC_L2_3                   0.250          0.150          0.210          0.180          0.690                 0.0024
PFC_L4                     0.074          0.093          0.074          0.091          0.200                 0.0180
PFC_L5_6                   0.049          0.043          0.024          0.061          0.026                 0.9500
PFC_L5_6-CC                0.260          0.300          0.450          0.350          0.630                 0.0420
PFC_Microglia              0.930          0.290          0.780          0.740          0.850                 0.1200
PFC_Neu-mat                0.540          0.630          0.860          0.840          0.950                 0.2300
PFC_Neu-NRGN-I             1.000          0.840          0.990          0.850          0.960                 0.8700
PFC_Neu-NRGN-II            1.000          0.940          0.890          0.990          0.930                 1.0000
PFC_Oligodendrocytes       0.750          0.750          0.720          0.910          0.690                 0.0910
PFC_OPC                    0.860          0.830          0.730          0.880          0.600                 0.0600
                     KR_dca_direct_JSD.pval PS_dca_direct_Was.pval PS_dca_direct_JSD.pval
PFC_AST-FB                           0.2600                 0.1400                0.24000
PFC_AST-PP                           0.2700                 0.3300                0.32000
PFC_Endothelial                      0.9300                 0.2600                0.97000
PFC_IN-PV                            0.0064                 0.1800                0.15000
PFC_IN-SST                           0.0081                 0.0320                0.04500
PFC_IN-SV2C                          0.6600                 0.3500                0.53000
PFC_IN-VIP                           0.0420                 0.0530                0.00630
PFC_L2_3                             0.0049                 0.0045                0.01500
PFC_L4                               0.0021                 0.0320                0.00079
PFC_L5_6                             0.9300                 0.9800                0.98000
PFC_L5_6-CC                          0.0150                 0.1100                0.05000
PFC_Microglia                        0.5300                 0.3700                0.68000
PFC_Neu-mat                          0.4800                 0.2400                0.49000
PFC_Neu-NRGN-I                       0.5500                 0.9400                0.82000
PFC_Neu-NRGN-II                      0.8900                 0.9300                1.00000
PFC_Oligodendrocytes                 0.4700                 0.4100                0.56000
PFC_OPC                              0.1300                 0.2100                0.28000
> signif(sfari_NES,2)
                     DESeq2.NES KR_nb_Was.NES KR_nb_JSD.NES PS_nb_Was.NES PS_nb_JSD.NES KR_dca_direct_Was.NES
PFC_AST-FB                 1.10          1.00          1.10          1.00          1.00                  1.20
PFC_AST-PP                 0.89          0.98          0.99          0.95          1.00                  1.10
PFC_Endothelial            0.90          1.10          1.10          1.10          1.10                  1.10
PFC_IN-PV                  1.10          1.10          1.10          1.00          1.10                  1.20
PFC_IN-SST                 1.10          1.00          1.00          0.99          1.00                  1.20
PFC_IN-SV2C                1.10          1.10          1.10          1.10          1.10                  1.10
PFC_IN-VIP                 1.10          1.20          1.20          1.10          1.10                  1.10
PFC_L2_3                   1.00          1.10          1.10          1.10          0.97                  1.20
PFC_L4                     1.10          1.10          1.10          1.10          1.10                  1.20
PFC_L5_6                   1.10          1.10          1.20          1.10          1.20                  0.87
PFC_L5_6-CC                1.00          1.00          1.00          1.00          0.98                  1.10
PFC_Microglia              0.80          1.10          0.89          0.88          0.81                  1.20
PFC_Neu-mat                0.99          0.96          0.89          0.90          0.83                  1.10
PFC_Neu-NRGN-I             0.66          0.89          0.76          0.88          0.80                  0.87
PFC_Neu-NRGN-II            0.54          0.76          0.81          0.63          0.77                  0.52
PFC_Oligodendrocytes       0.90          0.90          0.90          0.80          0.91                  1.20
PFC_OPC                    0.88          0.90          0.93          0.88          0.97                  1.20
                     KR_dca_direct_JSD.NES PS_dca_direct_Was.NES PS_dca_direct_JSD.NES
PFC_AST-FB                            1.10                  1.20                  1.10
PFC_AST-PP                            1.10                  1.00                  1.00
PFC_Endothelial                       0.82                  1.10                  0.77
PFC_IN-PV                             1.20                  1.10                  1.10
PFC_IN-SST                            1.20                  1.20                  1.10
PFC_IN-SV2C                           0.97                  1.00                  0.99
PFC_IN-VIP                            1.10                  1.10                  1.20
PFC_L2_3                              1.20                  1.20                  1.10
PFC_L4                                1.20                  1.20                  1.20
PFC_L5_6                              0.89                  0.83                  0.84
PFC_L5_6-CC                           1.10                  1.10                  1.10
PFC_Microglia                         0.98                  1.10                  0.90
PFC_Neu-mat                           1.00                  1.10                  1.00
PFC_Neu-NRGN-I                        0.99                  0.83                  0.90
PFC_Neu-NRGN-II                       0.79                 -0.98                  0.60
PFC_Oligodendrocytes                  1.00                  1.00                  0.97
PFC_OPC                               1.10                  1.10                  1.10
> 
> cols = c("DESeq2.pval", "PS_nb_Was.pval", "PS_dca_direct_Was.pval")
> w_ct = which(rowSums(sfari_pval[,cols] < 0.1) > 0)
> signif(sfari_pval[w_ct, cols],2)
           DESeq2.pval PS_nb_Was.pval PS_dca_direct_Was.pval
PFC_IN-PV        0.090          0.270                 0.1800
PFC_IN-SST       0.110          0.540                 0.0320
PFC_IN-VIP       0.230          0.110                 0.0530
PFC_L2_3         0.250          0.180                 0.0045
PFC_L4           0.074          0.091                 0.0320
PFC_L5_6         0.049          0.061                 0.9800
> signif(sfari_NES[w_ct, match(cols, colnames(sfari_pval))],2)
           DESeq2.NES PS_nb_Was.NES PS_dca_direct_Was.NES
PFC_IN-PV         1.1          1.00                  1.10
PFC_IN-SST        1.1          0.99                  1.20
PFC_IN-VIP        1.1          1.10                  1.10
PFC_L2_3          1.0          1.10                  1.20
PFC_L4            1.1          1.10                  1.20
PFC_L5_6          1.1          1.10                  0.83
> 
> # ------------------------------------------------------------------------
> # compare p-values of SFARI genes
> # ------------------------------------------------------------------------
> 
> fnm = "data/SFARI-Gene_genes_10-31-2019release_04-08-2020export.csv"
> SFARI_table0 = read.csv(fnm, as.is=TRUE)
> dim(SFARI_table0)
[1] 980   8
> SFARI_table0[1:2,]
  status gene.symbol                                            gene.name chromosome
1      9      ABCA10 ATP-binding cassette, sub-family A (ABC1), member 10         17
2      9      ABCA13           ATP binding cassette subfamily A member 13          7
                       genetic.category gene.score syndromic number.of.reports
1             Rare Single Gene Mutation          4         0                 1
2 Rare Single Gene Mutation, Functional          4         0                 5
> 
> table(SFARI_table0$gene.score, useNA="ifany")

   1    2    3    4    5    6 <NA> 
  25   66  202  463  177   25   22 
> table(SFARI_table0$syndromic, useNA="ifany")

  0   1 
872 108 
> table(SFARI_table0$gene.score <= 3, SFARI_table0$syndromic, useNA="ifany")
       
          0   1
  FALSE 627  38
  TRUE  242  51
  <NA>    3  19
> 
> sum(SFARI_table0$gene.score <= 3 | SFARI_table0$syndromic==1, na.rm = TRUE)
[1] 350
> 
> # the cell types that are associated with SFARI among at least 
> # of the the three methods at p-value 0.1
> cts_SFARI = rownames(sfari_pval)[w_ct]
> 
> df_all  = NULL
> pi1_all = NULL
> fun.pi0 = function(v){ 2 * length(which(v>0.5)) / length(v) }
> 
> for(ct1 in cts_SFARI){
+   # ct1 = "PFC_L2_3"
+   cat("\n-----------------------------------------------------\n")
+   cat(ct1)
+   cat("\n-----------------------------------------------------\n")
+   
+   pvals = pv_list[[ct1]]
+   
+   SFARI_table = SFARI_table0[SFARI_table0$gene.symbol %in% pvals$gene, ]
+   dim(SFARI_table)
+   
+   table(SFARI_table$syndromic, SFARI_table$gene.score)
+   w2kp = SFARI_table$syndromic == 1 | SFARI_table$gene.score %in% 1:3
+   genes_in_SFARI = SFARI_table$gene.symbol[w2kp]
+   length(genes_in_SFARI)
+   genes_in_SFARI[1:5]
+   
+   wSFARI = which(pvals$gene %in% genes_in_SFARI)
+   length(wSFARI)
+   pvals$SFARI = rep("No", nrow(pvals))
+   pvals$SFARI[wSFARI] = "Yes"
+   
+   pcut = 0.05
+   f1 = fisher.test(pvals$SFARI, pvals$DESeq2 < pcut)
+   f2 = fisher.test(pvals$SFARI, pvals$PS_nb_Was < pcut)
+   f3 = fisher.test(pvals$SFARI, pvals$PS_dca_direct_Was  < pcut)
+   
+   print(f1)
+   print(f2)
+   print(f3)
+   
+   methods = c("DESeq2", "IDEAS_NB", "IDEAS_DCA")
+   methods_idx = 3:1
+   
+   df = data.frame(cell_type=rep(ct1,3), methods_idx = methods_idx, methods=methods,
+                   odds   = c(f1$estimate, f2$estimate, f3$estimate),
+                   CILow  = c(f1$conf.int[1], f2$conf.int[1], f3$conf.int[1]), 
+                   CIHigh = c(f1$conf.int[2], f2$conf.int[2], f3$conf.int[2]),
+                   pval   = c(f1$p.value, f2$p.value, f3$p.value))
+ 
+   p = ggplot(df, aes(x = odds, y = methods_idx)) + 
+     geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
+     geom_errorbarh(aes(xmax = CIHigh, xmin = CILow), size = .5, 
+                    height = .2, color = "gray50") +
+     geom_point(size = 3.5, color = "orange") +
+     theme(panel.grid.minor = element_blank()) +
+     scale_y_continuous(breaks = methods_idx, labels = methods) +
+     scale_x_continuous(breaks = seq(0,2,0.5) ) +
+     coord_trans(x = "log10") + ylab("") + 
+     xlab("Odds ratio for SFARI genes") + ggtitle(gsub("PFC_", "", ct1))
+   
+   ggsave(sprintf("figures/step2_SFARI_%s_odds_ratio.pdf", ct1), p, 
+          width=3, height=1.3)
+   
+   df_all = rbind(df_all, df)
+   
+   k = 0
+   methods_label = c("DESeq2", "PS_nb_Was", "PS_dca_direct_Was")
+   pi0 = matrix(NA, nrow=length(methods), ncol=2)
+   
+   for(m1 in methods_label){
+     k = k + 1
+     pi0[k,] = tapply(pvals[[m1]], pvals$SFARI, fun.pi0)
+   }
+   
+   colnames(pi0) = c("not_SFARI", "SFARI")
+   pi1_df = data.frame(cell_type=rep(ct1,3), methods=methods, 1-pi0)
+   pi1_all = rbind(pi1_all, pi1_df)
+   pi1 = melt(pi1_df, id=c("cell_type","methods"), variable.name="group", 
+              value.name="non_null_prop")
+   
+   pi1$methods = factor(pi1$methods, 
+                        levels=c("DESeq2", "IDEAS_NB", "IDEAS_DCA"))
+   p2 = ggplot(pi1, aes(x = methods, y = non_null_prop, fill=group)) + 
+     geom_bar(stat="identity", position=position_dodge()) + 
+     scale_fill_brewer(palette="Dark2") + ggtitle(gsub("PFC_", "", ct1)) + 
+     theme(axis.title.x = element_blank()) + ylab("non-null proportion") + 
+     theme(legend.position = "topleft")
+     
+   ggsave(sprintf("figures/step2_SFARI_%s_non_null.pdf", ct1), p2, 
+          width=3, height=2.5)
+   
+ }

-----------------------------------------------------
PFC_IN-PV
-----------------------------------------------------

	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$DESeq2 < pcut
p-value = 0.2808
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8062767 1.8412881
sample estimates:
odds ratio 
  1.237413 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_nb_Was < pcut
p-value = 0.1528
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8543617 2.0658919
sample estimates:
odds ratio 
  1.353277 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_dca_direct_Was < pcut
p-value = 0.2647
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8624116 1.6104754
sample estimates:
odds ratio 
  1.185275 


-----------------------------------------------------
PFC_IN-SST
-----------------------------------------------------

	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$DESeq2 < pcut
p-value = 0.3231
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.7824061 1.8339868
sample estimates:
odds ratio 
  1.216689 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_nb_Was < pcut
p-value = 0.4361
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.7075364 1.9437389
sample estimates:
odds ratio 
  1.202193 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_dca_direct_Was < pcut
p-value = 0.02708
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 1.035433 1.929788
sample estimates:
odds ratio 
  1.419301 


-----------------------------------------------------
PFC_IN-VIP
-----------------------------------------------------

	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$DESeq2 < pcut
p-value = 0.2453
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8203588 1.8475547
sample estimates:
odds ratio 
   1.24833 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_nb_Was < pcut
p-value = 0.1257
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8926175 2.1178954
sample estimates:
odds ratio 
  1.397639 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_dca_direct_Was < pcut
p-value = 0.02174
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 1.046900 1.942775
sample estimates:
odds ratio 
  1.432462 


-----------------------------------------------------
PFC_L2_3
-----------------------------------------------------

	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$DESeq2 < pcut
p-value = 0.4855
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.7639157 1.6667067
sample estimates:
odds ratio 
   1.14441 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_nb_Was < pcut
p-value = 0.5983
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.7114653 1.6484381
sample estimates:
odds ratio 
  1.101875 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_dca_direct_Was < pcut
p-value = 0.02393
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 1.040082 1.924944
sample estimates:
odds ratio 
  1.423863 


-----------------------------------------------------
PFC_L4
-----------------------------------------------------

	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$DESeq2 < pcut
p-value = 0.1702
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8677147 1.9141392
sample estimates:
odds ratio 
  1.306536 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_nb_Was < pcut
p-value = 0.2612
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8017882 2.0380104
sample estimates:
odds ratio 
  1.306115 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_dca_direct_Was < pcut
p-value = 0.01328
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 1.076912 2.135421
sample estimates:
odds ratio 
  1.529173 


-----------------------------------------------------
PFC_L5_6
-----------------------------------------------------

	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$DESeq2 < pcut
p-value = 0.1437
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.8402058 2.2179966
sample estimates:
odds ratio 
  1.398566 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_nb_Was < pcut
p-value = 1
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.5747351 1.6259321
sample estimates:
odds ratio 
 0.9955277 


	Fisher's Exact Test for Count Data

data:  pvals$SFARI and pvals$PS_dca_direct_Was < pcut
p-value = 0.5799
alternative hypothesis: true odds ratio is not equal to 1
95 percent confidence interval:
 0.5853045 1.2929077
sample estimates:
odds ratio 
 0.8827273 

> 
> df_all
    cell_type methods_idx   methods      odds     CILow   CIHigh       pval
1   PFC_IN-PV           3    DESeq2 1.2374134 0.8062767 1.841288 0.28077116
2   PFC_IN-PV           2  IDEAS_NB 1.3532770 0.8543617 2.065892 0.15279896
3   PFC_IN-PV           1 IDEAS_DCA 1.1852755 0.8624116 1.610475 0.26471276
4  PFC_IN-SST           3    DESeq2 1.2166890 0.7824061 1.833987 0.32311565
5  PFC_IN-SST           2  IDEAS_NB 1.2021935 0.7075364 1.943739 0.43606918
6  PFC_IN-SST           1 IDEAS_DCA 1.4193007 1.0354325 1.929788 0.02708385
7  PFC_IN-VIP           3    DESeq2 1.2483300 0.8203588 1.847555 0.24528960
8  PFC_IN-VIP           2  IDEAS_NB 1.3976385 0.8926175 2.117895 0.12565313
9  PFC_IN-VIP           1 IDEAS_DCA 1.4324620 1.0469002 1.942775 0.02174051
10   PFC_L2_3           3    DESeq2 1.1444100 0.7639157 1.666707 0.48551670
11   PFC_L2_3           2  IDEAS_NB 1.1018754 0.7114653 1.648438 0.59833750
12   PFC_L2_3           1 IDEAS_DCA 1.4238632 1.0400816 1.924944 0.02393369
13     PFC_L4           3    DESeq2 1.3065358 0.8677147 1.914139 0.17015828
14     PFC_L4           2  IDEAS_NB 1.3061150 0.8017882 2.038010 0.26116119
15     PFC_L4           1 IDEAS_DCA 1.5291730 1.0769120 2.135421 0.01328080
16   PFC_L5_6           3    DESeq2 1.3985661 0.8402058 2.217997 0.14366542
17   PFC_L5_6           2  IDEAS_NB 0.9955277 0.5747351 1.625932 1.00000000
18   PFC_L5_6           1 IDEAS_DCA 0.8827273 0.5853045 1.292908 0.57986205
> pi1_all
    cell_type   methods  not_SFARI      SFARI
1   PFC_IN-PV    DESeq2 0.17390552 0.26406926
2   PFC_IN-PV  IDEAS_NB 0.17667417 0.07359307
3   PFC_IN-PV IDEAS_DCA 0.48641634 0.52380952
4  PFC_IN-SST    DESeq2 0.16927083 0.17703349
5  PFC_IN-SST  IDEAS_NB 0.17968750 0.21531100
6  PFC_IN-SST IDEAS_DCA 0.56145833 0.60765550
7  PFC_IN-VIP    DESeq2 0.19285042 0.32110092
8  PFC_IN-VIP  IDEAS_NB 0.18297272 0.32110092
9  PFC_IN-VIP IDEAS_DCA 0.47977422 0.54128440
10   PFC_L2_3    DESeq2 0.20244939 0.23255814
11   PFC_L2_3  IDEAS_NB 0.24168958 0.27906977
12   PFC_L2_3 IDEAS_DCA 0.38315421 0.42635659
13     PFC_L4    DESeq2 0.19475410 0.21551724
14     PFC_L4  IDEAS_NB 0.17737705 0.24137931
15     PFC_L4 IDEAS_DCA 0.34557377 0.41379310
16   PFC_L5_6    DESeq2 0.06366723 0.13469388
17   PFC_L5_6  IDEAS_NB 0.11658178 0.15102041
18   PFC_L5_6 IDEAS_DCA 0.37521222 0.38775510
> 
> df_all$cell_type  = gsub("PFC_", "", df_all$cell_type)
> pi1_all$cell_type = gsub("PFC_", "", pi1_all$cell_type)
> 
> df_all$methods = factor(df_all$methods, 
+                         levels=c("DESeq2", "IDEAS_NB", "IDEAS_DCA"))
> 
> pi1_all$methods = factor(pi1_all$methods, 
+                         levels=c("DESeq2", "IDEAS_NB", "IDEAS_DCA"))
> 
> gb1 = ggplot(data=df_all, aes(x=cell_type, y=-log10(pval), fill=methods)) +
+   geom_bar(stat="identity", position=position_dodge()) + 
+   geom_hline(yintercept=-log10(0.05), linetype="dashed", size=0.25) + 
+   annotate(geom = "text", y =1.4, x = 0.5, label ="pval=0.05", size = 4, hjust=0)
> 
> ggsave("figures/step2_SFARI_fisher_test.pdf", gb1, width=5, height=2)
> 
> gb2 = ggplot(data=pi1_all, aes(x=not_SFARI, y=SFARI, 
+                                color=methods, shape=cell_type)) +
+   geom_point() + geom_abline(intercept = 0, slope=1, linetype="dashed", size=0.25)
> 
> ggsave("figures/step2_SFARI_non_null_prop.pdf", gb2, width=6.5, height=4.5)
> 
> # -------------------------------------------------------------------
> # check GSEA results for one cell type
> # -------------------------------------------------------------------
> 
> plot_gsea <- function(gseaL, ct1){
+   # ct1 = "PFC_Microglia"
+   DESeq2    = gesaL[[ct1]]$DESeq2
+   IDEAS_NB  = gesaL[[ct1]]$PS_nb_Was
+   IDEAS_DCA = gesaL[[ct1]]$PS_dca_direct_Was
+   
+   dim(DESeq2)
+   dim(IDEAS_NB)
+   dim(IDEAS_DCA)
+   
+   pathways1 = intersect(DESeq2$pathway, IDEAS_NB$pathway)
+   pathways2 = intersect(DESeq2$pathway, IDEAS_DCA$pathway)
+   pathways = sort(union(pathways1, pathways2))
+   length(pathways)
+   
+   mat1 = match(pathways, DESeq2$pathway)
+   mat2 = match(pathways, IDEAS_NB$pathway)
+   mat3 = match(pathways, IDEAS_DCA$pathway)
+   
+   gd = data.frame(pathway = pathways, 
+                   DESeq2 = -log10(DESeq2$pval[mat1]),
+                   IDEAS_NB = -log10(IDEAS_NB$pval[mat2]),
+                   IDEAS_DCA = -log10(IDEAS_DCA$pval[mat3]))
+   
+   g1 = ggplot(gd, aes(x=DESeq2, y=IDEAS_NB)) + geom_point(alpha = 0.5)
+   g2 = ggplot(gd, aes(x=DESeq2, y=IDEAS_DCA)) + geom_point(alpha = 0.5)
+   
+   pdf(sprintf("figures/step2_GSEA_p_val_compare_%s.pdf", ct1), 
+       width=6, height=3)
+   print(ggarrange(g1, g2, ncol = 2, nrow = 1))
+   dev.off()
+ }
> 
> plot_gsea(gseaL, "PFC_IN-SST")
null device 
          1 
Warning message:
Removed 1 rows containing missing values (geom_point). 
> plot_gsea(gseaL, "PFC_Microglia")
null device 
          1 
Warning message:
Removed 22 rows containing missing values (geom_point). 
> 
> # -------------------------------------------------------------------
> # plot GSEA results for PFC_Microglia
> # -------------------------------------------------------------------
> 
> ct1 = "PFC_Microglia"
> IDEAS_DCA = gesaL[[ct1]]$PS_dca_direct_Was
> IDEAS_DCA = IDEAS_DCA[which(IDEAS_DCA$padj < 0.05),]
> IDEAS_DCA$pathway = gsub("REACTOME_", "", IDEAS_DCA$pathway)
> 
> df_gsea = as.data.frame(IDEAS_DCA)
> df_gsea = df_gsea[order(df_gsea$pval),]
> df_gsea$pathway = factor(df_gsea$pathway, levels=rev(df_gsea$pathway))
> p1 = ggplot(data=df_gsea, aes(x=pathway, y=-log10(pval))) +
+   geom_bar(stat="identity", fill="#56B4E9") + coord_flip() +
+   theme(legend.position = "none") + xlab("")
> 
> ggsave("figures/step2_GSEA_microglia_IDEAS_DCA.pdf", p1, width=6, height=3)
> 
> # -------------------------------------------------------------------
> # scatter plot
> # -------------------------------------------------------------------
> 
> pdf("figures/step2_compare_pval_DESeq2_vs_IDEAS.pdf", width=4.5, height=4.5)
> 
> for(ct1 in cell_types){
+   df1 = pv_list[[ct1]][,c("gene", "DESeq2", "PS_nb_Was", "PS_dca_direct_Was")]
+   
+   nms = c("DESeq2", "PS_nb_Was", "PS_dca_direct_Was")
+   fun1 = function(x){-log10(x)}
+   df2  = df1[, lapply(.SD, fun1), .SDcols = nms]
+   df2[,gene:=df1$gene]
+   setnames(df2, c("PS_nb_Was", "PS_dca_direct_Was"), 
+            c("IDEAS_NB", "IDEAS_DCA"))
+   
+   df2[,label_NB:=""]
+   df2[DESeq2 > 3 & IDEAS_NB < 1, label_NB:=gene]
+   df2[DESeq2 < 1 & IDEAS_NB > 3, label_NB:=gene]
+   
+   df2[,color_NB:="g11"]
+   df2[DESeq2 <= 2 & IDEAS_NB <= 2,  color_NB:="g00"]
+   df2[DESeq2 > 3 & IDEAS_NB < 1, color_NB:="g01"]
+   df2[DESeq2 < 1 & IDEAS_NB > 3, color_NB:="g01"]
+   
+   df2[,label_DCA:=""]
+   df2[DESeq2 > 3 & IDEAS_DCA < 1, label_DCA:=gene]
+   df2[DESeq2 < 1 & IDEAS_DCA > 3, label_DCA:=gene]
+   
+   df2[,color_DCA:="g11"]
+   df2[DESeq2 <= 2 & IDEAS_DCA <= 2,  color_DCA:="g00"]
+   df2[DESeq2 > 3 & IDEAS_DCA < 1, color_DCA:="g01"]
+   df2[DESeq2 < 1 & IDEAS_DCA > 3, color_DCA:="g01"]
+   
+   df2$color_NB = factor(df2$color_NB, levels = c("g00", "g11", "g01", "g10"))
+   df2$color_DCA = factor(df2$color_DCA, levels = c("g00", "g11", "g01", "g10"))
+   
+   g_NB = ggplot(df2, aes(x=DESeq2, y=IDEAS_NB, col=color_NB)) + 
+     geom_point(size = 0.4) +
+     scale_color_manual(values=c("#CCCCCC", "black", "#FC4E07", "#FC4E07")) +
+     theme(legend.position = "none") + ggtitle(gsub("PFC_", "", ct1))
+   
+   g_NB = g_NB + geom_text_repel(aes(label = df2$label_NB), size = 3.5, 
+                                 min.segment.length = 0, 
+                                 box.padding = unit(0.25, "lines"),
+                                 point.padding = unit(0.25, "lines")) 
+   
+   g_DCA = ggplot(df2, aes(x=DESeq2, y=IDEAS_DCA, col=color_DCA)) + 
+     geom_point(size = 0.4) +  
+     scale_color_manual(values=c("#CCCCCC", "black", "#FC4E07", "#FC4E07")) +
+     theme(legend.position = "none") + ggtitle(gsub("PFC_", "", ct1))
+   
+   g_DCA = g_DCA + geom_text_repel(aes(label = df2$label_DCA), size = 3.5, 
+                                   min.segment.length = 0, 
+                                   box.padding = unit(0.25, "lines"),
+                                   point.padding = unit(0.25, "lines"))
+   
+   print(g_NB)
+   print(g_DCA)
+   
+ }
There were 34 warnings (use warnings() to see them)
> 
> dev.off()
null device 
          1 
> 
> gc()
          used (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells 1143102 61.1    1900297 101.5         NA  1900297 101.5
Vcells 4436256 33.9   10148357  77.5      32768 10148113  77.5
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] reshape2_1.4.4    ggrepel_0.9.0     ggpubr_0.4.0      data.table_1.13.6 ggcorrplot_0.1.3  ggplot2_3.3.3    

loaded via a namespace (and not attached):
 [1] zip_2.1.1          Rcpp_1.0.5         RColorBrewer_1.1-2 plyr_1.8.6         pillar_1.4.7       compiler_4.0.3    
 [7] cellranger_1.1.0   forcats_0.5.0      tools_4.0.3        digest_0.6.27      lifecycle_0.2.0    tibble_3.0.4      
[13] gtable_0.3.0       pkgconfig_2.0.3    rlang_0.4.10       openxlsx_4.2.3     curl_4.3           haven_2.3.1       
[19] rio_0.5.16         stringr_1.4.0      withr_2.3.0        dplyr_1.0.2        generics_0.1.0     vctrs_0.3.6       
[25] hms_0.5.3          cowplot_1.1.1      grid_4.0.3         tidyselect_1.1.0   glue_1.4.2         R6_2.5.0          
[31] rstatix_0.6.0      readxl_1.3.1       foreign_0.8-81     carData_3.0-4      farver_2.0.3       tidyr_1.1.2       
[37] purrr_0.3.4        car_3.0-10         magrittr_2.0.1     backports_1.2.1    scales_1.1.1       ellipsis_0.3.1    
[43] abind_1.4-5        colorspace_2.0-0   ggsignif_0.6.0     labeling_0.4.2     stringi_1.5.3      munsell_0.5.0     
[49] broom_0.7.3        crayon_1.3.4      
> q(save="no")
> proc.time()
   user  system elapsed 
 20.077   0.605  21.012 
