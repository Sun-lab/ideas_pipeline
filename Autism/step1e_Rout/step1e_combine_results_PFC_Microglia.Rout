
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # this file combines the pvalue results from step1b, step1c, 
> # and step1d together to a dataframe
> 
> # files to load:
> #   -- the 3 pvalue files
> #   -- the orignal full count matrix to filter out genes with 
> #      too many zeros
> 
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_Microglia'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   eval(parse(text=args[[1]]))
+ }
> 
> grp
[1] "PFC_Microglia"
> 
> # ========================================================================
> # libraries and path
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> 
> 
> data.dir  = "./data"
> 
> full_dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> full_genes = rownames(full_dat1)  
> 
> n.zeros = rowSums(full_dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    2438    2505    2443    2530    2542 
> w2kp = which(n.zeros < 0.8*ncol(full_dat1))
> length(w2kp)
[1] 578
> 
> # DESeq2 pvalues did not filter out genes with large proportion of zeros
> # need to repeat the filtering out genes step to get the genes we want
> pvals_deseq2     = fread(sprintf("res/step1b_DESeq2_%s_adj_covariates.tsv", grp))
> pvals_nb_rd      = fread(sprintf("res/step1c_nb_pvals_%s.tsv", grp))
> pvals_dca_direct = fread(sprintf("res/step1d_dca_direct_pvals_%s.tsv", grp))
> 
> 
> # add row name and gene column to help verify results after filtering
> row.names(pvals_deseq2) = full_genes 
> pvals_deseq2$gene = full_genes
> pvals_deseq2 = pvals_deseq2[w2kp]
> 
> 
> pvals = cbind(pvals_nb_rd$gene, pvals_deseq2$pvalue, pvals_nb_rd[, 2:5], 
+               pvals_dca_direct[, 2:5])
> names(pvals)[1] = "gene"
> names(pvals)[2] = "DESeq2"
> 
> dim(pvals)
[1] 578  10
> head(pvals)
     gene      DESeq2 KR_nb_Was KR_nb_JSD PS_nb_Was PS_nb_JSD KR_dca_direct_Was
1:   GNB1 0.717100944        NA        NA        NA        NA            0.5528
2: SLC2A5 0.848126248    0.8018    0.7258    0.7390    0.6938            0.8982
3:   RERE 0.073559225    0.9796    0.7210    0.9390    0.7224            0.5318
4: EIF4G3 0.320804072    0.9090    0.6876    0.6286    0.5210            0.4700
5:  CAPZB 0.901842492    0.5500    0.7150    0.5034    0.6954            0.6866
6:  STMN1 0.004009905        NA        NA        NA        NA            0.4986
   KR_dca_direct_JSD PS_dca_direct_Was PS_dca_direct_JSD
1:            0.4846            0.4538            0.3674
2:            0.6916            0.8506            0.6140
3:            0.4952            0.5068            0.4458
4:            0.3120            0.4292            0.2514
5:            0.9884            0.6196            0.9838
6:            0.3890            0.4042            0.2612
> 
> file.name = sprintf("res/step1e_pvals_%s.tsv", 
+                     grp)
> fwrite(pvals, file = file.name, sep = "\t")
> 
> proc.time()
   user  system elapsed 
  1.522   0.227   1.760 
