
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # this version is based on step10b, different from the step10b version 
> # on cluster in the sense that var_per_cell is set to rd, although
> # this does not make any difference
> # may remove this input item in improved version
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_L4'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_L4"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "L4"
> 
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> #library(ideas)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> 
> # number of cores for multi-core computation
> nCore = 4
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of DCA are too large to save at GitHub, e.g., 
> # -rw-rw---- 1  1383783222 Dec 21 02:00 L2_3_mean_norm.tsv
> # -rw-rw---- 1   576171020 Oct  3 16:14 L2_3_dispersion.tsv.gz
> # -rwxrwx--- 1   486210994 Dec 16 22:38 L2_3_pi.tsv.gz
> # so we access them from this local folder:
> data.dca.dir = "../../ideas_data/Autism/dca_PFC_all/"
>   
> data.dir  = "data/"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  5109
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AAAGCAATCTGCTTGC-1_4341_BA46 AACGTTGTCCCACTTG-1_4341_BA46
DNAJC11                             1                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AACTCAGAGCACCGTC-1_4341_BA46 AACTCCCCACCAGTTA-1_4341_BA46
DNAJC11                             .                            1
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
5109 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 5109   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAAGCAATCTGCTTGC-1_4341_BA46      L4 4341_BA46       4341    PFC  13   M
2: AACGTTGTCCCACTTG-1_4341_BA46      L4 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2  3730 9318               1.0409959
2:                  7.2  4097 9606               0.5309182
   RNA ribosomal percent
1:             0.4614724
2:             1.0410160
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 5109   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAAGCAATCTGCTTGC-1_4341_BA46      L4 4341_BA46       4341    PFC  13   M
2: AACGTTGTCCCACTTG-1_4341_BA46      L4 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  3730 9318   1.0409959   0.4614724
2:   Control      CB6      SB2  16 7.2  4097 9606   0.5309182   1.0410160
> 
> summary(meta_cell)
                          cell             cluster           sample    
 AAACCTGCAAGCGCTC-1_6033_BA9:   1   L4         :5109   5387_BA9 : 571  
 AAACCTGCAGCATACT-1_5841_BA9:   1   AST-FB     :   0   5939_BA9 : 465  
 AAACCTGCAGGGATTG-1_5387_BA9:   1   AST-PP     :   0   5841_BA9 : 460  
 AAACCTGCATGCCACG-1_5864_BA9:   1   Endothelial:   0   6033_BA9 : 385  
 AAACCTGGTACGCTGC-1_5387_BA9:   1   IN-PV      :   0   5577_BA9 : 310  
 AAACCTGGTGACAAAT-1_5294_BA9:   1   IN-SST     :   0   4341_BA46: 297  
 (Other)                    :5103   (Other)    :   0   (Other)  :2621  
   individual   region          age        sex        diagnosis   
 Min.   :4341   ACC:   0   Min.   : 4.00   F:1125   ASD    :2864  
 1st Qu.:5403   PFC:5109   1st Qu.:12.00   M:3984   Control:2245  
 Median :5577              Median :15.00                          
 Mean   :5616              Mean   :15.47                          
 3rd Qu.:5939              3rd Qu.:20.00                          
 Max.   :6033              Max.   :22.00                          
                                                                  
    Capbatch    Seqbatch        PMI             RIN            genes     
 CB6    :2397   SB1:1617   Min.   : 3.00   Min.   :6.500   Min.   : 598  
 CB7    :1095   SB2:3492   1st Qu.:15.00   1st Qu.:7.400   1st Qu.:2704  
 CB2    : 810   SB3:   0   Median :19.00   Median :7.600   Median :3764  
 CB1    : 807              Mean   :19.91   Mean   :7.789   Mean   :3723  
 CB3    :   0              3rd Qu.:24.00   3rd Qu.:8.300   3rd Qu.:4705  
 CB4    :   0              Max.   :42.00   Max.   :9.000   Max.   :9738  
 (Other):   0                                                            
      UMIs        mitoPercent      riboPercent    
 Min.   :  805   Min.   :0.0090   Min.   :0.0000  
 1st Qu.: 5325   1st Qu.:0.2774   1st Qu.:0.5246  
 Median : 8567   Median :0.6530   Median :0.7484  
 Mean   : 9186   Mean   :0.9681   Mean   :0.8814  
 3rd Qu.:12097   3rd Qu.:1.3572   3rd Qu.:1.1002  
 Max.   :49440   Max.   :4.9940   Max.   :4.5474  
                                                  
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                          cell             cluster           sample    
 AAACCTGCAAGCGCTC-1_6033_BA9:   1   L4         :5109   5387_BA9 : 571  
 AAACCTGCAGCATACT-1_5841_BA9:   1   AST-FB     :   0   5939_BA9 : 465  
 AAACCTGCAGGGATTG-1_5387_BA9:   1   AST-PP     :   0   5841_BA9 : 460  
 AAACCTGCATGCCACG-1_5864_BA9:   1   Endothelial:   0   6033_BA9 : 385  
 AAACCTGGTACGCTGC-1_5387_BA9:   1   IN-PV      :   0   5577_BA9 : 310  
 AAACCTGGTGACAAAT-1_5294_BA9:   1   IN-SST     :   0   4341_BA46: 297  
 (Other)                    :5103   (Other)    :   0   (Other)  :2621  
   individual   region          age          sex        diagnosis    Capbatch  
 5387   : 571   ACC:   0   Min.   :-2.6084   F:1125   ASD    :2864   CB1: 807  
 5939   : 465   PFC:5109   1st Qu.:-0.7891   M:3984   Control:2245   CB2: 810  
 5841   : 460              Median :-0.1069                           CB6:2397  
 6033   : 385              Mean   : 0.0000                           CB7:1095  
 5577   : 310              3rd Qu.: 1.0301                                     
 4341   : 297              Max.   : 1.4849                                     
 (Other):2621                                                                  
 Seqbatch        PMI               RIN              genes           UMIs      
 SB1:1617   Min.   :-2.3851   Min.   :-2.2653   Min.   : 598   Min.   :  805  
 SB2:3492   1st Qu.:-0.6921   1st Qu.:-0.6834   1st Qu.:2704   1st Qu.: 5325  
            Median :-0.1277   Median :-0.3318   Median :3764   Median : 8567  
            Mean   : 0.0000   Mean   : 0.0000   Mean   :3723   Mean   : 9186  
            3rd Qu.: 0.5777   3rd Qu.: 0.8986   3rd Qu.:4705   3rd Qu.:12097  
            Max.   : 3.1173   Max.   : 2.1290   Max.   :9738   Max.   :49440  
                                                                              
  mitoPercent      riboPercent    
 Min.   :0.0090   Min.   :0.0000  
 1st Qu.:0.2774   1st Qu.:0.5246  
 Median :0.6530   Median :0.7484  
 Mean   :0.9681   Mean   :0.8814  
 3rd Qu.:1.3572   3rd Qu.:1.1002  
 Max.   :4.9940   Max.   :4.5474  
                                  
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1  807    0
  CB2  810    0
  CB6    0 2397
  CB7    0 1095
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.252   1.968   2.278   2.296   2.578   5.318 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
            5109                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 5109 
> table(meta_cell$diagnosis)

    ASD Control 
   2864    2245 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

5976:Control     5403:ASD     5144:ASD     5294:ASD 5936:Control     5978:ASD 
          75           77           86          103          104          104 
5879:Control 5958:Control 5538:Control 5408:Control     5864:ASD     5419:ASD 
         158          162          170          172          177          181 
    5531:ASD     5565:ASD     5278:ASD 5893:Control     5945:ASD 4341:Control 
         191          192          210          226          233          297 
5577:Control     6033:ASD     5841:ASD     5939:ASD 5387:Control 
         310          385          460          465          571 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5976 5403 5144 5294 5936 5978 5879 5958 5538 5408 5864 5419 5531 5565 5278 5893 
  75   77   86  103  104  104  158  162  170  172  177  181  191  192  210  226 
5945 4341 5577 6033 5841 5939 5387 
 233  297  310  385  460  465  571 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region       age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.561728   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.926166   M       ASD      CB1      SB1
          PMI        RIN
1: -0.5509884 -1.0349158
2: -2.3851402  0.3712568
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    3654    4504    4078    4884    5106 
> 
> 0.6*ncol(dat1)
[1] 3065.4
> 0.8*ncol(dat1)
[1] 4087.2
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
15127  2914 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
11709  6332 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
 8220  9821 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 6332 5109
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
        AAAGCAATCTGCTTGC-1_4341_BA46 AACGTTGTCCCACTTG-1_4341_BA46
DNAJC11                            1                            .
VPS13D                             3                            1
PER3                               .                            .
KIF1B                              4                            7
PRKCZ                              1                            1
        AACTCAGAGCACCGTC-1_4341_BA46 AACTCCCCACCAGTTA-1_4341_BA46
DNAJC11                            .                            1
VPS13D                             1                            2
PER3                               .                            .
KIF1B                              5                           11
PRKCZ                              .                            1
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 5109   16
> meta_cell[1:2,]
                           cell cluster    sample individual region       age
1: AAAGCAATCTGCTTGC-1_4341_BA46      L4 4341_BA46       4341    PFC -0.561728
2: AACGTTGTCCCACTTG-1_4341_BA46      L4 4341_BA46       4341    PFC -0.561728
   sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.5509884 -1.034916  3730 9318   1.0409959
2:   M   Control      CB6      SB2 -0.5509884 -1.034916  4097 9606   0.5309182
   riboPercent
1:   0.4614724
2:   1.0410160
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
5109 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    720    4717    7560    8074   10610   43550 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 5109   17
> meta_cell[1:2,]
                           cell cluster    sample individual region       age
1: AAAGCAATCTGCTTGC-1_4341_BA46      L4 4341_BA46       4341    PFC -0.561728
2: AACGTTGTCCCACTTG-1_4341_BA46      L4 4341_BA46       4341    PFC -0.561728
   sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.5509884 -1.034916  3730 9318   1.0409959
2:   M   Control      CB6      SB2 -0.5509884 -1.034916  4097 9606   0.5309182
   riboPercent   rd
1:   0.4614724 8363
2:   1.0410160 8419
> 
> names(meta_cell)[1] = "cell_id"
> mean(meta_cell$cell_id == colnames(dat1))
[1] 1
> 
> 
> # ------------------------------------------------------------------------
> # read in DCA estimates
> # ------------------------------------------------------------------------
>   
> f_mean = file.path(data.dca.dir, paste0(grp1, "_mean_norm.tsv"))
> f_disp = file.path(data.dca.dir, paste0(grp1, "_dispersion.tsv.gz"))
> f_pi   = file.path(data.dca.dir, paste0(grp1, "_pi.tsv.gz"))
>   
> dca_mean = fread(f_mean, sep="\t", data.table = FALSE)
> dca_disp = fread(f_disp)
> dca_pi   = fread(f_pi)
>   
> dim(dca_mean)
[1] 18041  5110
> dim(dca_disp)
[1] 18041  5110
> dim(dca_pi)
[1] 18041  5110
>   
> dca_mean[1:2,1:5]
       V1 AAAGCAATCTGCTTGC-1_4341_BA46 AACGTTGTCCCACTTG-1_4341_BA46
1 DNAJC11                     0.105671                     0.106416
2    NADK                     0.027286                     0.024439
  AACTCAGAGCACCGTC-1_4341_BA46 AACTCCCCACCAGTTA-1_4341_BA46
1                     0.092865                     0.114653
2                     0.026650                     0.021407
> dca_disp[1:2,1:5]
        V1 AAAGCAATCTGCTTGC-1_4341_BA46 AACGTTGTCCCACTTG-1_4341_BA46
1: DNAJC11                     5.702353                     5.902330
2:    NADK                     2.747826                     2.715878
   AACTCAGAGCACCGTC-1_4341_BA46 AACTCCCCACCAGTTA-1_4341_BA46
1:                     6.046598                     5.920516
2:                     2.743707                     2.767551
> dca_pi[1:2,1:5]
        V1 AAAGCAATCTGCTTGC-1_4341_BA46 AACGTTGTCCCACTTG-1_4341_BA46
1: DNAJC11                     0.042468                     0.051697
2:    NADK                     0.303460                     0.371404
   AACTCAGAGCACCGTC-1_4341_BA46 AACTCCCCACCAGTTA-1_4341_BA46
1:                     0.058068                     0.048882
2:                     0.406449                     0.364596
>   
> table(meta_cell$cell_id == colnames(dca_mean)[-1])

TRUE 
5109 
> table(rownames(dat1) %in% dca_mean$V1)

TRUE 
6332 
>   
> w2kp = match(rownames(dat1), dca_mean$V1)
>   
> dca_mean = dca_mean[w2kp,]
> dca_disp = dca_disp[w2kp,]
> dca_pi   = dca_pi[w2kp,]
>   
> table(rownames(dat1) == dca_mean$V1)

TRUE 
6332 
> table(rownames(dat1) == dca_disp$V1)

TRUE 
6332 
> table(rownames(dat1) == dca_pi$V1)

TRUE 
6332 
>   
> rownames(dca_mean) = dca_mean$V1
> rownames(dca_disp) = dca_disp$V1
> rownames(dca_pi)   = dca_pi$V1
>   
> dca_mean = data.matrix(dca_mean[,-1])
> dca_disp = data.matrix(dca_disp[,-1, with=FALSE])
> dca_pi   = data.matrix(dca_pi[,-1,   with=FALSE])
>   
> table(colnames(dat1) == colnames(dca_mean))

TRUE 
5109 
> table(colnames(dat1) == colnames(dca_disp))

TRUE 
5109 
> table(colnames(dat1) == colnames(dca_pi))

TRUE 
5109 
>   
> dca_par_list = list(dca_mean, dca_disp, dca_pi)
> 
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3216834  171.8    5801131  309.9         NA   5266358  281.3
Vcells 152839961 1166.1  429990346 3280.6      65536 429788461 3279.1
> 
> rm(dca_mean)
> rm(dca_disp)
> rm(dca_pi)
> rm(dat1)
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3216788  171.8    5801131  309.9         NA   5266358  281.3
Vcells 131640371 1004.4  429990346 3280.6      65536 429788461 3279.1
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3216793  171.8    5801131  309.9         NA   5266358  281.3
Vcells 131640390 1004.4  429990346 3280.6      65536 429788461 3279.1
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3216793  171.8    5801131  309.9         NA   5266358  281.3
Vcells 131640390 1004.4  429990346 3280.6      65536 429788461 3279.1
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Fri Oct 29 15:00:36 2021"
>   
>   
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> 
> date()
[1] "Fri Oct 29 15:00:36 2021"
> 
> dist_list = list()
> 
> for(fit_method in c("dca_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(dca_par_list, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: dca_direct, d_metric: Was

Fri Oct 29 15:00:36 2021
estimating distribution for each gene and each individual by dca_direct

fit_method: dca_direct, d_metric: JSD

Fri Oct 29 15:02:37 2021
estimating distribution for each gene and each individual by dca_direct

> 
> date()
[1] "Fri Oct 29 15:04:40 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3254379  173.9    5801131  309.9         NA   5801131  309.9
Vcells 138524299 1056.9  429990346 3280.6      65536 429788461 3279.1
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 23  5
> X[1:2,]
  (Intercept)       age sexM SeqbatchSB2        RIN
1           1 -0.561728    1           1 -1.0349158
2           1 -1.926166    1           0  0.3712568
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Fri Oct 29 15:04:41 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
dca_direct_Was
Fri Oct 29 15:04:41 2021
dca_direct_JSD
Fri Oct 29 15:07:43 2021
> date()
[1] "Fri Oct 29 15:10:41 2021"
> 
> dim(pval_KR)
[1] 6332    2
> pval_KR[1:2,]
        KR_dca_direct_Was KR_dca_direct_JSD
DNAJC11            0.1178            0.0896
VPS13D             0.1466            0.5596
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Fri Oct 29 15:10:41 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
dca_direct_Was
Fri Oct 29 15:10:41 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

dca_direct_JSD
Fri Oct 29 15:23:15 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Fri Oct 29 15:35:20 2021"
> 
> summary(pval_KR)
 KR_dca_direct_Was KR_dca_direct_JSD
 Min.   :0.0004    Min.   :0.0001   
 1st Qu.:0.1965    1st Qu.:0.2066   
 Median :0.4300    Median :0.4492   
 Mean   :0.4530    Mean   :0.4664   
 3rd Qu.:0.6988    3rd Qu.:0.7205   
 Max.   :1.0000    Max.   :0.9998   
> summary(pval_PS)
 PS_dca_direct_Was PS_dca_direct_JSD
 Min.   :0.0001    Min.   :0.0001   
 1st Qu.:0.1036    1st Qu.:0.1168   
 Median :0.2983    Median :0.3366   
 Mean   :0.3689    Mean   :0.3912   
 3rd Qu.:0.6014    3rd Qu.:0.6441   
 Max.   :1.0000    Max.   :1.0000   
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 6332    5
> head(df)
           gene KR_dca_direct_Was KR_dca_direct_JSD PS_dca_direct_Was
DNAJC11 DNAJC11            0.1178            0.0896            0.0298
VPS13D   VPS13D            0.1466            0.5596            0.0893
PER3       PER3            0.3474            0.1702            0.2750
KIF1B     KIF1B            0.3774            0.4718            0.2718
PRKCZ     PRKCZ            0.2238            0.2300            0.0384
KCNAB2   KCNAB2            0.0386            0.0737            0.0134
        PS_dca_direct_JSD
DNAJC11            0.0343
VPS13D             0.5500
PER3               0.1090
KIF1B              0.3350
PRKCZ              0.0498
KCNAB2             0.0307
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_dca_direct_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_dca_direct_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3394562  181.3    5801131  309.9         NA   5801131  309.9
Vcells 139593433 1065.1  429990346 3280.6      65536 429990342 3280.6
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.5       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.7         
[16] data.table_1.14.0    Matrix_1.3-3         MASS_7.3-54         

loaded via a namespace (and not attached):
 [1] segmented_1.3-4     nlme_3.1-152        matrixStats_0.61.0 
 [4] numDeriv_2016.8-1.1 tools_4.1.0         backports_1.2.1    
 [7] utf8_1.2.1          R6_2.5.0            vegan_2.5-7        
[10] DBI_1.1.1           mgcv_1.8-35         colorspace_2.0-2   
[13] permute_0.9-5       withr_2.4.2         tidyselect_1.1.1   
[16] curl_4.3.2          compiler_4.1.0      quantreg_5.86      
[19] SparseM_1.81        labeling_0.4.2      scales_1.1.1       
[22] mvtnorm_1.1-2       digest_0.6.27       foreign_0.8-81     
[25] minqa_1.2.4         mixtools_1.2.0      R.utils_2.11.0     
[28] rio_0.5.27          pkgconfig_2.0.3     lme4_1.1-27.1      
[31] bbmle_1.0.23.1      rlang_0.4.11        readxl_1.3.1       
[34] farver_2.1.0        generics_0.1.0      R.oo_1.24.0        
[37] zip_2.2.0           car_3.0-11          magrittr_2.0.1     
[40] Rcpp_1.0.7          munsell_0.5.0       fansi_0.5.0        
[43] ape_5.5             abind_1.4-5         R.methodsS3_1.8.1  
[46] lifecycle_1.0.0     stringi_1.6.2       CompQuadForm_1.4.3 
[49] carData_3.0-4       plyr_1.8.6          grid_4.1.0         
[52] bdsmatrix_1.3-4     forcats_0.5.1       crayon_1.4.1       
[55] lattice_0.20-44     cowplot_1.1.1       haven_2.4.1        
[58] splines_4.1.0       hms_1.1.0           pillar_1.6.1       
[61] boot_1.3-28         ggsignif_0.6.2      codetools_0.2-18   
[64] stats4_4.1.0        glue_1.4.2          GUniFrac_1.2       
[67] vctrs_0.3.8         nloptr_1.2.2.2      MatrixModels_0.5-0 
[70] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[73] tidyr_1.1.3         kernlab_0.9-29      assertthat_0.2.1   
[76] openxlsx_4.2.4      broom_0.7.8         coda_0.19-4        
[79] rstatix_0.7.0       PearsonDS_1.2       survival_3.2-11    
[82] tibble_3.1.2        conquer_1.0.2       cluster_2.1.2      
[85] ellipsis_0.3.2     
> q(save="no")
> proc.time()
    user   system  elapsed 
7945.026  302.814 2108.021 
