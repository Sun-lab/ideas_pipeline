
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ========================================================================
> # this code is based on step1d_dca_direct.R to use saver for denoising
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_Neu-mat'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_Neu-mat"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "Neu-mat"
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
Registered S3 methods overwritten by 'car':
  method                          from
  influence.merMod                lme4
  cooks.distance.influence.merMod lme4
  dfbeta.influence.merMod         lme4
  dfbetas.influence.merMod        lme4
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> # number of cores for multi-core computation
> nCore = 12
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of SAVER are too large to save at GitHub,  
> # so we access them from this local folder:
> saver.dir = "~/research/scRNAseq/data/autism/saver_PFC"
> data.dir  = "data"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  2054
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AAACGGGGTTCTGGTA-1_4341_BA46 AACTCCCTCCCTCAGT-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AACTGGTCACTATCTT-1_4341_BA46 AAGGAGCAGTTAAGTG-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
2054 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 2054   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACGGGGTTCTGGTA-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC  13   M
2: AACTCCCTCCCTCAGT-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2  1865 2962               0.2363268
2:                  7.2  1241 1863               3.2206119
   RNA ribosomal percent
1:             1.6205267
2:             0.4830918
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 2054   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACGGGGTTCTGGTA-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC  13   M
2: AACTCCCTCCCTCAGT-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  1865 2962   0.2363268   1.6205267
2:   Control      CB6      SB2  16 7.2  1241 1863   3.2206119   0.4830918
> 
> summary(meta_cell)
                          cell             cluster           sample   
 AAACCTGAGACTTTCG-1_5565_BA9:   1   Neu-mat    :2054   5387_BA9 :222  
 AAACCTGCAACACCCG-1_6033_BA9:   1   AST-FB     :   0   5841_BA9 :208  
 AAACCTGCACACATGT-1_5565_BA9:   1   AST-PP     :   0   5976_BA9 :187  
 AAACCTGGTGTGCGTC-1_5978_BA9:   1   Endothelial:   0   5939_BA9 :176  
 AAACCTGTCCCATTAT-1_5387_BA9:   1   IN-PV      :   0   6033_BA9 :172  
 AAACCTGTCCTTGACC-1_5294_BA9:   1   IN-SST     :   0   4341_BA46:154  
 (Other)                    :2048   (Other)    :   0   (Other)  :935  
   individual   region          age        sex        diagnosis   
 Min.   :4341   ACC:   0   Min.   : 4.00   F: 523   ASD    :1091  
 1st Qu.:5408   PFC:2054   1st Qu.:12.00   M:1531   Control: 963  
 Median :5841              Median :13.00                          
 Mean   :5643              Mean   :13.97                          
 3rd Qu.:5945              3rd Qu.:19.00                          
 Max.   :6033              Max.   :22.00                          
                                                                  
    Capbatch   Seqbatch        PMI             RIN            genes     
 CB6    :913   SB1: 441   Min.   : 3.00   Min.   :6.500   Min.   : 500  
 CB7    :700   SB2:1613   1st Qu.:15.00   1st Qu.:7.200   1st Qu.: 649  
 CB1    :263   SB3:   0   Median :21.00   Median :7.600   Median : 917  
 CB2    :178              Mean   :19.96   Mean   :7.654   Mean   :1059  
 CB3    :  0              3rd Qu.:23.00   3rd Qu.:8.000   3rd Qu.:1397  
 CB4    :  0              Max.   :42.00   Max.   :9.000   Max.   :2951  
 (Other):  0                                                            
      UMIs       mitoPercent      riboPercent    
 Min.   : 577   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 854   1st Qu.:0.5215   1st Qu.:0.4179  
 Median :1332   Median :1.0974   Median :0.7523  
 Mean   :1636   Mean   :1.4445   Mean   :0.9454  
 3rd Qu.:2203   3rd Qu.:2.0987   3rd Qu.:1.2011  
 Max.   :7787   Max.   :4.9943   Max.   :4.9492  
                                                 
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                          cell             cluster           sample   
 AAACCTGAGACTTTCG-1_5565_BA9:   1   Neu-mat    :2054   5387_BA9 :222  
 AAACCTGCAACACCCG-1_6033_BA9:   1   AST-FB     :   0   5841_BA9 :208  
 AAACCTGCACACATGT-1_5565_BA9:   1   AST-PP     :   0   5976_BA9 :187  
 AAACCTGGTGTGCGTC-1_5978_BA9:   1   Endothelial:   0   5939_BA9 :176  
 AAACCTGTCCCATTAT-1_5387_BA9:   1   IN-PV      :   0   6033_BA9 :172  
 AAACCTGTCCTTGACC-1_5294_BA9:   1   IN-SST     :   0   4341_BA46:154  
 (Other)                    :2048   (Other)    :   0   (Other)  :935  
   individual  region          age          sex        diagnosis    Capbatch 
 5387   :222   ACC:   0   Min.   :-1.9894   F: 523   ASD    :1091   CB1:263  
 5841   :208   PFC:2054   1st Qu.:-0.3927   M:1531   Control: 963   CB2:178  
 5976   :187              Median :-0.1932                           CB6:913  
 5939   :176              Mean   : 0.0000                           CB7:700  
 6033   :172              3rd Qu.: 1.0043                                    
 4341   :154              Max.   : 1.6030                                    
 (Other):935                                                                 
 Seqbatch        PMI               RIN               genes           UMIs     
 SB1: 441   Min.   :-2.5451   Min.   :-1.98918   Min.   : 500   Min.   : 577  
 SB2:1613   1st Qu.:-0.7445   1st Qu.:-0.78302   1st Qu.: 649   1st Qu.: 854  
            Median : 0.1558   Median :-0.09379   Median : 917   Median :1332  
            Mean   : 0.0000   Mean   : 0.00000   Mean   :1059   Mean   :1636  
            3rd Qu.: 0.4559   3rd Qu.: 0.59545   3rd Qu.:1397   3rd Qu.:2203  
            Max.   : 3.3069   Max.   : 2.31853   Max.   :2951   Max.   :7787  
                                                                              
  mitoPercent      riboPercent    
 Min.   :0.0000   Min.   :0.0000  
 1st Qu.:0.5215   1st Qu.:0.4179  
 Median :1.0974   Median :0.7523  
 Mean   :1.4445   Mean   :0.9454  
 3rd Qu.:2.0987   3rd Qu.:1.2011  
 Max.   :4.9943   Max.   :4.9492  
                                  
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
      SB1 SB2
  CB1 263   0
  CB2 178   0
  CB6   0 913
  CB7   0 700
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.134   1.303   1.434   1.471   1.604   2.939 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0             2054                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 2054 
> table(meta_cell$diagnosis)

    ASD Control 
   1091     963 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

    5144:ASD     5403:ASD 5538:Control     5419:ASD 5577:Control     5945:ASD 
           6            9           19           25           28           45 
5879:Control 5936:Control     5294:ASD     5278:ASD     5531:ASD     5978:ASD 
          47           59           60           61           65           66 
5958:Control     5864:ASD 5408:Control 5893:Control     5565:ASD 4341:Control 
          77           79           81           89          119          154 
    6033:ASD     5939:ASD 5976:Control     5841:ASD 5387:Control 
         172          176          187          208          222 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5144 5403 5538 5419 5577 5945 5879 5936 5294 5278 5531 5978 5958 5864 5408 5893 
   6    9   19   25   28   45   47   59   60   61   65   66   77   79   81   89 
5565 4341 6033 5939 5976 5841 5387 
 119  154  172  176  187  208  222 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.1931658   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.3906385   M       ASD      CB1      SB1
          PMI        RIN
1: -0.5944278 -0.7830215
2: -2.5450744  0.5954453
> 
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    1921    2007    1935    2039    2054 
> 
> 0.6*ncol(dat1)
[1] 1232.4
> 0.8*ncol(dat1)
[1] 1643.2
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
17716   325 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
16887  1154 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
15129  2912 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 1154 2054
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
      AAACGGGGTTCTGGTA-1_4341_BA46 AACTCCCTCCCTCAGT-1_4341_BA46
KIF1B                            1                            .
GNB1                             .                            .
CHD5                             2                            2
PRDM2                            1                            .
ACAP3                            1                            .
      AACTGGTCACTATCTT-1_4341_BA46 AAGGAGCAGTTAAGTG-1_4341_BA46
KIF1B                            .                            .
GNB1                             3                            .
CHD5                             .                            2
PRDM2                            1                            1
ACAP3                            .                            .
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 2054   16
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACGGGGTTCTGGTA-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC -0.1931658
2: AACTCCCTCCCTCAGT-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC -0.1931658
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.5944278 -0.7830215  1865 2962   0.2363268
2:   M   Control      CB6      SB2 -0.5944278 -0.7830215  1241 1863   3.2206119
   riboPercent
1:   1.6205267
2:   0.4830918
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
2054 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  255.0   466.0   732.0   917.3  1265.0  4924.0 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 2054   17
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACGGGGTTCTGGTA-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC -0.1931658
2: AACTCCCTCCCTCAGT-1_4341_BA46 Neu-mat 4341_BA46       4341    PFC -0.1931658
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.5944278 -0.7830215  1865 2962   0.2363268
2:   M   Control      CB6      SB2 -0.5944278 -0.7830215  1241 1863   3.2206119
   riboPercent   rd
1:   1.6205267 1530
2:   0.4830918 1028
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
2054 
> 
> # ------------------------------------------------------------------------
> # read in SAVER estimates
> # ------------------------------------------------------------------------
> 
> f_name = file.path(saver.dir, sprintf("saver_%s.rds", grp))
> saver  = readRDS(f_name)
> dim(saver)
[1] 18041  2054
> saver[1:3,1:2]
        AAACGGGGTTCTGGTA-1_4341_BA46 AACTCCCTCCCTCAGT-1_4341_BA46
DNAJC11                        0.203                        0.210
NADK                           0.026                        0.020
MASP2                          0.043                        0.022
> 
> table(rownames(dat1) %in% rownames(saver))

TRUE 
1154 
>   
> w2kp = match(rownames(dat1), rownames(saver))
>   
> saver = saver[w2kp,]
> 
> table(rownames(dat1) == rownames(saver))

TRUE 
1154 
> 
> summary(c(saver))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
   0.022    0.948    1.356    2.492    2.247 1440.576 
> 
> 
> # ---------------------------------------------------------------
> # permute case control labels
> # ---------------------------------------------------------------
> 
> seed_v = c(5608, 9903, 9968, 7527, 7879, 
+            3760, 2066, 7577, 5926, 9670)
> 
> set.seed(seed_v[1])
> print(paste("random seed for permutation = ", seed_v[1]))
[1] "random seed for permutation =  5608"
> 
> ori_diagnosis = meta_ind$diagnosis
> meta_ind$diagnosis = sample(ori_diagnosis)
> print(meta_ind$diagnosis)
 [1] Control Control Control Control ASD     Control Control Control Control
[10] ASD     ASD     ASD     ASD     ASD     ASD     Control ASD     ASD    
[19] Control ASD     ASD     ASD     ASD    
Levels: Control ASD
> head(meta_ind)
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.1931658   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.3906385   M   Control      CB1      SB1
3:  5278_PFC       5278    PFC  0.2059917   F   Control      CB1      SB1
4:  5294_BA9       5294    PFC  1.0043068   M   Control      CB6      SB2
5:  5387_BA9       5387    PFC -0.3927446   M       ASD      CB6      SB2
6:  5403_PFC       5403    PFC  0.4055705   M   Control      CB1      SB1
          PMI         RIN
1: -0.5944278 -0.78302151
2: -2.5450744  0.59544532
3: -1.0445770  2.31852886
4: -0.5944278  1.11237038
5: -1.0445770 -0.09378809
6:  2.2565172 -1.47225492
> summary(meta_ind)
       sample     individual region        age          sex      diagnosis 
 4341_BA46: 1   4341   : 1   ACC: 0   Min.   :-1.9894   F: 6   Control:10  
 5144_PFC : 1   5144   : 1   PFC:23   1st Qu.:-0.3927   M:17   ASD    :13  
 5278_PFC : 1   5278   : 1            Median : 0.2060                      
 5294_BA9 : 1   5294   : 1            Mean   : 0.2147                      
 5387_BA9 : 1   5387   : 1            3rd Qu.: 1.0043                      
 5403_PFC : 1   5403   : 1            Max.   : 1.6030                      
 (Other)  :17   (Other):17                                                 
 Capbatch Seqbatch      PMI               RIN          
 CB1:6    SB1:10   Min.   :-2.5451   Min.   :-1.98918  
 CB2:4    SB2:13   1st Qu.:-0.5944   1st Qu.:-0.52456  
 CB6:7             Median : 0.1558   Median :-0.09379  
 CB7:6             Mean   : 0.1167   Mean   : 0.10100  
                   3rd Qu.: 0.6060   3rd Qu.: 0.85391  
                   Max.   : 3.3069   Max.   : 2.31853  
                                                       
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Sun Jul 11 03:27:15 2021"
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> count_input = saver
> 
> dist_list = list()
> 
> for(fit_method in c("saver_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(count_input, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: saver_direct, d_metric: Was

Sun Jul 11 03:27:15 2021
the count_matrix includes 1154 genes in 2054 cells

estimating distribution for each gene and each individual by saver_direct

fit_method: saver_direct, d_metric: JSD

Sun Jul 11 03:27:19 2021
the count_matrix includes 1154 genes in 2054 cells

estimating distribution for each gene and each individual by saver_direct

> 
> date()
[1] "Sun Jul 11 03:27:23 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3149830 168.3    5749398 307.1         NA  5749398 307.1
Vcells 11776705  89.9   41317132 315.3      32768 68153809 520.0
> 
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 23  5
> X[1:2,]
  (Intercept)        age sexM SeqbatchSB2        RIN
1           1 -0.1931658    1           1 -0.7830215
2           1 -1.3906385    1           0  0.5954453
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Sun Jul 11 03:27:25 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
saver_direct_Was
Sun Jul 11 03:27:25 2021
saver_direct_JSD
Sun Jul 11 03:27:47 2021
> date()
[1] "Sun Jul 11 03:28:10 2021"
> 
> dim(pval_KR)
[1] 1154    2
> pval_KR[1:2,]
      KR_saver_direct_Was KR_saver_direct_JSD
KIF1B              0.4816              0.8130
GNB1               0.5542              0.5246
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0051      Min.   :0.0018     
 1st Qu.:0.4254      1st Qu.:0.3961     
 Median :0.6288      Median :0.6022     
 Mean   :0.6125      Mean   :0.5940     
 3rd Qu.:0.8204      3rd Qu.:0.8015     
 Max.   :1.0000      Max.   :0.9996     
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Sun Jul 11 03:28:10 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
saver_direct_Was
Sun Jul 11 03:28:10 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

saver_direct_JSD
Sun Jul 11 03:29:40 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Sun Jul 11 03:31:09 2021"
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0051      Min.   :0.0018     
 1st Qu.:0.4254      1st Qu.:0.3961     
 Median :0.6288      Median :0.6022     
 Mean   :0.6125      Mean   :0.5940     
 3rd Qu.:0.8204      3rd Qu.:0.8015     
 Max.   :1.0000      Max.   :0.9996     
> summary(pval_PS)
 PS_saver_direct_Was PS_saver_direct_JSD
 Min.   :0.0019      Min.   :0.0012     
 1st Qu.:0.3406      1st Qu.:0.3311     
 Median :0.5537      Median :0.5328     
 Mean   :0.5552      Mean   :0.5411     
 3rd Qu.:0.7778      3rd Qu.:0.7666     
 Max.   :0.9994      Max.   :0.9988     
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 1154    5
> head(df)
       gene KR_saver_direct_Was KR_saver_direct_JSD PS_saver_direct_Was
KIF1B KIF1B              0.4816              0.8130              0.4778
GNB1   GNB1              0.5542              0.5246              0.5028
CHD5   CHD5              0.9550              0.8882              0.9374
PRDM2 PRDM2              0.5876              0.3592              0.5516
ACAP3 ACAP3              0.8206              0.9780              0.8178
RERE   RERE              0.8134              0.9842              0.7294
      PS_saver_direct_JSD
KIF1B              0.7954
GNB1               0.4588
CHD5               0.9346
PRDM2              0.3364
ACAP3              0.9064
RERE               0.9872
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_saver_direct_perm_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_saver_direct_perm_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3305546 176.6    5749398 307.1         NA  5749398 307.1
Vcells 12086786  92.3   38203309 291.5      32768 68153809 520.0
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.3       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.2         
[16] data.table_1.13.6    Matrix_1.3-0         MASS_7.3-53         

loaded via a namespace (and not attached):
 [1] segmented_1.3-3     nlme_3.1-151        matrixStats_0.57.0 
 [4] numDeriv_2016.8-1.1 tools_4.0.3         backports_1.2.1    
 [7] R6_2.5.0            vegan_2.5-7         mgcv_1.8-33        
[10] colorspace_2.0-0    permute_0.9-5       withr_2.3.0        
[13] tidyselect_1.1.0    curl_4.3            compiler_4.0.3     
[16] quantreg_5.75       SparseM_1.78        labeling_0.4.2     
[19] scales_1.1.1        mvtnorm_1.1-1       digest_0.6.27      
[22] foreign_0.8-81      minqa_1.2.4         mixtools_1.2.0     
[25] rio_0.5.16          pkgconfig_2.0.3     lme4_1.1-26        
[28] bbmle_1.0.23.1      rlang_0.4.10        readxl_1.3.1       
[31] farver_2.0.3        generics_0.1.0      zip_2.1.1          
[34] car_3.0-10          magrittr_2.0.1      Rcpp_1.0.5         
[37] munsell_0.5.0       ape_5.4-1           abind_1.4-5        
[40] lifecycle_0.2.0     stringi_1.5.3       CompQuadForm_1.4.3 
[43] carData_3.0-4       plyr_1.8.6          grid_4.0.3         
[46] bdsmatrix_1.3-4     forcats_0.5.0       crayon_1.3.4       
[49] lattice_0.20-41     cowplot_1.1.1       haven_2.3.1        
[52] splines_4.0.3       hms_0.5.3           pillar_1.4.7       
[55] boot_1.3-25         ggsignif_0.6.0      codetools_0.2-18   
[58] stats4_4.0.3        glue_1.4.2          GUniFrac_1.1       
[61] vctrs_0.3.6         nloptr_1.2.2.2      MatrixModels_0.4-1 
[64] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[67] tidyr_1.1.2         kernlab_0.9-29      openxlsx_4.2.3     
[70] broom_0.7.3         coda_0.19-4         rstatix_0.6.0      
[73] PearsonDS_1.1       survival_3.2-7      tibble_3.0.4       
[76] conquer_1.0.2       cluster_2.1.0       statmod_1.4.35     
[79] ellipsis_0.3.1     
> q(save="no")
> proc.time()
    user   system  elapsed 
2480.393  109.801  239.646 
