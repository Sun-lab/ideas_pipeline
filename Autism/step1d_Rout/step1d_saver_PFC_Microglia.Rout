
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ========================================================================
> # this code is based on step1d_dca_direct.R to use saver for denoising
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_Microglia'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_Microglia"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "Microglia"
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
Registered S3 methods overwritten by 'car':
  method                          from
  influence.merMod                lme4
  cooks.distance.influence.merMod lme4
  dfbeta.influence.merMod         lme4
  dfbetas.influence.merMod        lme4
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> # number of cores for multi-core computation
> nCore = 12
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of SAVER are too large to save at GitHub,  
> # so we access them from this local folder:
> saver.dir = "~/research/scRNAseq/data/autism/saver_PFC"
> data.dir  = "data"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  2542
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AAACCTGTCTCATTCA-1_4341_BA46 AAAGCAACAGCTGGCT-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AACGTTGCACCAGGTC-1_4341_BA46 AACTCAGCACATTCGA-1_4341_BA46
DNAJC11                             1                            1
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            1                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
2542 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 2542   16
> meta_cell[1:2,]
                           cell   cluster    sample individual region age sex
1: AAACCTGTCTCATTCA-1_4341_BA46 Microglia 4341_BA46       4341    PFC  13   M
2: AAAGCAACAGCTGGCT-1_4341_BA46 Microglia 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2   621  846               0.2364066
2:                  7.2   820 1088               1.0110294
   RNA ribosomal percent
1:             0.9456265
2:             1.3786765
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 2542   16
> meta_cell[1:2,]
                           cell   cluster    sample individual region age sex
1: AAACCTGTCTCATTCA-1_4341_BA46 Microglia 4341_BA46       4341    PFC  13   M
2: AAAGCAACAGCTGGCT-1_4341_BA46 Microglia 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2   621  846   0.2364066   0.9456265
2:   Control      CB6      SB2  16 7.2   820 1088   1.0110294   1.3786765
> 
> summary(meta_cell)
                               cell             cluster    
 AAACCTGCAAACTGCT-1_5841_BA9     :   1   Microglia  :2542  
 AAACCTGTCACAGGCC-1_5278_PFC     :   1   AST-FB     :   0  
 AAACCTGTCTCATTCA-1_4341_BA46    :   1   AST-PP     :   0  
 AAACGGGAGTTTCCTT-1_5538_PFC_Nova:   1   Endothelial:   0  
 AAACGGGCAAGCCTAT-1_5278_PFC     :   1   IN-PV      :   0  
 AAACGGGGTTAAGACA-1_5841_BA9     :   1   IN-SST     :   0  
 (Other)                         :2536   (Other)    :   0  
           sample       individual   region          age       sex     
 5841_BA9     : 298   Min.   :4341   ACC:   0   Min.   : 6.0   F: 514  
 5879_PFC_Nova: 227   1st Qu.:5387   PFC:2542   1st Qu.:12.0   M:2028  
 5144_PFC     : 196   Median :5538              Median :15.0           
 5278_PFC     : 183   Mean   :5554              Mean   :14.6           
 5387_BA9     : 179   3rd Qu.:5879              3rd Qu.:19.0           
 5936_PFC_Nova: 175   Max.   :6033              Max.   :22.0           
 (Other)      :1284                                                    
   diagnosis       Capbatch    Seqbatch        PMI             RIN       
 ASD    :1222   CB6    :1058   SB1:1410   Min.   : 3.00   Min.   :6.800  
 Control:1320   CB1    : 980   SB2:1132   1st Qu.:13.00   1st Qu.:7.500  
                CB2    : 430   SB3:   0   Median :16.00   Median :8.000  
                CB7    :  74              Mean   :17.32   Mean   :8.008  
                CB3    :   0              3rd Qu.:23.00   3rd Qu.:8.400  
                CB4    :   0              Max.   :42.00   Max.   :9.000  
                (Other):   0                                             
     genes             UMIs         mitoPercent      riboPercent    
 Min.   : 500.0   Min.   : 562.0   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 585.0   1st Qu.: 745.0   1st Qu.:0.2235   1st Qu.:0.8987  
 Median : 680.0   Median : 887.0   Median :0.4132   Median :1.3047  
 Mean   : 721.3   Mean   : 958.7   Mean   :0.5697   Mean   :1.4735  
 3rd Qu.: 805.0   3rd Qu.:1085.8   3rd Qu.:0.7304   3rd Qu.:1.7896  
 Max.   :2637.0   Max.   :4417.0   Max.   :4.6235   Max.   :4.9954  
                                                                    
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                               cell             cluster    
 AAACCTGCAAACTGCT-1_5841_BA9     :   1   Microglia  :2542  
 AAACCTGTCACAGGCC-1_5278_PFC     :   1   AST-FB     :   0  
 AAACCTGTCTCATTCA-1_4341_BA46    :   1   AST-PP     :   0  
 AAACGGGAGTTTCCTT-1_5538_PFC_Nova:   1   Endothelial:   0  
 AAACGGGCAAGCCTAT-1_5278_PFC     :   1   IN-PV      :   0  
 AAACGGGGTTAAGACA-1_5841_BA9     :   1   IN-SST     :   0  
 (Other)                         :2536   (Other)    :   0  
           sample       individual   region          age           sex     
 5841_BA9     : 298   5841   : 298   ACC:   0   Min.   :-1.94098   F: 514  
 5879_PFC_Nova: 227   5879   : 227   PFC:2542   1st Qu.:-0.58642   M:2028  
 5144_PFC     : 196   5144   : 196              Median : 0.09085           
 5278_PFC     : 183   5278   : 183              Mean   : 0.00000           
 5387_BA9     : 179   5387   : 179              3rd Qu.: 0.99389           
 5936_PFC_Nova: 175   5936   : 175              Max.   : 1.67117           
 (Other)      :1284   (Other):1284                                         
   diagnosis    Capbatch   Seqbatch        PMI               RIN          
 ASD    :1222   CB1: 980   SB1:1410   Min.   :-2.0559   Min.   :-2.34132  
 Control:1320   CB2: 430   SB2:1132   1st Qu.:-0.6201   1st Qu.:-0.98493  
                CB6:1058              Median :-0.1893   Median :-0.01608  
                CB7:  74              Mean   : 0.0000   Mean   : 0.00000  
                                      3rd Qu.: 0.8158   3rd Qu.: 0.75900  
                                      Max.   : 3.5439   Max.   : 1.92162  
                                                                          
     genes             UMIs         mitoPercent      riboPercent    
 Min.   : 500.0   Min.   : 562.0   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 585.0   1st Qu.: 745.0   1st Qu.:0.2235   1st Qu.:0.8987  
 Median : 680.0   Median : 887.0   Median :0.4132   Median :1.3047  
 Mean   : 721.3   Mean   : 958.7   Mean   :0.5697   Mean   :1.4735  
 3rd Qu.: 805.0   3rd Qu.:1085.8   3rd Qu.:0.7304   3rd Qu.:1.7896  
 Max.   :2637.0   Max.   :4417.0   Max.   :4.6235   Max.   :4.9954  
                                                                    
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1  980    0
  CB2  430    0
  CB6    0 1058
  CB7    0   74
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.110   1.253   1.309   1.316   1.361   2.110 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
21 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
21 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0             2542 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 2542 
> table(meta_cell$diagnosis)

    ASD Control 
   1222    1320 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

    5565:ASD     5864:ASD     5939:ASD     6033:ASD     5403:ASD     5419:ASD 
           5            8            8           17           32           42 
5958:Control 5538:Control 4341:Control     5945:ASD     5531:ASD     5294:ASD 
          44           97          105          134          149          150 
5893:Control 5408:Control 5577:Control 5936:Control 5387:Control     5278:ASD 
         157          167          169          175          179          183 
    5144:ASD 5879:Control     5841:ASD 
         196          227          298 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5565 5864 5939 6033 5403 5419 5958 5538 4341 5945 5531 5294 5893 5408 5577 5936 
   5    8    8   17   32   42   44   97  105  134  149  150  157  167  169  175 
5387 5278 5144 5879 5841 
 179  183  196  227  298 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 21
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 21 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.3606651   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.7152240   M       ASD      CB1      SB1
          PMI         RIN
1: -0.1893379 -1.56624435
2: -2.0559428 -0.01608398
> 
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
      9      12 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   4
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    2438    2505    2443    2530    2542 
> 
> 0.6*ncol(dat1)
[1] 1525.2
> 0.8*ncol(dat1)
[1] 2033.6
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
17900   141 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
17463   578 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
16249  1792 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1]  578 2542
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
       AAACCTGTCTCATTCA-1_4341_BA46 AAAGCAACAGCTGGCT-1_4341_BA46
GNB1                              .                            .
SLC2A5                            .                            .
RERE                              .                            1
EIF4G3                            1                            .
CAPZB                             .                            .
       AACGTTGCACCAGGTC-1_4341_BA46 AACTCAGCACATTCGA-1_4341_BA46
GNB1                              .                            1
SLC2A5                            .                            .
RERE                              2                            1
EIF4G3                            .                            .
CAPZB                             1                            1
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 2542   16
> meta_cell[1:2,]
                           cell   cluster    sample individual region
1: AAACCTGTCTCATTCA-1_4341_BA46 Microglia 4341_BA46       4341    PFC
2: AAAGCAACAGCTGGCT-1_4341_BA46 Microglia 4341_BA46       4341    PFC
          age sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs
1: -0.3606651   M   Control      CB6      SB2 -0.1893379 -1.566244   621  846
2: -0.3606651   M   Control      CB6      SB2 -0.1893379 -1.566244   820 1088
   mitoPercent riboPercent
1:   0.2364066   0.9456265
2:   1.0110294   1.3786765
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
2542 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  153.0   301.0   363.0   385.6   442.0  1606.0 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 2542   17
> meta_cell[1:2,]
                           cell   cluster    sample individual region
1: AAACCTGTCTCATTCA-1_4341_BA46 Microglia 4341_BA46       4341    PFC
2: AAAGCAACAGCTGGCT-1_4341_BA46 Microglia 4341_BA46       4341    PFC
          age sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs
1: -0.3606651   M   Control      CB6      SB2 -0.1893379 -1.566244   621  846
2: -0.3606651   M   Control      CB6      SB2 -0.1893379 -1.566244   820 1088
   mitoPercent riboPercent  rd
1:   0.2364066   0.9456265 367
2:   1.0110294   1.3786765 449
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
2542 
> 
> # ------------------------------------------------------------------------
> # read in SAVER estimates
> # ------------------------------------------------------------------------
> 
> f_name = file.path(saver.dir, sprintf("saver_%s.rds", grp))
> saver  = readRDS(f_name)
> dim(saver)
[1] 18041  2542
> saver[1:3,1:2]
        AAACCTGTCTCATTCA-1_4341_BA46 AAAGCAACAGCTGGCT-1_4341_BA46
DNAJC11                        0.240                        0.220
NADK                           0.040                        0.052
MASP2                          0.045                        0.020
> 
> table(rownames(dat1) %in% rownames(saver))

TRUE 
 578 
>   
> w2kp = match(rownames(dat1), rownames(saver))
>   
> saver = saver[w2kp,]
> 
> table(rownames(dat1) == rownames(saver))

TRUE 
 578 
> 
> summary(c(saver))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
   0.034    1.452    2.019    3.731    3.230 1426.404 
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Fri Jul  9 19:29:24 2021"
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> count_input = saver
> 
> dist_list = list()
> 
> for(fit_method in c("saver_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(count_input, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: saver_direct, d_metric: Was

Fri Jul  9 19:29:24 2021
the count_matrix includes 578 genes in 2542 cells

estimating distribution for each gene and each individual by saver_direct

fit_method: saver_direct, d_metric: JSD

Fri Jul  9 19:29:26 2021
the count_matrix includes 578 genes in 2542 cells

estimating distribution for each gene and each individual by saver_direct

> 
> date()
[1] "Fri Jul  9 19:29:29 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells 3147157 168.1    5749397 307.1         NA  5749397 307.1
Vcells 9645236  73.6   31423380 239.8      32768 80304804 612.7
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
 9 12 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 21  5
> X[1:2,]
  (Intercept)        age sexM SeqbatchSB2         RIN
1           1 -0.3606651    1           1 -1.56624435
2           1 -1.7152240    1           0 -0.01608398
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Fri Jul  9 19:29:31 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
saver_direct_Was
Fri Jul  9 19:29:31 2021
saver_direct_JSD
Fri Jul  9 19:29:43 2021
> date()
[1] "Fri Jul  9 19:29:57 2021"
> 
> dim(pval_KR)
[1] 578   2
> pval_KR[1:2,]
       KR_saver_direct_Was KR_saver_direct_JSD
GNB1                0.5918              0.8854
SLC2A5              0.6214              0.6468
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0227      Min.   :0.0167     
 1st Qu.:0.4919      1st Qu.:0.4752     
 Median :0.6782      Median :0.6761     
 Mean   :0.6598      Mean   :0.6531     
 3rd Qu.:0.8559      3rd Qu.:0.8463     
 Max.   :1.0000      Max.   :0.9998     
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Fri Jul  9 19:29:57 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
saver_direct_Was
Fri Jul  9 19:29:57 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

saver_direct_JSD
Fri Jul  9 19:30:44 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Fri Jul  9 19:31:30 2021"
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0227      Min.   :0.0167     
 1st Qu.:0.4919      1st Qu.:0.4752     
 Median :0.6782      Median :0.6761     
 Mean   :0.6598      Mean   :0.6531     
 3rd Qu.:0.8559      3rd Qu.:0.8463     
 Max.   :1.0000      Max.   :0.9998     
> summary(pval_PS)
 PS_saver_direct_Was PS_saver_direct_JSD
 Min.   :0.0241      Min.   :0.0172     
 1st Qu.:0.3741      1st Qu.:0.3773     
 Median :0.5840      Median :0.5936     
 Mean   :0.5865      Mean   :0.5877     
 3rd Qu.:0.8105      3rd Qu.:0.8017     
 Max.   :1.0000      Max.   :0.9982     
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 578   5
> head(df)
         gene KR_saver_direct_Was KR_saver_direct_JSD PS_saver_direct_Was
GNB1     GNB1              0.5918              0.8854              0.5726
SLC2A5 SLC2A5              0.6214              0.6468              0.5318
RERE     RERE              0.8254              0.9304              0.7636
EIF4G3 EIF4G3              0.9184              0.9018              0.8910
CAPZB   CAPZB              0.5442              0.5354              0.5196
STMN1   STMN1              0.7752              0.7280              0.7242
       PS_saver_direct_JSD
GNB1                0.7986
SLC2A5              0.5688
RERE                0.9000
EIF4G3              0.8458
CAPZB               0.4942
STMN1               0.6742
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_saver_direct_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_saver_direct_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
          used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells 3304732 176.5    5749397 307.1         NA  5749397 307.1
Vcells 9942643  75.9   37788056 288.3      32768 80304804 612.7
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.3       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.2         
[16] data.table_1.13.6    Matrix_1.3-0         MASS_7.3-53         

loaded via a namespace (and not attached):
 [1] segmented_1.3-3     nlme_3.1-151        matrixStats_0.57.0 
 [4] numDeriv_2016.8-1.1 tools_4.0.3         backports_1.2.1    
 [7] R6_2.5.0            vegan_2.5-7         mgcv_1.8-33        
[10] colorspace_2.0-0    permute_0.9-5       withr_2.3.0        
[13] tidyselect_1.1.0    curl_4.3            compiler_4.0.3     
[16] quantreg_5.75       SparseM_1.78        labeling_0.4.2     
[19] scales_1.1.1        mvtnorm_1.1-1       digest_0.6.27      
[22] foreign_0.8-81      minqa_1.2.4         mixtools_1.2.0     
[25] rio_0.5.16          pkgconfig_2.0.3     lme4_1.1-26        
[28] bbmle_1.0.23.1      rlang_0.4.10        readxl_1.3.1       
[31] farver_2.0.3        generics_0.1.0      zip_2.1.1          
[34] car_3.0-10          magrittr_2.0.1      Rcpp_1.0.5         
[37] munsell_0.5.0       ape_5.4-1           abind_1.4-5        
[40] lifecycle_0.2.0     stringi_1.5.3       CompQuadForm_1.4.3 
[43] carData_3.0-4       plyr_1.8.6          grid_4.0.3         
[46] bdsmatrix_1.3-4     forcats_0.5.0       crayon_1.3.4       
[49] lattice_0.20-41     cowplot_1.1.1       haven_2.3.1        
[52] splines_4.0.3       hms_0.5.3           pillar_1.4.7       
[55] boot_1.3-25         ggsignif_0.6.0      codetools_0.2-18   
[58] stats4_4.0.3        glue_1.4.2          GUniFrac_1.1       
[61] vctrs_0.3.6         nloptr_1.2.2.2      MatrixModels_0.4-1 
[64] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[67] tidyr_1.1.2         kernlab_0.9-29      openxlsx_4.2.3     
[70] broom_0.7.3         coda_0.19-4         rstatix_0.6.0      
[73] PearsonDS_1.1       survival_3.2-7      tibble_3.0.4       
[76] conquer_1.0.2       cluster_2.1.0       statmod_1.4.35     
[79] ellipsis_0.3.1     
> q(save="no")
> proc.time()
    user   system  elapsed 
1265.294   71.494  133.353 
