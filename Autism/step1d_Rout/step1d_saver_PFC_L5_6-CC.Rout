
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ========================================================================
> # this code is based on step1d_dca_direct.R to use saver for denoising
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_L5_6-CC'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_L5_6-CC"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "L5_6-CC"
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
Registered S3 methods overwritten by 'car':
  method                          from
  influence.merMod                lme4
  cooks.distance.influence.merMod lme4
  dfbeta.influence.merMod         lme4
  dfbetas.influence.merMod        lme4
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> # number of cores for multi-core computation
> nCore = 12
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of SAVER are too large to save at GitHub,  
> # so we access them from this local folder:
> saver.dir = "~/research/scRNAseq/data/autism/saver_PFC"
> data.dir  = "data"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  2346
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AAACCTGTCTTAGCCC-1_4341_BA46 AAAGATGGTACCGCTG-1_4341_BA46
DNAJC11                             .                            1
NADK                                .                            .
MASP2                               .                            .
CLCN6                               1                            .
TNFRSF1B                            .                            .
         AAAGATGGTGGTACAG-1_4341_BA46 AAAGTAGCAGCGTCCA-1_4341_BA46
DNAJC11                             .                            .
NADK                                1                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
2346 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 2346   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACCTGTCTTAGCCC-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC  13   M
2: AAAGATGGTACCGCTG-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                  7.2  6770 22991               0.3697099
2:                  7.2  5723 16830               0.2198455
   RNA ribosomal percent
1:             0.8264103
2:             1.3844326
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 2346   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACCTGTCTTAGCCC-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC  13   M
2: AAAGATGGTACCGCTG-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes  UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  6770 22991   0.3697099   0.8264103
2:   Control      CB6      SB2  16 7.2  5723 16830   0.2198455   1.3844326
> 
> summary(meta_cell)
                           cell             cluster           sample    
 AAACCTGAGACTGTAA-1_5144_PFC :   1   L5/6-CC    :2346   5387_BA9 : 318  
 AAACCTGAGTACCGGA-1_5841_BA9 :   1   AST-FB     :   0   4341_BA46: 236  
 AAACCTGCAATTGCTG-1_5577_BA9 :   1   AST-PP     :   0   5577_BA9 : 219  
 AAACCTGGTTCGTTGA-1_5387_BA9 :   1   Endothelial:   0   5841_BA9 : 216  
 AAACCTGTCTTAGCCC-1_4341_BA46:   1   IN-PV      :   0   5864_BA9 : 169  
 AAACGGGAGCGTGAGT-1_5958_BA9 :   1   IN-SST     :   0   5893_PFC : 150  
 (Other)                     :2340   (Other)    :   0   (Other)  :1038  
   individual   region          age        sex        diagnosis   
 Min.   :4341   ACC:   0   Min.   : 4.00   F: 314   ASD    :1093  
 1st Qu.:5387   PFC:2346   1st Qu.:12.00   M:2032   Control:1253  
 Median :5577              Median :14.00                          
 Mean   :5552              Mean   :15.11                          
 3rd Qu.:5893              3rd Qu.:20.00                          
 Max.   :6033              Max.   :22.00                          
                                                                  
    Capbatch    Seqbatch        PMI             RIN            genes      
 CB6    :1265   SB1: 548   Min.   : 3.00   Min.   :6.500   Min.   : 1451  
 CB7    : 533   SB2:1798   1st Qu.:15.00   1st Qu.:7.400   1st Qu.: 4396  
 CB2    : 311   SB3:   0   Median :19.00   Median :7.600   Median : 5568  
 CB1    : 237              Mean   :20.14   Mean   :7.765   Mean   : 5538  
 CB3    :   0              3rd Qu.:23.00   3rd Qu.:8.300   3rd Qu.: 6736  
 CB4    :   0              Max.   :42.00   Max.   :9.000   Max.   :11903  
 (Other):   0                                                             
      UMIs        mitoPercent       riboPercent    
 Min.   : 2220   Min.   :0.01064   Min.   :0.0817  
 1st Qu.:11363   1st Qu.:0.25975   1st Qu.:0.4379  
 Median :17076   Median :0.62589   Median :0.6008  
 Mean   :18570   Mean   :1.08712   Mean   :0.7918  
 3rd Qu.:23890   3rd Qu.:1.57705   3rd Qu.:0.8657  
 Max.   :80867   Max.   :4.99937   Max.   :4.9830  
                                                   
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                           cell             cluster           sample    
 AAACCTGAGACTGTAA-1_5144_PFC :   1   L5/6-CC    :2346   5387_BA9 : 318  
 AAACCTGAGTACCGGA-1_5841_BA9 :   1   AST-FB     :   0   4341_BA46: 236  
 AAACCTGCAATTGCTG-1_5577_BA9 :   1   AST-PP     :   0   5577_BA9 : 219  
 AAACCTGGTTCGTTGA-1_5387_BA9 :   1   Endothelial:   0   5841_BA9 : 216  
 AAACCTGTCTTAGCCC-1_4341_BA46:   1   IN-PV      :   0   5864_BA9 : 169  
 AAACGGGAGCGTGAGT-1_5958_BA9 :   1   IN-SST     :   0   5893_PFC : 150  
 (Other)                     :2340   (Other)    :   0   (Other)  :1038  
   individual   region          age          sex        diagnosis    Capbatch  
 5387   : 318   ACC:   0   Min.   :-2.4110   F: 314   ASD    :1093   CB1: 237  
 4341   : 236   PFC:2346   1st Qu.:-0.6751   M:2032   Control:1253   CB2: 311  
 5577   : 219              Median :-0.2411                           CB6:1265  
 5841   : 216              Mean   : 0.0000                           CB7: 533  
 5864   : 169              3rd Qu.: 1.0608                                     
 5893   : 150              Max.   : 1.4948                                     
 (Other):1038                                                                  
 Seqbatch        PMI               RIN              genes            UMIs      
 SB1: 548   Min.   :-2.1066   Min.   :-2.3391   Min.   : 1451   Min.   : 2220  
 SB2:1798   1st Qu.:-0.6313   1st Qu.:-0.6745   1st Qu.: 4396   1st Qu.:11363  
            Median :-0.1396   Median :-0.3046   Median : 5568   Median :17076  
            Mean   : 0.0000   Mean   : 0.0000   Mean   : 5538   Mean   :18570  
            3rd Qu.: 0.3522   3rd Qu.: 0.9902   3rd Qu.: 6736   3rd Qu.:23890  
            Max.   : 2.6881   Max.   : 2.2849   Max.   :11903   Max.   :80867  
                                                                               
  mitoPercent       riboPercent    
 Min.   :0.01064   Min.   :0.0817  
 1st Qu.:0.25975   1st Qu.:0.4379  
 Median :0.62589   Median :0.6008  
 Mean   :1.08712   Mean   :0.7918  
 3rd Qu.:1.57705   3rd Qu.:0.8657  
 Max.   :4.99937   Max.   :4.9830  
                                   
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1  237    0
  CB2  311    0
  CB6    0 1265
  CB7    0  533
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.523   2.589   3.037   3.120   3.570   7.091 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0             2346                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 2346 
> table(meta_cell$diagnosis)

    ASD Control 
   1093    1253 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

    5278:ASD     5144:ASD     5403:ASD 5879:Control 5538:Control 5936:Control 
           5           19           26           33           38           41 
    5978:ASD     5419:ASD 5958:Control 5976:Control     5294:ASD     5945:ASD 
          44           45           47           58           71           78 
    5565:ASD     5531:ASD     5939:ASD 5408:Control     6033:ASD 5893:Control 
          88          100          105          113          127          150 
    5864:ASD     5841:ASD 5577:Control 4341:Control 5387:Control 
         169          216          219          236          318 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5278 5144 5403 5879 5538 5936 5978 5419 5958 5976 5294 5945 5565 5531 5939 5408 
   5   19   26   33   38   41   44   45   47   58   71   78   88  100  105  113 
6033 5893 5864 5841 5577 4341 5387 
 127  150  169  216  219  236  318 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4581206   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.7600598   M       ASD      CB1      SB1
          PMI        RIN
1: -0.5083778 -1.0444068
2: -2.1066158  0.4352812
> 
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    1266    1852    1645    2159    2344 
> 
> 0.6*ncol(dat1)
[1] 1407.6
> 0.8*ncol(dat1)
[1] 1876.8
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
12713  5328 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
 8750  9291 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
 5503 12538 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 9291 2346
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
        AAACCTGTCTTAGCCC-1_4341_BA46 AAAGATGGTACCGCTG-1_4341_BA46
DNAJC11                            .                            1
VPS13D                             4                            5
PER3                               .                            1
KIF1B                             13                            9
PRKCZ                              3                            3
        AAAGATGGTGGTACAG-1_4341_BA46 AAAGTAGCAGCGTCCA-1_4341_BA46
DNAJC11                            .                            .
VPS13D                             9                            1
PER3                               .                            .
KIF1B                              2                            3
PRKCZ                              1                            1
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 2346   16
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACCTGTCTTAGCCC-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC -0.4581206
2: AAAGATGGTACCGCTG-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC -0.4581206
   sex diagnosis Capbatch Seqbatch        PMI       RIN genes  UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.5083778 -1.044407  6770 22991   0.3697099
2:   M   Control      CB6      SB2 -0.5083778 -1.044407  5723 16830   0.2198455
   riboPercent
1:   0.8264103
2:   1.3844326
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
2346 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   2125   10690   16107   17470   22464   76184 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 2346   17
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACCTGTCTTAGCCC-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC -0.4581206
2: AAAGATGGTACCGCTG-1_4341_BA46 L5/6-CC 4341_BA46       4341    PFC -0.4581206
   sex diagnosis Capbatch Seqbatch        PMI       RIN genes  UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.5083778 -1.044407  6770 22991   0.3697099
2:   M   Control      CB6      SB2 -0.5083778 -1.044407  5723 16830   0.2198455
   riboPercent    rd
1:   0.8264103 21547
2:   1.3844326 15763
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
2346 
> 
> # ------------------------------------------------------------------------
> # read in SAVER estimates
> # ------------------------------------------------------------------------
> 
> f_name = file.path(saver.dir, sprintf("saver_%s.rds", grp))
> saver  = readRDS(f_name)
> dim(saver)
[1] 18041  2346
> saver[1:3,1:2]
        AAACCTGTCTTAGCCC-1_4341_BA46 AAAGATGGTACCGCTG-1_4341_BA46
DNAJC11                        0.182                        0.192
NADK                           0.046                        0.034
MASP2                          0.026                        0.028
> 
> table(rownames(dat1) %in% rownames(saver))

TRUE 
9291 
>   
> w2kp = match(rownames(dat1), rownames(saver))
>   
> saver = saver[w2kp,]
> 
> table(rownames(dat1) == rownames(saver))

TRUE 
9291 
> 
> summary(c(saver))
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
   0.0010    0.1140    0.2080    0.5716    0.4370 1171.5080 
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Fri Jul  9 22:15:02 2021"
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> count_input = saver
> 
> dist_list = list()
> 
> for(fit_method in c("saver_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(count_input, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: saver_direct, d_metric: Was

Fri Jul  9 22:15:02 2021
the count_matrix includes 9291 genes in 2346 cells

estimating distribution for each gene and each individual by saver_direct

fit_method: saver_direct, d_metric: JSD

Fri Jul  9 22:15:28 2021
the count_matrix includes 9291 genes in 2346 cells

estimating distribution for each gene and each individual by saver_direct

> 
> date()
[1] "Fri Jul  9 22:15:59 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
           used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells  3173299 169.5    5697851  304.3         NA   5697851  304.3
Vcells 54826570 418.3  161269005 1230.4      32768 136616374 1042.4
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 23  5
> X[1:2,]
  (Intercept)        age sexM SeqbatchSB2        RIN
1           1 -0.4581206    1           1 -1.0444068
2           1 -1.7600598    1           0  0.4352812
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Fri Jul  9 22:16:01 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
saver_direct_Was
Fri Jul  9 22:16:01 2021
saver_direct_JSD
Fri Jul  9 22:20:15 2021
> date()
[1] "Fri Jul  9 22:24:30 2021"
> 
> dim(pval_KR)
[1] 9291    2
> pval_KR[1:2,]
        KR_saver_direct_Was KR_saver_direct_JSD
DNAJC11              0.1924              0.1758
VPS13D               0.5420              0.4558
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0002      Min.   :0.0001     
 1st Qu.:0.2583      1st Qu.:0.2623     
 Median :0.4870      Median :0.4976     
 Mean   :0.4933      Mean   :0.4999     
 3rd Qu.:0.7294      3rd Qu.:0.7400     
 Max.   :1.0000      Max.   :1.0000     
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Fri Jul  9 22:24:30 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
saver_direct_Was
Fri Jul  9 22:24:30 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

saver_direct_JSD
Fri Jul  9 22:41:20 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Fri Jul  9 23:00:31 2021"
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0002      Min.   :0.0001     
 1st Qu.:0.2583      1st Qu.:0.2623     
 Median :0.4870      Median :0.4976     
 Mean   :0.4933      Mean   :0.4999     
 3rd Qu.:0.7294      3rd Qu.:0.7400     
 Max.   :1.0000      Max.   :1.0000     
> summary(pval_PS)
 PS_saver_direct_Was PS_saver_direct_JSD
 Min.   :0.0002      Min.   :0.0002     
 1st Qu.:0.1586      1st Qu.:0.1676     
 Median :0.3624      Median :0.3912     
 Mean   :0.4124      Mean   :0.4285     
 3rd Qu.:0.6486      3rd Qu.:0.6721     
 Max.   :0.9998      Max.   :0.9996     
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 9291    5
> head(df)
           gene KR_saver_direct_Was KR_saver_direct_JSD PS_saver_direct_Was
DNAJC11 DNAJC11              0.1924              0.1758              0.0636
VPS13D   VPS13D              0.5420              0.4558              0.4026
PER3       PER3              0.2256              0.2024              0.1838
KIF1B     KIF1B              0.8614              0.8390              0.7902
PRKCZ     PRKCZ              0.5108              0.4654              0.2188
KCNAB2   KCNAB2              0.1680              0.1234              0.0836
        PS_saver_direct_JSD
DNAJC11              0.0885
VPS13D               0.3260
PER3                 0.1582
KIF1B                0.7520
PRKCZ                0.2598
KCNAB2               0.0571
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_saver_direct_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_saver_direct_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
           used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells  3304735 176.5    5697851  304.3         NA   5697851  304.3
Vcells 55950699 426.9  205774960 1570.0      32768 334836322 2554.6
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.3       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.2         
[16] data.table_1.13.6    Matrix_1.3-0         MASS_7.3-53         

loaded via a namespace (and not attached):
 [1] segmented_1.3-3     nlme_3.1-151        matrixStats_0.57.0 
 [4] numDeriv_2016.8-1.1 tools_4.0.3         backports_1.2.1    
 [7] R6_2.5.0            vegan_2.5-7         mgcv_1.8-33        
[10] colorspace_2.0-0    permute_0.9-5       withr_2.3.0        
[13] tidyselect_1.1.0    curl_4.3            compiler_4.0.3     
[16] quantreg_5.75       SparseM_1.78        labeling_0.4.2     
[19] scales_1.1.1        mvtnorm_1.1-1       digest_0.6.27      
[22] foreign_0.8-81      minqa_1.2.4         mixtools_1.2.0     
[25] rio_0.5.16          pkgconfig_2.0.3     lme4_1.1-26        
[28] bbmle_1.0.23.1      rlang_0.4.10        readxl_1.3.1       
[31] farver_2.0.3        generics_0.1.0      zip_2.1.1          
[34] car_3.0-10          magrittr_2.0.1      Rcpp_1.0.5         
[37] munsell_0.5.0       ape_5.4-1           abind_1.4-5        
[40] lifecycle_0.2.0     stringi_1.5.3       CompQuadForm_1.4.3 
[43] carData_3.0-4       plyr_1.8.6          grid_4.0.3         
[46] bdsmatrix_1.3-4     forcats_0.5.0       crayon_1.3.4       
[49] lattice_0.20-41     cowplot_1.1.1       haven_2.3.1        
[52] splines_4.0.3       hms_0.5.3           pillar_1.4.7       
[55] boot_1.3-25         ggsignif_0.6.0      codetools_0.2-18   
[58] stats4_4.0.3        glue_1.4.2          GUniFrac_1.1       
[61] vctrs_0.3.6         nloptr_1.2.2.2      MatrixModels_0.4-1 
[64] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[67] tidyr_1.1.2         kernlab_0.9-29      openxlsx_4.2.3     
[70] broom_0.7.3         coda_0.19-4         rstatix_0.6.0      
[73] PearsonDS_1.1       survival_3.2-7      tibble_3.0.4       
[76] conquer_1.0.2       cluster_2.1.0       statmod_1.4.35     
[79] ellipsis_0.3.1     
> q(save="no")
> proc.time()
     user    system   elapsed 
30486.892   983.242  2738.907 
