
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ========================================================================
> # this code is based on step1d_dca_direct.R to use saver for denoising
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_OPC'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_OPC"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "OPC"
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
Registered S3 methods overwritten by 'car':
  method                          from
  influence.merMod                lme4
  cooks.distance.influence.merMod lme4
  dfbeta.influence.merMod         lme4
  dfbetas.influence.merMod        lme4
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> # number of cores for multi-core computation
> nCore = 12
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of SAVER are too large to save at GitHub,  
> # so we access them from this local folder:
> saver.dir = "~/research/scRNAseq/data/autism/saver_PFC"
> data.dir  = "data"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  6251
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AAACGGGAGCGGCTTC-1_4341_BA46 AAAGATGAGCTACCGC-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AAAGCAAAGGCGTACA-1_4341_BA46 AAAGCAAGTGGTGTAG-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
6251 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 6251   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2  1620 2457               1.2617013
2:                  7.2  1545 2792               0.1074499
   RNA ribosomal percent
1:             1.2617013
2:             0.3581662
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 6251   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  1620 2457   1.2617013   1.2617013
2:   Control      CB6      SB2  16 7.2  1545 2792   0.1074499   0.3581662
> 
> summary(meta_cell)
                               cell             cluster    
 AAACCTGAGAAACCAT-1_5387_BA9     :   1   OPC        :6251  
 AAACCTGAGACTCGGA-1_5893_PFC     :   1   AST-FB     :   0  
 AAACCTGAGATGTGTA-1_5864_BA9     :   1   AST-PP     :   0  
 AAACCTGAGCTGCCCA-1_5403_PFC     :   1   Endothelial:   0  
 AAACCTGCAGGTCGTC-1_5387_BA9     :   1   IN-PV      :   0  
 AAACCTGCAGTAGAGC-1_5538_PFC_Nova:   1   IN-SST     :   0  
 (Other)                         :6245   (Other)    :   0  
           sample       individual   region          age        sex     
 5387_BA9     : 718   Min.   :4341   ACC:   0   Min.   : 4.00   F:1508  
 5841_BA9     : 494   1st Qu.:5387   PFC:6251   1st Qu.:12.00   M:4743  
 5278_PFC     : 399   Median :5538              Median :15.00           
 4341_BA46    : 383   Mean   :5549              Mean   :14.77           
 5408_PFC_Nova: 293   3rd Qu.:5893              3rd Qu.:19.00           
 5538_PFC_Nova: 290   Max.   :6033              Max.   :22.00           
 (Other)      :3674                                                     
   diagnosis       Capbatch    Seqbatch        PMI             RIN       
 ASD    :3297   CB6    :2527   SB1:2661   Min.   : 3.00   Min.   :6.500  
 Control:2954   CB1    :1634   SB2:3590   1st Qu.:15.00   1st Qu.:7.400  
                CB7    :1063   SB3:   0   Median :19.00   Median :7.600  
                CB2    :1027              Mean   :19.66   Mean   :7.779  
                CB3    :   0              3rd Qu.:24.00   3rd Qu.:8.300  
                CB4    :   0              Max.   :42.00   Max.   :9.000  
                (Other):   0                                             
     genes             UMIs       mitoPercent      riboPercent    
 Min.   : 500.0   Min.   : 572   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 931.5   1st Qu.:1346   1st Qu.:0.1423   1st Qu.:0.4141  
 Median :1245.0   Median :1929   Median :0.2589   Median :0.6106  
 Mean   :1280.7   Mean   :2033   Mean   :0.3702   Mean   :0.6920  
 3rd Qu.:1566.0   3rd Qu.:2553   3rd Qu.:0.4425   3rd Qu.:0.8594  
 Max.   :4417.0   Max.   :9985   Max.   :4.9751   Max.   :4.8780  
                                                                  
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                               cell             cluster    
 AAACCTGAGAAACCAT-1_5387_BA9     :   1   OPC        :6251  
 AAACCTGAGACTCGGA-1_5893_PFC     :   1   AST-FB     :   0  
 AAACCTGAGATGTGTA-1_5864_BA9     :   1   AST-PP     :   0  
 AAACCTGAGCTGCCCA-1_5403_PFC     :   1   Endothelial:   0  
 AAACCTGCAGGTCGTC-1_5387_BA9     :   1   IN-PV      :   0  
 AAACCTGCAGTAGAGC-1_5538_PFC_Nova:   1   IN-SST     :   0  
 (Other)                         :6245   (Other)    :   0  
           sample       individual   region          age           sex     
 5387_BA9     : 718   5387   : 718   ACC:   0   Min.   :-2.44111   F:1508  
 5841_BA9     : 494   5841   : 494   PFC:6251   1st Qu.:-0.62732   M:4743  
 5278_PFC     : 399   5278   : 399              Median : 0.05285           
 4341_BA46    : 383   4341   : 383              Mean   : 0.00000           
 5408_PFC_Nova: 293   5408   : 293              3rd Qu.: 0.95974           
 5538_PFC_Nova: 290   5538   : 290              Max.   : 1.63991           
 (Other)      :3674   (Other):3674                                         
   diagnosis    Capbatch   Seqbatch        PMI                RIN         
 ASD    :3297   CB1:1634   SB1:2661   Min.   :-2.17594   Min.   :-2.0755  
 Control:2954   CB2:1027   SB2:3590   1st Qu.:-0.60836   1st Qu.:-0.6155  
                CB6:2527              Median :-0.08583   Median :-0.2910  
                CB7:1063              Mean   : 0.00000   Mean   : 0.0000  
                                      3rd Qu.: 0.56733   3rd Qu.: 0.8445  
                                      Max.   : 2.91871   Max.   : 1.9801  
                                                                          
     genes             UMIs       mitoPercent      riboPercent    
 Min.   : 500.0   Min.   : 572   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: 931.5   1st Qu.:1346   1st Qu.:0.1423   1st Qu.:0.4141  
 Median :1245.0   Median :1929   Median :0.2589   Median :0.6106  
 Mean   :1280.7   Mean   :2033   Mean   :0.3702   Mean   :0.6920  
 3rd Qu.:1566.0   3rd Qu.:2553   3rd Qu.:0.4425   3rd Qu.:0.8594  
 Max.   :4417.0   Max.   :9985   Max.   :4.9751   Max.   :4.8780  
                                                                  
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
       SB1  SB2
  CB1 1634    0
  CB2 1027    0
  CB6    0 2527
  CB7    0 1063
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.135   1.421   1.543   1.539   1.641   2.775 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0             6251 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 6251 
> table(meta_cell$diagnosis)

    ASD Control 
   3297    2954 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

5976:Control     5978:ASD     6033:ASD     5294:ASD 5958:Control     5864:ASD 
         129          143          166          169          178          185 
    5144:ASD 5879:Control 5893:Control     5939:ASD 5577:Control     5419:ASD 
         197          213          231          237          247          252 
    5945:ASD     5403:ASD     5565:ASD 5936:Control     5531:ASD 5538:Control 
         254          260          262          272          279          290 
5408:Control 4341:Control     5278:ASD     5841:ASD 5387:Control 
         293          383          399          494          718 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5976 5978 6033 5294 5958 5864 5144 5879 5893 5939 5577 5419 5945 5403 5565 5936 
 129  143  166  169  178  185  197  213  231  237  247  252  254  260  262  272 
5531 5538 5408 4341 5278 5841 5387 
 279  290  293  383  399  494  718 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4006009   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.7609394   M       ASD      CB1      SB1
          PMI        RIN
1: -0.4777232 -0.9399331
2: -2.1759394  0.3578436
> 
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    5774    6071    5815    6187    6251 
> 
> 0.6*ncol(dat1)
[1] 3750.6
> 0.8*ncol(dat1)
[1] 5000.8
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
17582   459 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
16551  1490 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
14570  3471 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 1490 6251
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
       AAACGGGAGCGGCTTC-1_4341_BA46 AAAGATGAGCTACCGC-1_4341_BA46
VPS13D                            1                            .
KIF1B                             1                            1
GNB1                              .                            .
UBE4B                             .                            .
ACAP3                             .                            2
       AAAGCAAAGGCGTACA-1_4341_BA46 AAAGCAAGTGGTGTAG-1_4341_BA46
VPS13D                            .                            1
KIF1B                             .                            2
GNB1                              .                            .
UBE4B                             .                            .
ACAP3                             .                            2
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 6251   16
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC -0.4006009
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC -0.4006009
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.4777232 -0.9399331  1620 2457   1.2617013
2:   M   Control      CB6      SB2 -0.4777232 -0.9399331  1545 2792   0.1074499
   riboPercent
1:   1.2617013
2:   0.3581662
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
6251 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  269.0   823.5  1197.0  1241.6  1562.0  5970.0 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 6251   17
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AAACGGGAGCGGCTTC-1_4341_BA46     OPC 4341_BA46       4341    PFC -0.4006009
2: AAAGATGAGCTACCGC-1_4341_BA46     OPC 4341_BA46       4341    PFC -0.4006009
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes UMIs mitoPercent
1:   M   Control      CB6      SB2 -0.4777232 -0.9399331  1620 2457   1.2617013
2:   M   Control      CB6      SB2 -0.4777232 -0.9399331  1545 2792   0.1074499
   riboPercent   rd
1:   1.2617013 1334
2:   0.3581662 1822
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
6251 
> 
> # ------------------------------------------------------------------------
> # read in SAVER estimates
> # ------------------------------------------------------------------------
> 
> f_name = file.path(saver.dir, sprintf("saver_%s.rds", grp))
> saver  = readRDS(f_name)
> dim(saver)
[1] 18041  6251
> saver[1:3,1:2]
        AAACGGGAGCGGCTTC-1_4341_BA46 AAAGATGAGCTACCGC-1_4341_BA46
DNAJC11                        0.168                        0.160
NADK                           0.016                        0.018
MASP2                          0.022                        0.032
> 
> table(rownames(dat1) %in% rownames(saver))

TRUE 
1490 
>   
> w2kp = match(rownames(dat1), rownames(saver))
>   
> saver = saver[w2kp,]
> 
> table(rownames(dat1) == rownames(saver))

TRUE 
1490 
> 
> summary(c(saver))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
   0.006    0.797    1.126    2.276    1.907 1113.679 
> 
> 
> # ---------------------------------------------------------------
> # permute case control labels
> # ---------------------------------------------------------------
> 
> seed_v = c(5608, 9903, 9968, 7527, 7879, 
+            3760, 2066, 7577, 5926, 9670)
> 
> set.seed(seed_v[1])
> print(paste("random seed for permutation = ", seed_v[1]))
[1] "random seed for permutation =  5608"
> 
> ori_diagnosis = meta_ind$diagnosis
> meta_ind$diagnosis = sample(ori_diagnosis)
> print(meta_ind$diagnosis)
 [1] Control Control Control Control ASD     Control Control Control Control
[10] ASD     ASD     ASD     ASD     ASD     ASD     Control ASD     ASD    
[19] Control ASD     ASD     ASD     ASD    
Levels: Control ASD
> head(meta_ind)
      sample individual region         age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.40060092   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.76093938   M   Control      CB1      SB1
3:  5278_PFC       5278    PFC  0.05284523   F   Control      CB1      SB1
4:  5294_BA9       5294    PFC  0.95973753   M   Control      CB6      SB2
5:  5387_BA9       5387    PFC -0.62732400   M       ASD      CB6      SB2
6:  5403_PFC       5403    PFC  0.27956830   M   Control      CB1      SB1
          PMI        RIN
1: -0.4777232 -0.9399331
2: -2.1759394  0.3578436
3: -0.8696193  1.9800646
4: -0.4777232  0.8445099
5: -0.8696193 -0.2910448
6:  2.0042851 -1.5888215
> summary(meta_ind)
       sample     individual region        age           sex      diagnosis 
 4341_BA46: 1   4341   : 1   ACC: 0   Min.   :-2.44111   F: 6   Control:10  
 5144_PFC : 1   5144   : 1   PFC:23   1st Qu.:-0.62732   M:17   ASD    :13  
 5278_PFC : 1   5278   : 1            Median : 0.05285                      
 5294_BA9 : 1   5294   : 1            Mean   : 0.06270                      
 5387_BA9 : 1   5387   : 1            3rd Qu.: 0.95974                      
 5403_PFC : 1   5403   : 1            Max.   : 1.63991                      
 (Other)  :17   (Other):17                                                  
 Capbatch Seqbatch      PMI               RIN         
 CB1:6    SB1:10   Min.   :-2.1759   Min.   :-2.0755  
 CB2:4    SB2:13   1st Qu.:-0.4777   1st Qu.:-0.6966  
 CB6:7             Median : 0.1754   Median :-0.2910  
 CB7:6             Mean   : 0.1414   Mean   :-0.1077  
                   3rd Qu.: 0.5673   3rd Qu.: 0.6012  
                   Max.   : 2.9187   Max.   : 1.9801  
                                                      
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Sun Jul 11 03:12:41 2021"
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> count_input = saver
> 
> dist_list = list()
> 
> for(fit_method in c("saver_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(count_input, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: saver_direct, d_metric: Was

Sun Jul 11 03:12:41 2021
the count_matrix includes 1490 genes in 6251 cells

estimating distribution for each gene and each individual by saver_direct

fit_method: saver_direct, d_metric: JSD

Sun Jul 11 03:12:48 2021
the count_matrix includes 1490 genes in 6251 cells

estimating distribution for each gene and each individual by saver_direct

> 
> date()
[1] "Sun Jul 11 03:12:56 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)
Ncells  3150838 168.3    5697830 304.3         NA   5697830  304.3
Vcells 23150997 176.7   74494359 568.4      32768 194541313 1484.3
> 
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 23  5
> X[1:2,]
  (Intercept)        age sexM SeqbatchSB2        RIN
1           1 -0.4006009    1           1 -0.9399331
2           1 -1.7609394    1           0  0.3578436
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Sun Jul 11 03:12:58 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
saver_direct_Was
Sun Jul 11 03:12:58 2021
saver_direct_JSD
Sun Jul 11 03:13:30 2021
> date()
[1] "Sun Jul 11 03:14:02 2021"
> 
> dim(pval_KR)
[1] 1490    2
> pval_KR[1:2,]
       KR_saver_direct_Was KR_saver_direct_JSD
VPS13D              0.6308              0.4574
KIF1B               0.8216              0.5622
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0003      Min.   :0.0009     
 1st Qu.:0.3217      1st Qu.:0.3211     
 Median :0.5533      Median :0.5708     
 Mean   :0.5331      Mean   :0.5570     
 3rd Qu.:0.7534      3rd Qu.:0.8103     
 Max.   :0.9996      Max.   :1.0000     
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Sun Jul 11 03:14:02 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
saver_direct_Was
Sun Jul 11 03:14:02 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

saver_direct_JSD
Sun Jul 11 03:16:21 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Sun Jul 11 03:18:36 2021"
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0003      Min.   :0.0009     
 1st Qu.:0.3217      1st Qu.:0.3211     
 Median :0.5533      Median :0.5708     
 Mean   :0.5331      Mean   :0.5570     
 3rd Qu.:0.7534      3rd Qu.:0.8103     
 Max.   :0.9996      Max.   :1.0000     
> summary(pval_PS)
 PS_saver_direct_Was PS_saver_direct_JSD
 Min.   :0.0005      Min.   :0.0001     
 1st Qu.:0.1794      1st Qu.:0.2075     
 Median :0.4263      Median :0.4760     
 Mean   :0.4412      Mean   :0.4841     
 3rd Qu.:0.6816      3rd Qu.:0.7585     
 Max.   :1.0000      Max.   :0.9998     
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 1490    5
> head(df)
         gene KR_saver_direct_Was KR_saver_direct_JSD PS_saver_direct_Was
VPS13D VPS13D              0.6308              0.4574              0.5024
KIF1B   KIF1B              0.8216              0.5622              0.6272
GNB1     GNB1              0.8432              0.9192              0.7578
UBE4B   UBE4B              0.2914              0.3392              0.0704
ACAP3   ACAP3              0.7164              0.8516              0.5864
RERE     RERE              0.1170              0.1732              0.0321
       PS_saver_direct_JSD
VPS13D              0.2198
KIF1B               0.3458
GNB1                0.8548
UBE4B               0.1746
ACAP3               0.8836
RERE                0.0807
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_saver_direct_perm_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_saver_direct_perm_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)
Ncells  3305546 176.6    5697830 304.3         NA   5697830  304.3
Vcells 23562772 179.8   74494359 568.4      32768 194541313 1484.3
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.3       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.2         
[16] data.table_1.13.6    Matrix_1.3-0         MASS_7.3-53         

loaded via a namespace (and not attached):
 [1] segmented_1.3-3     nlme_3.1-151        matrixStats_0.57.0 
 [4] numDeriv_2016.8-1.1 tools_4.0.3         backports_1.2.1    
 [7] R6_2.5.0            vegan_2.5-7         mgcv_1.8-33        
[10] colorspace_2.0-0    permute_0.9-5       withr_2.3.0        
[13] tidyselect_1.1.0    curl_4.3            compiler_4.0.3     
[16] quantreg_5.75       SparseM_1.78        labeling_0.4.2     
[19] scales_1.1.1        mvtnorm_1.1-1       digest_0.6.27      
[22] foreign_0.8-81      minqa_1.2.4         mixtools_1.2.0     
[25] rio_0.5.16          pkgconfig_2.0.3     lme4_1.1-26        
[28] bbmle_1.0.23.1      rlang_0.4.10        readxl_1.3.1       
[31] farver_2.0.3        generics_0.1.0      zip_2.1.1          
[34] car_3.0-10          magrittr_2.0.1      Rcpp_1.0.5         
[37] munsell_0.5.0       ape_5.4-1           abind_1.4-5        
[40] lifecycle_0.2.0     stringi_1.5.3       CompQuadForm_1.4.3 
[43] carData_3.0-4       plyr_1.8.6          grid_4.0.3         
[46] bdsmatrix_1.3-4     forcats_0.5.0       crayon_1.3.4       
[49] lattice_0.20-41     cowplot_1.1.1       haven_2.3.1        
[52] splines_4.0.3       hms_0.5.3           pillar_1.4.7       
[55] boot_1.3-25         ggsignif_0.6.0      codetools_0.2-18   
[58] stats4_4.0.3        glue_1.4.2          GUniFrac_1.1       
[61] vctrs_0.3.6         nloptr_1.2.2.2      MatrixModels_0.4-1 
[64] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[67] tidyr_1.1.2         kernlab_0.9-29      openxlsx_4.2.3     
[70] broom_0.7.3         coda_0.19-4         rstatix_0.6.0      
[73] PearsonDS_1.1       survival_3.2-7      tibble_3.0.4       
[76] conquer_1.0.2       cluster_2.1.0       statmod_1.4.35     
[79] ellipsis_0.3.1     
> q(save="no")
> proc.time()
    user   system  elapsed 
3846.716  156.883  365.092 
