
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ========================================================================
> # this code is based on step1d_dca_direct.R to use saver for denoising
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_Endothelial'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_Endothelial"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "Endothelial"
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
Registered S3 methods overwritten by 'car':
  method                          from
  influence.merMod                lme4
  cooks.distance.influence.merMod lme4
  dfbeta.influence.merMod         lme4
  dfbetas.influence.merMod        lme4
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> # number of cores for multi-core computation
> nCore = 12
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of SAVER are too large to save at GitHub,  
> # so we access them from this local folder:
> saver.dir = "~/research/scRNAseq/data/autism/saver_PFC"
> data.dir  = "data"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  1237
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AACTCCCGTTGCCTCT-1_4341_BA46 AAGGAGCAGTCCGTAT-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         AAGGCAGTCATTGCCC-1_4341_BA46 AAGTCTGGTACCATCA-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            1                            .
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
1237 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 1237   16
> meta_cell[1:2,]
                           cell     cluster    sample individual region age sex
1: AACTCCCGTTGCCTCT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC  13   M
2: AAGGAGCAGTCCGTAT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes UMIs RNA mitochondr. percent
1:                  7.2  1066 1783               0.3365115
2:                  7.2   659  855               1.2865497
   RNA ribosomal percent
1:             0.2804262
2:             4.0935673
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 1237   16
> meta_cell[1:2,]
                           cell     cluster    sample individual region age sex
1: AACTCCCGTTGCCTCT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC  13   M
2: AAGGAGCAGTCCGTAT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  1066 1783   0.3365115   0.2804262
2:   Control      CB6      SB2  16 7.2   659  855   1.2865497   4.0935673
> 
> summary(meta_cell)
                          cell             cluster           sample   
 AAACCTGAGTTTCCTT-1_5577_BA9:   1   Endothelial:1237   5387_BA9 :365  
 AAACGGGTCAGCTGGC-1_5939_BA9:   1   AST-FB     :   0   4341_BA46:136  
 AAAGATGCATATGGTC-1_5531_BA9:   1   AST-PP     :   0   5294_BA9 :122  
 AAAGATGCATGCTAGT-1_5387_BA9:   1   IN-PV      :   0   5841_BA9 :116  
 AAAGATGGTTGCGCAC-1_5387_BA9:   1   IN-SST     :   0   5531_BA9 : 87  
 AAAGCAACAGGACCCT-1_5387_BA9:   1   IN-SV2C    :   0   5939_BA9 : 72  
 (Other)                    :1231   (Other)    :   0   (Other)  :339  
   individual   region          age        sex        diagnosis      Capbatch  
 Min.   :4341   ACC:   0   Min.   : 4.00   F: 107   ASD    :557   CB6    :967  
 1st Qu.:5387   PFC:1237   1st Qu.:12.00   M:1130   Control:680   CB7    :160  
 Median :5387              Median :13.00                          CB1    : 66  
 Mean   :5431              Mean   :14.61                          CB2    : 44  
 3rd Qu.:5841              3rd Qu.:19.00                          CB3    :  0  
 Max.   :6033              Max.   :22.00                          CB4    :  0  
                                                                  (Other):  0  
 Seqbatch        PMI             RIN            genes           UMIs      
 SB1: 110   Min.   : 3.00   Min.   :6.500   Min.   : 500   Min.   :  580  
 SB2:1127   1st Qu.:13.00   1st Qu.:7.400   1st Qu.: 754   1st Qu.:  998  
 SB3:   0   Median :16.00   Median :7.600   Median :1072   Median : 1501  
            Mean   :18.05   Mean   :7.805   Mean   :1320   Mean   : 2022  
            3rd Qu.:22.00   3rd Qu.:8.300   3rd Qu.:1674   3rd Qu.: 2476  
            Max.   :42.00   Max.   :9.000   Max.   :4948   Max.   :13346  
                                                                          
  mitoPercent     riboPercent   
 Min.   :0.000   Min.   :0.000  
 1st Qu.:0.614   1st Qu.:1.302  
 Median :1.101   Median :1.935  
 Mean   :1.307   Mean   :2.032  
 3rd Qu.:1.798   3rd Qu.:2.577  
 Max.   :4.878   Max.   :4.996  
                                
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                          cell             cluster           sample   
 AAACCTGAGTTTCCTT-1_5577_BA9:   1   Endothelial:1237   5387_BA9 :365  
 AAACGGGTCAGCTGGC-1_5939_BA9:   1   AST-FB     :   0   4341_BA46:136  
 AAAGATGCATATGGTC-1_5531_BA9:   1   AST-PP     :   0   5294_BA9 :122  
 AAAGATGCATGCTAGT-1_5387_BA9:   1   IN-PV      :   0   5841_BA9 :116  
 AAAGATGGTTGCGCAC-1_5387_BA9:   1   IN-SST     :   0   5531_BA9 : 87  
 AAAGCAACAGGACCCT-1_5387_BA9:   1   IN-SV2C    :   0   5939_BA9 : 72  
 (Other)                    :1231   (Other)    :   0   (Other)  :339  
   individual  region          age          sex        diagnosis   Capbatch 
 5387   :365   ACC:   0   Min.   :-2.7498   F: 107   ASD    :557   CB1: 66  
 4341   :136   PFC:1237   1st Qu.:-0.6771   M:1130   Control:680   CB2: 44  
 5294   :122              Median :-0.4181                          CB6:967  
 5841   :116              Mean   : 0.0000                          CB7:160  
 5531   : 87              3rd Qu.: 1.1365                                   
 5939   : 72              Max.   : 1.9137                                   
 (Other):339                                                                
 Seqbatch        PMI               RIN              genes           UMIs      
 SB1: 110   Min.   :-2.3753   Min.   :-2.4287   Min.   : 500   Min.   :  580  
 SB2:1127   1st Qu.:-0.7974   1st Qu.:-0.7532   1st Qu.: 754   1st Qu.:  998  
            Median :-0.3240   Median :-0.3809   Median :1072   Median : 1501  
            Mean   : 0.0000   Mean   : 0.0000   Mean   :1320   Mean   : 2022  
            3rd Qu.: 0.6227   3rd Qu.: 0.9222   3rd Qu.:1674   3rd Qu.: 2476  
            Max.   : 3.7786   Max.   : 2.2254   Max.   :4948   Max.   :13346  
                                                                              
  mitoPercent     riboPercent   
 Min.   :0.000   Min.   :0.000  
 1st Qu.:0.614   1st Qu.:1.302  
 Median :1.101   Median :1.935  
 Mean   :1.307   Mean   :2.032  
 3rd Qu.:1.798   3rd Qu.:2.577  
 Max.   :4.878   Max.   :4.996  
                                
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
      SB1 SB2
  CB1  66   0
  CB2  44   0
  CB6   0 967
  CB7   0 160
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.131   1.289   1.400   1.437   1.534   2.697 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0             1237                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0                0                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 1237 
> table(meta_cell$diagnosis)

    ASD Control 
    557     680 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

5879:Control     5945:ASD     5144:ASD     5403:ASD     5419:ASD     5978:ASD 
           5            6            7            7            7            7 
5408:Control 5893:Control 5936:Control 5976:Control 5538:Control     5864:ASD 
          10           13           17           17           18           18 
    5278:ASD     6033:ASD 5958:Control     5565:ASD 5577:Control     5939:ASD 
          20           28           30           60           69           72 
    5531:ASD     5841:ASD     5294:ASD 4341:Control 5387:Control 
          87          116          122          136          365 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5879 5945 5144 5403 5419 5978 5408 5893 5936 5976 5538 5864 5278 6033 5958 5565 
   5    6    7    7    7    7   10   13   17   17   18   18   20   28   30   60 
5577 5939 5531 5841 5294 4341 5387 
  69   72   87  116  122  136  365 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4180559   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.9725704   M       ASD      CB1      SB1
          PMI        RIN
1: -0.3240011 -1.1255525
2: -2.3752854  0.3637466
> 
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0    1128    1197    1149    1226    1237 
> 
> 0.6*ncol(dat1)
[1] 742.2
> 0.8*ncol(dat1)
[1] 989.6
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
17666   375 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
16376  1665 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
14027  4014 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 1665 1237
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
       AACTCCCGTTGCCTCT-1_4341_BA46 AAGGAGCAGTCCGTAT-1_4341_BA46
VPS13D                            .                            .
KIF1B                             .                            .
GNB1                              1                            .
PRDM2                             .                            .
RERE                              .                            .
       AAGGCAGTCATTGCCC-1_4341_BA46 AAGTCTGGTACCATCA-1_4341_BA46
VPS13D                            2                            .
KIF1B                             .                            .
GNB1                              1                            2
PRDM2                             .                            .
RERE                              3                            .
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 1237   16
> meta_cell[1:2,]
                           cell     cluster    sample individual region
1: AACTCCCGTTGCCTCT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC
2: AAGGAGCAGTCCGTAT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC
          age sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs
1: -0.4180559   M   Control      CB6      SB2 -0.3240011 -1.125553  1066 1783
2: -0.4180559   M   Control      CB6      SB2 -0.3240011 -1.125553   659  855
   mitoPercent riboPercent
1:   0.3365115   0.2804262
2:   1.2865497   4.0935673
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
1237 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    229     548     833    1143    1421    7842 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 1237   17
> meta_cell[1:2,]
                           cell     cluster    sample individual region
1: AACTCCCGTTGCCTCT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC
2: AAGGAGCAGTCCGTAT-1_4341_BA46 Endothelial 4341_BA46       4341    PFC
          age sex diagnosis Capbatch Seqbatch        PMI       RIN genes UMIs
1: -0.4180559   M   Control      CB6      SB2 -0.3240011 -1.125553  1066 1783
2: -0.4180559   M   Control      CB6      SB2 -0.3240011 -1.125553   659  855
   mitoPercent riboPercent   rd
1:   0.3365115   0.2804262 1097
2:   1.2865497   4.0935673  522
> 
> names(meta_cell)[1] = "cell_id"
> table(meta_cell$cell_id == colnames(dat1))

TRUE 
1237 
> 
> # ------------------------------------------------------------------------
> # read in SAVER estimates
> # ------------------------------------------------------------------------
> 
> f_name = file.path(saver.dir, sprintf("saver_%s.rds", grp))
> saver  = readRDS(f_name)
> dim(saver)
[1] 18041  1237
> saver[1:3,1:2]
        AACTCCCGTTGCCTCT-1_4341_BA46 AAGGAGCAGTCCGTAT-1_4341_BA46
DNAJC11                        0.165                        0.152
NADK                           0.039                        0.034
MASP2                          0.023                        0.023
> 
> table(rownames(dat1) %in% rownames(saver))

TRUE 
1665 
>   
> w2kp = match(rownames(dat1), rownames(saver))
>   
> saver = saver[w2kp,]
> 
> table(rownames(dat1) == rownames(saver))

TRUE 
1665 
> 
> summary(c(saver))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
   0.005    0.671    0.957    1.689    1.532 2046.604 
> 
> 
> # ---------------------------------------------------------------
> # permute case control labels
> # ---------------------------------------------------------------
> 
> seed_v = c(5608, 9903, 9968, 7527, 7879, 
+            3760, 2066, 7577, 5926, 9670)
> 
> set.seed(seed_v[1])
> print(paste("random seed for permutation = ", seed_v[1]))
[1] "random seed for permutation =  5608"
> 
> ori_diagnosis = meta_ind$diagnosis
> meta_ind$diagnosis = sample(ori_diagnosis)
> print(meta_ind$diagnosis)
 [1] Control Control Control Control ASD     Control Control Control Control
[10] ASD     ASD     ASD     ASD     ASD     ASD     Control ASD     ASD    
[19] Control ASD     ASD     ASD     ASD    
Levels: Control ASD
> head(meta_ind)
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4180559   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.9725704   M   Control      CB1      SB1
3:  5278_PFC       5278    PFC  0.1001156   F   Control      CB1      SB1
4:  5294_BA9       5294    PFC  1.1364586   M   Control      CB6      SB2
5:  5387_BA9       5387    PFC -0.6771416   M       ASD      CB6      SB2
6:  5403_PFC       5403    PFC  0.3592013   M   Control      CB1      SB1
          PMI        RIN
1: -0.3240011 -1.1255525
2: -2.3752854  0.3637466
3: -0.7973744  2.2253704
4: -0.3240011  0.9222337
5: -0.7973744 -0.3809030
6:  2.6740298 -1.8702021
> summary(meta_ind)
       sample     individual region        age          sex      diagnosis 
 4341_BA46: 1   4341   : 1   ACC: 0   Min.   :-2.7498   F: 6   Control:10  
 5144_PFC : 1   5144   : 1   PFC:23   1st Qu.:-0.6771   M:17   ASD    :13  
 5278_PFC : 1   5278   : 1            Median : 0.1001                      
 5294_BA9 : 1   5294   : 1            Mean   : 0.1114                      
 5387_BA9 : 1   5387   : 1            3rd Qu.: 1.1365                      
 5403_PFC : 1   5403   : 1            Max.   : 1.9137                      
 (Other)  :17   (Other):17                                                 
 Capbatch Seqbatch      PMI               RIN         
 CB1:6    SB1:10   Min.   :-2.3753   Min.   :-2.4287  
 CB2:4    SB2:13   1st Qu.:-0.3240   1st Qu.:-0.8463  
 CB6:7             Median : 0.4650   Median :-0.3809  
 CB7:6             Mean   : 0.4238   Mean   :-0.1705  
                   3rd Qu.: 0.9383   3rd Qu.: 0.6430  
                   Max.   : 3.7786   Max.   : 2.2254  
                                                      
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Sun Jul 11 00:51:43 2021"
> 
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> count_input = saver
> 
> dist_list = list()
> 
> for(fit_method in c("saver_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(count_input, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: saver_direct, d_metric: Was

Sun Jul 11 00:51:43 2021
the count_matrix includes 1665 genes in 1237 cells

estimating distribution for each gene and each individual by saver_direct

fit_method: saver_direct, d_metric: JSD

Sun Jul 11 00:51:47 2021
the count_matrix includes 1665 genes in 1237 cells

estimating distribution for each gene and each individual by saver_direct

> 
> date()
[1] "Sun Jul 11 00:51:51 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3151363 168.4    5749397 307.1         NA  5749397 307.1
Vcells 11744950  89.7   42528504 324.5      32768 47363996 361.4
> 
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 23  5
> X[1:2,]
  (Intercept)        age sexM SeqbatchSB2        RIN
1           1 -0.4180559    1           1 -1.1255525
2           1 -1.9725704    1           0  0.3637466
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Sun Jul 11 00:51:53 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
saver_direct_Was
Sun Jul 11 00:51:53 2021
saver_direct_JSD
Sun Jul 11 00:52:27 2021
> date()
[1] "Sun Jul 11 00:53:02 2021"
> 
> dim(pval_KR)
[1] 1665    2
> pval_KR[1:2,]
       KR_saver_direct_Was KR_saver_direct_JSD
VPS13D              0.9008              0.7114
KIF1B               0.5636              0.3506
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0134      Min.   :0.0015     
 1st Qu.:0.3536      1st Qu.:0.4068     
 Median :0.5546      Median :0.6066     
 Mean   :0.5578      Mean   :0.5929     
 3rd Qu.:0.7714      3rd Qu.:0.8034     
 Max.   :1.0000      Max.   :0.9996     
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Sun Jul 11 00:53:02 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
saver_direct_Was
Sun Jul 11 00:53:02 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

saver_direct_JSD
Sun Jul 11 00:55:17 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Sun Jul 11 00:57:30 2021"
> 
> summary(pval_KR)
 KR_saver_direct_Was KR_saver_direct_JSD
 Min.   :0.0134      Min.   :0.0015     
 1st Qu.:0.3536      1st Qu.:0.4068     
 Median :0.5546      Median :0.6066     
 Mean   :0.5578      Mean   :0.5929     
 3rd Qu.:0.7714      3rd Qu.:0.8034     
 Max.   :1.0000      Max.   :0.9996     
> summary(pval_PS)
 PS_saver_direct_Was PS_saver_direct_JSD
 Min.   :0.0048      Min.   :0.0003     
 1st Qu.:0.2556      1st Qu.:0.3190     
 Median :0.4760      Median :0.5444     
 Mean   :0.4948      Mean   :0.5423     
 3rd Qu.:0.7268      3rd Qu.:0.7748     
 Max.   :0.9994      Max.   :0.9998     
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 1665    5
> head(df)
         gene KR_saver_direct_Was KR_saver_direct_JSD PS_saver_direct_Was
VPS13D VPS13D              0.9008              0.7114              0.8930
KIF1B   KIF1B              0.5636              0.3506              0.4796
GNB1     GNB1              0.4742              0.3770              0.3934
PRDM2   PRDM2              0.1408              0.1890              0.1738
RERE     RERE              0.5748              0.5132              0.4568
CLSTN1 CLSTN1              0.3490              0.7088              0.2714
       PS_saver_direct_JSD
VPS13D              0.6438
KIF1B               0.2368
GNB1                0.2454
PRDM2               0.2150
RERE                0.4246
CLSTN1              0.7640
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_saver_direct_perm_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_saver_direct_perm_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3305546 176.6    5749397 307.1         NA  5749397 307.1
Vcells 12093554  92.3   37785833 288.3      32768 61416836 468.6
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.3       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.2         
[16] data.table_1.13.6    Matrix_1.3-0         MASS_7.3-53         

loaded via a namespace (and not attached):
 [1] segmented_1.3-3     nlme_3.1-151        matrixStats_0.57.0 
 [4] numDeriv_2016.8-1.1 tools_4.0.3         backports_1.2.1    
 [7] R6_2.5.0            vegan_2.5-7         mgcv_1.8-33        
[10] colorspace_2.0-0    permute_0.9-5       withr_2.3.0        
[13] tidyselect_1.1.0    curl_4.3            compiler_4.0.3     
[16] quantreg_5.75       SparseM_1.78        labeling_0.4.2     
[19] scales_1.1.1        mvtnorm_1.1-1       digest_0.6.27      
[22] foreign_0.8-81      minqa_1.2.4         mixtools_1.2.0     
[25] rio_0.5.16          pkgconfig_2.0.3     lme4_1.1-26        
[28] bbmle_1.0.23.1      rlang_0.4.10        readxl_1.3.1       
[31] farver_2.0.3        generics_0.1.0      zip_2.1.1          
[34] car_3.0-10          magrittr_2.0.1      Rcpp_1.0.5         
[37] munsell_0.5.0       ape_5.4-1           abind_1.4-5        
[40] lifecycle_0.2.0     stringi_1.5.3       CompQuadForm_1.4.3 
[43] carData_3.0-4       plyr_1.8.6          grid_4.0.3         
[46] bdsmatrix_1.3-4     forcats_0.5.0       crayon_1.3.4       
[49] lattice_0.20-41     cowplot_1.1.1       haven_2.3.1        
[52] splines_4.0.3       hms_0.5.3           pillar_1.4.7       
[55] boot_1.3-25         ggsignif_0.6.0      codetools_0.2-18   
[58] stats4_4.0.3        glue_1.4.2          GUniFrac_1.1       
[61] vctrs_0.3.6         nloptr_1.2.2.2      MatrixModels_0.4-1 
[64] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[67] tidyr_1.1.2         kernlab_0.9-29      openxlsx_4.2.3     
[70] broom_0.7.3         coda_0.19-4         rstatix_0.6.0      
[73] PearsonDS_1.1       survival_3.2-7      tibble_3.0.4       
[76] conquer_1.0.2       cluster_2.1.0       statmod_1.4.35     
[79] ellipsis_0.3.1     
> q(save="no")
> proc.time()
    user   system  elapsed 
3784.958  137.505  353.640 
