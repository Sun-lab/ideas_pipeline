
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # this version is based on step10b, different from the step10b version 
> # on cluster in the sense that var_per_cell is set to rd, although
> # this does not make any difference
> # may remove this input item in improved version
> # ========================================================================
> # take arguments
> # ========================================================================
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "grp='PFC_IN-SV2C'"
> 
> if (length(args) != 1) {
+   message("one argument is expected, use 'PFC_L2_3' as default.\n")
+   grp = "PFC_L2_3"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> grp
[1] "PFC_IN-SV2C"
> 
> grp1 = gsub("PFC_", "", grp)
> grp1
[1] "IN-SV2C"
> 
> 
> 
> # ========================================================================
> # read input
> # ========================================================================
> 
> library(MASS)
> library(Matrix)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> library(svd)
> #library(ideas)
> library(MiRKAT)
> library(transport)
> library(ggplot2)
> library(ggpubr)
> library(ggpointdensity)
> 
> 
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> library(emdbook)
> library(foreach)
> library(stats)
> 
> library(ideas)
> 
> 
> 
> # number of cores for multi-core computation
> nCore = 4
> #nCore = Sys.getenv("SLURM_CPUS_ON_NODE")
> 
> registerDoParallel(cores=nCore)
> options(mc.cores=nCore)
> 
> RNGkind("L'Ecuyer-CMRG")
>  
> # The outpuf of DCA are too large to save at GitHub, e.g., 
> # -rw-rw---- 1  1383783222 Dec 21 02:00 L2_3_mean_norm.tsv
> # -rw-rw---- 1   576171020 Oct  3 16:14 L2_3_dispersion.tsv.gz
> # -rwxrwx--- 1   486210994 Dec 16 22:38 L2_3_pi.tsv.gz
> # so we access them from this local folder:
> data.dca.dir = "../../ideas_data/Autism/dca_PFC_all/"
>   
> data.dir  = "data/"
> 
> # ------------------------------------------------------------------------
> # read in cell information
> # ------------------------------------------------------------------------
> 
> cell_info = fread(file.path(data.dir, "meta.tsv"), 
+                   stringsAsFactors=TRUE)
> dim(cell_info)
[1] 104559     16
> cell_info[1:2,]
                           cell     cluster    sample individual region age sex
1: AAACCTGGTACGCACC-1_1823_BA24 Neu-NRGN-II 1823_BA24       1823    ACC  15   M
2: AAACGGGCACCAGATT-1_1823_BA24        L5/6 1823_BA24       1823    ACC  15   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB8      SB3                           18
2:   Control      CB8      SB3                           18
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                    7   622   774               2.4547804
2:                    7  6926 24042               0.4450545
   RNA ribosomal percent
1:             1.4211886
2:             0.4284169
> 
> # ------------------------------------------------------------------------
> # read in count data of one region and one cluster
> # ------------------------------------------------------------------------
> 
> dat1 = readRDS(file.path(data.dir, sprintf("ct_mtx/%s.rds", grp)))
> class(dat1)
[1] "dgCMatrix"
attr(,"package")
[1] "Matrix"
> 
> dim(dat1)
[1] 18041  1054
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
         AACACGTCAGTGGAGT-1_4341_BA46 ACAGCTAAGATGTGGC-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
         ACGGGCTGTGGAAAGA-1_4341_BA46 ACTTTCAAGACGCAAC-1_4341_BA46
DNAJC11                             .                            .
NADK                                .                            .
MASP2                               .                            .
CLCN6                               .                            .
TNFRSF1B                            .                            .
> 
> 
> # ------------------------------------------------------------------------
> # subset cell information
> # ------------------------------------------------------------------------
> 
> table(colnames(dat1) %in% cell_info$cell)

TRUE 
1054 
> 
> meta_cell = cell_info[match(colnames(dat1), cell_info$cell),]
> dim(meta_cell)
[1] 1054   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AACACGTCAGTGGAGT-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC  13   M
2: ACAGCTAAGATGTGGC-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch post-mortem interval (hours)
1:   Control      CB6      SB2                           16
2:   Control      CB6      SB2                           16
   RNA Integrity Number genes  UMIs RNA mitochondr. percent
1:                  7.2  4994 11604                1.197863
2:                  7.2  2064  3637                1.237283
   RNA ribosomal percent
1:             1.0513616
2:             0.6598845
> 
> names(meta_cell)[11:12] = c("PMI", "RIN")
> names(meta_cell)[15:16] = c("mitoPercent", "riboPercent")
> dim(meta_cell)
[1] 1054   16
> meta_cell[1:2,]
                           cell cluster    sample individual region age sex
1: AACACGTCAGTGGAGT-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC  13   M
2: ACAGCTAAGATGTGGC-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC  13   M
   diagnosis Capbatch Seqbatch PMI RIN genes  UMIs mitoPercent riboPercent
1:   Control      CB6      SB2  16 7.2  4994 11604    1.197863   1.0513616
2:   Control      CB6      SB2  16 7.2  2064  3637    1.237283   0.6598845
> 
> summary(meta_cell)
                          cell             cluster               sample   
 AAACCTGTCGAATCCA-1_5864_BA9:   1   IN-SV2C    :1054   5387_BA9     : 95  
 AAACCTGTCTAACTTC-1_5958_BA9:   1   AST-FB     :   0   5939_BA9     : 74  
 AAAGATGAGACTTGAA-1_5864_BA9:   1   AST-PP     :   0   5538_PFC_Nova: 64  
 AAAGCAAAGTGACTCT-1_5565_BA9:   1   Endothelial:   0   5841_BA9     : 58  
 AAAGCAATCCATGAGT-1_5387_BA9:   1   IN-PV      :   0   5531_BA9     : 57  
 AAAGTAGCAATAGCGG-1_5945_PFC:   1   IN-SST     :   0   5565_BA9     : 57  
 (Other)                    :1048   (Other)    :   0   (Other)      :649  
   individual   region          age        sex       diagnosis      Capbatch  
 Min.   :4341   ACC:   0   Min.   : 4.00   F:250   ASD    :612   CB6    :403  
 1st Qu.:5387   PFC:1054   1st Qu.:12.00   M:804   Control:442   CB7    :257  
 Median :5565              Median :15.00                         CB1    :202  
 Mean   :5595              Mean   :15.14                         CB2    :192  
 3rd Qu.:5939              3rd Qu.:19.00                         CB3    :  0  
 Max.   :6033              Max.   :22.00                         CB4    :  0  
                                                                 (Other):  0  
 Seqbatch       PMI             RIN            genes           UMIs      
 SB1:394   Min.   : 3.00   Min.   :6.500   Min.   : 979   Min.   : 1450  
 SB2:660   1st Qu.:15.00   1st Qu.:7.400   1st Qu.:2483   1st Qu.: 4704  
 SB3:  0   Median :21.00   Median :7.600   Median :3294   Median : 6890  
           Mean   :20.18   Mean   :7.766   Mean   :3305   Mean   : 7234  
           3rd Qu.:24.00   3rd Qu.:8.300   3rd Qu.:4017   3rd Qu.: 9140  
           Max.   :42.00   Max.   :9.000   Max.   :7118   Max.   :25263  
                                                                         
  mitoPercent      riboPercent     
 Min.   :0.0000   Min.   :0.05375  
 1st Qu.:0.4047   1st Qu.:0.51180  
 Median :0.7567   Median :0.72533  
 Mean   :1.0456   Mean   :0.80878  
 3rd Qu.:1.3864   3rd Qu.:1.00626  
 Max.   :4.9872   Max.   :3.39491  
                                   
> meta_cell$age = scale(meta_cell$age)
> meta_cell$PMI = scale(meta_cell$PMI)
> meta_cell$RIN = scale(meta_cell$RIN)
> meta_cell$Capbatch = droplevels(meta_cell$Capbatch)
> meta_cell$Seqbatch = droplevels(meta_cell$Seqbatch)
> meta_cell$individual = as.factor(meta_cell$individual)
> summary(meta_cell)
                          cell             cluster               sample   
 AAACCTGTCGAATCCA-1_5864_BA9:   1   IN-SV2C    :1054   5387_BA9     : 95  
 AAACCTGTCTAACTTC-1_5958_BA9:   1   AST-FB     :   0   5939_BA9     : 74  
 AAAGATGAGACTTGAA-1_5864_BA9:   1   AST-PP     :   0   5538_PFC_Nova: 64  
 AAAGCAAAGTGACTCT-1_5565_BA9:   1   Endothelial:   0   5841_BA9     : 58  
 AAAGCAATCCATGAGT-1_5387_BA9:   1   IN-PV      :   0   5531_BA9     : 57  
 AAAGTAGCAATAGCGG-1_5945_PFC:   1   IN-SST     :   0   5565_BA9     : 57  
 (Other)                    :1048   (Other)    :   0   (Other)      :649  
   individual  region          age           sex       diagnosis   Capbatch 
 5387   : 95   ACC:   0   Min.   :-2.34261   F:250   ASD    :612   CB1:202  
 5939   : 74   PFC:1054   1st Qu.:-0.66094   M:804   Control:442   CB2:192  
 5538   : 64              Median :-0.03031                         CB6:403  
 5841   : 58              Mean   : 0.00000                         CB7:257  
 5531   : 57              3rd Qu.: 0.81052                                  
 5565   : 57              Max.   : 1.44115                                  
 (Other):649                                                                
 Seqbatch       PMI                RIN              genes           UMIs      
 SB1:394   Min.   :-2.09544   Min.   :-2.1622   Min.   : 979   Min.   : 1450  
 SB2:660   1st Qu.:-0.63207   1st Qu.:-0.6255   1st Qu.:2483   1st Qu.: 4704  
           Median : 0.09962   Median :-0.2840   Median :3294   Median : 6890  
           Mean   : 0.00000   Mean   : 0.0000   Mean   :3305   Mean   : 7234  
           3rd Qu.: 0.46546   3rd Qu.: 0.9113   3rd Qu.:4017   3rd Qu.: 9140  
           Max.   : 2.66052   Max.   : 2.1065   Max.   :7118   Max.   :25263  
                                                                              
  mitoPercent      riboPercent     
 Min.   :0.0000   Min.   :0.05375  
 1st Qu.:0.4047   1st Qu.:0.51180  
 Median :0.7567   Median :0.72533  
 Mean   :1.0456   Mean   :0.80878  
 3rd Qu.:1.3864   3rd Qu.:1.00626  
 Max.   :4.9872   Max.   :3.39491  
                                   
> 
> table(meta_cell$Capbatch, meta_cell$Seqbatch)
     
      SB1 SB2
  CB1 202   0
  CB2 192   0
  CB6   0 403
  CB7   0 257
> summary(meta_cell$UMIs/meta_cell$genes)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.349   1.886   2.090   2.096   2.285   3.549 
> 
> # make sure each individual has a unique sample
> table(tapply(meta_cell$sample, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> # check each individual has a unique Capbatch
> table(tapply(meta_cell$Capbatch, meta_cell$individual, 
+              function(v){length(unique(v))}))

 1 
23 
> 
> table(meta_cell$cluster)

          AST-FB           AST-PP      Endothelial            IN-PV 
               0                0                0                0 
          IN-SST          IN-SV2C           IN-VIP             L2/3 
               0             1054                0                0 
              L4             L5/6          L5/6-CC        Microglia 
               0                0                0                0 
      Neu-NRGN-I      Neu-NRGN-II          Neu-mat              OPC 
               0                0                0                0 
Oligodendrocytes 
               0 
> table(meta_cell$region)

 ACC  PFC 
   0 1054 
> table(meta_cell$diagnosis)

    ASD Control 
    612     442 
> sort(table(paste(meta_cell$individual, meta_cell$diagnosis, sep=":")))

    5403:ASD 5936:Control 5577:Control     5978:ASD 5879:Control 5976:Control 
          10           24           26           29           31           33 
    5419:ASD 5408:Control 5958:Control     5294:ASD     6033:ASD 5893:Control 
          35           36           39           43           43           44 
    5945:ASD 4341:Control     5144:ASD     5278:ASD     5864:ASD     5531:ASD 
          49           50           50           51           56           57 
    5565:ASD     5841:ASD 5538:Control     5939:ASD 5387:Control 
          57           58           64           74           95 
> tt1 = table(meta_cell$individual)
> sort(tt1)

5403 5936 5577 5978 5879 5976 5419 5408 5958 5294 6033 5893 5945 4341 5144 5278 
  10   24   26   29   31   33   35   36   39   43   43   44   49   50   50   51 
5864 5531 5565 5841 5538 5939 5387 
  56   57   57   58   64   74   95 
> 
> # ------------------------------------------------------------------------
> # generate individual level information
> # ------------------------------------------------------------------------
> 
> length(unique(meta_cell$individual))
[1] 23
> 
> meta_ind = distinct(meta_cell[,3:12])
> dim(meta_ind)
[1] 23 10
> meta_ind[1:2,]
      sample individual region        age sex diagnosis Capbatch Seqbatch
1: 4341_BA46       4341    PFC -0.4507329   M   Control      CB6      SB2
2:  5144_PFC       5144    PFC -1.7119873   M       ASD      CB1      SB1
          PMI        RIN
1: -0.5101214 -0.9669783
2: -2.0954432  0.3990061
> meta_ind$diagnosis = relevel(meta_ind$diagnosis, ref="Control")
> table(meta_ind$diagnosis)

Control     ASD 
     10      13 
> 
> if(nrow(meta_ind) != length(unique(meta_cell$individual))){
+   stop("there is non-unique information\n")
+ }
> 
> table(meta_ind$Seqbatch, meta_ind$Capbatch)
     
      CB1 CB2 CB6 CB7
  SB1   6   4   0   0
  SB2   0   0   7   6
> 
> # ------------------------------------------------------------------------
> # filter out genes with too many zero's
> # ------------------------------------------------------------------------
> 
> n.zeros = rowSums(dat1 == 0)
> summary(n.zeros)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0   794.0   949.0   865.2  1016.0  1054.0 
> 
> 0.6*ncol(dat1)
[1] 632.4
> 0.8*ncol(dat1)
[1] 843.2
> 
> table(n.zeros < 0.6*ncol(dat1))

FALSE  TRUE 
15673  2368 
> table(n.zeros < 0.8*ncol(dat1))

FALSE  TRUE 
12486  5555 
> table(n.zeros < 0.9*ncol(dat1))

FALSE  TRUE 
 9032  9009 
> 
> w2kp = which(n.zeros < 0.8*ncol(dat1))
> dat1 = dat1[w2kp,]
> 
> dim(dat1)
[1] 5555 1054
> dat1[1:5,1:4]
5 x 4 sparse Matrix of class "dgCMatrix"
        AACACGTCAGTGGAGT-1_4341_BA46 ACAGCTAAGATGTGGC-1_4341_BA46
DNAJC11                            .                            .
VPS13D                             1                            .
PER3                               .                            .
KIF1B                              2                            .
PRKCZ                              .                            .
        ACGGGCTGTGGAAAGA-1_4341_BA46 ACTTTCAAGACGCAAC-1_4341_BA46
DNAJC11                            .                            .
VPS13D                             2                            3
PER3                               .                            .
KIF1B                              2                            1
PRKCZ                              .                            1
> 
> genes = rownames(dat1)
> 
> # ------------------------------------------------------------------------
> # add read-depth information
> # ------------------------------------------------------------------------
> 
> dim(meta_cell)
[1] 1054   16
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AACACGTCAGTGGAGT-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC -0.4507329
2: ACAGCTAAGATGTGGC-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC -0.4507329
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes  UMIs
1:   M   Control      CB6      SB2 -0.5101214 -0.9669783  4994 11604
2:   M   Control      CB6      SB2 -0.5101214 -0.9669783  2064  3637
   mitoPercent riboPercent
1:    1.197863   1.0513616
2:    1.237283   0.6598845
> 
> table(meta_cell$cell == colnames(dat1))

TRUE 
1054 
> 
> rd_cell = colSums(dat1)
> summary(rd_cell)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1273    4077    5890    6151    7702   21683 
> 
> meta_cell$rd = rd_cell
> 
> dim(meta_cell)
[1] 1054   17
> meta_cell[1:2,]
                           cell cluster    sample individual region        age
1: AACACGTCAGTGGAGT-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC -0.4507329
2: ACAGCTAAGATGTGGC-1_4341_BA46 IN-SV2C 4341_BA46       4341    PFC -0.4507329
   sex diagnosis Capbatch Seqbatch        PMI        RIN genes  UMIs
1:   M   Control      CB6      SB2 -0.5101214 -0.9669783  4994 11604
2:   M   Control      CB6      SB2 -0.5101214 -0.9669783  2064  3637
   mitoPercent riboPercent   rd
1:    1.197863   1.0513616 9683
2:    1.237283   0.6598845 3122
> 
> names(meta_cell)[1] = "cell_id"
> mean(meta_cell$cell_id == colnames(dat1))
[1] 1
> 
> 
> # ------------------------------------------------------------------------
> # read in DCA estimates
> # ------------------------------------------------------------------------
>   
> f_mean = file.path(data.dca.dir, paste0(grp1, "_mean_norm.tsv"))
> f_disp = file.path(data.dca.dir, paste0(grp1, "_dispersion.tsv.gz"))
> f_pi   = file.path(data.dca.dir, paste0(grp1, "_pi.tsv.gz"))
>   
> dca_mean = fread(f_mean, sep="\t", data.table = FALSE)
> dca_disp = fread(f_disp)
> dca_pi   = fread(f_pi)
>   
> dim(dca_mean)
[1] 18041  1055
> dim(dca_disp)
[1] 18041  1055
> dim(dca_pi)
[1] 18041  1055
>   
> dca_mean[1:2,1:5]
       V1 AACACGTCAGTGGAGT-1_4341_BA46 ACAGCTAAGATGTGGC-1_4341_BA46
1 DNAJC11                     0.100956                     0.097423
2    NADK                     0.031303                     0.032529
  ACGGGCTGTGGAAAGA-1_4341_BA46 ACTTTCAAGACGCAAC-1_4341_BA46
1                     0.107428                     0.112926
2                     0.031300                     0.031145
> dca_disp[1:2,1:5]
        V1 AACACGTCAGTGGAGT-1_4341_BA46 ACAGCTAAGATGTGGC-1_4341_BA46
1: DNAJC11                     5.471353                     4.966359
2:    NADK                     2.579279                     2.345211
   ACGGGCTGTGGAAAGA-1_4341_BA46 ACTTTCAAGACGCAAC-1_4341_BA46
1:                     5.124763                     5.250386
2:                     2.410968                     2.508963
> dca_pi[1:2,1:5]
        V1 AACACGTCAGTGGAGT-1_4341_BA46 ACAGCTAAGATGTGGC-1_4341_BA46
1: DNAJC11                     0.036963                     0.065986
2:    NADK                     0.384659                     0.435154
   ACGGGCTGTGGAAAGA-1_4341_BA46 ACTTTCAAGACGCAAC-1_4341_BA46
1:                     0.059586                     0.047123
2:                     0.435226                     0.387631
>   
> table(meta_cell$cell_id == colnames(dca_mean)[-1])

TRUE 
1054 
> table(rownames(dat1) %in% dca_mean$V1)

TRUE 
5555 
>   
> w2kp = match(rownames(dat1), dca_mean$V1)
>   
> dca_mean = dca_mean[w2kp,]
> dca_disp = dca_disp[w2kp,]
> dca_pi   = dca_pi[w2kp,]
>   
> table(rownames(dat1) == dca_mean$V1)

TRUE 
5555 
> table(rownames(dat1) == dca_disp$V1)

TRUE 
5555 
> table(rownames(dat1) == dca_pi$V1)

TRUE 
5555 
>   
> rownames(dca_mean) = dca_mean$V1
> rownames(dca_disp) = dca_disp$V1
> rownames(dca_pi)   = dca_pi$V1
>   
> dca_mean = data.matrix(dca_mean[,-1])
> dca_disp = data.matrix(dca_disp[,-1, with=FALSE])
> dca_pi   = data.matrix(dca_pi[,-1,   with=FALSE])
>   
> table(colnames(dat1) == colnames(dca_mean))

TRUE 
1054 
> table(colnames(dat1) == colnames(dca_disp))

TRUE 
1054 
> table(colnames(dat1) == colnames(dca_pi))

TRUE 
1054 
>   
> dca_par_list = list(dca_mean, dca_disp, dca_pi)
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3208724 171.4    5852698 312.6         NA  4449635 237.7
Vcells 33887401 258.6   92554894 706.2      65536 91204242 695.9
> 
> rm(dca_mean)
> rm(dca_disp)
> rm(dca_pi)
> rm(dat1)
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3208678 171.4    5852698 312.6         NA  4449635 237.7
Vcells 30148480 230.1   92554894 706.2      65536 91204242 695.9
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3208683 171.4    5852698 312.6         NA  4449635 237.7
Vcells 30148499 230.1   92554894 706.2      65536 91204242 695.9
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3208683 171.4    5852698 312.6         NA  4449635 237.7
Vcells 30148499 230.1   92554894 706.2      65536 91204242 695.9
> 
> # ========================================================================
> # perform testing
> # ========================================================================
> 
> set.seed(2020)
>   
> date()
[1] "Fri Oct 29 15:44:35 2021"
>   
>   
> # ---------------------------------------------------------------
> # estimate distance across individuals
> # ---------------------------------------------------------------
> 
> 
> var2test      = "diagnosis"
> var2adjust    = c("age", "sex", "Seqbatch", "RIN")
> 
> var2test_type = "binary"
> var_per_cell  = c("rd")
> 
> 
> date()
[1] "Fri Oct 29 15:44:35 2021"
> 
> dist_list = list()
> 
> for(fit_method in c("dca_direct")){
+   for(d_metric in c("Was", "JSD")){
+     message(sprintf("fit_method: %s, d_metric: %s\n", fit_method, d_metric))
+     message(date())
+     
+     label = paste(fit_method, d_metric, sep="_")
+     
+     dist1 = ideas_dist(dca_par_list, meta_cell, meta_ind, 
+                        var_per_cell, var2test, var2test_type,
+                        d_metric = d_metric, 
+                        fit_method = fit_method)
+     dist_list[[label]] = dist1
+   }
+ }
fit_method: dca_direct, d_metric: Was

Fri Oct 29 15:44:35 2021
estimating distribution for each gene and each individual by dca_direct

fit_method: dca_direct, d_metric: JSD

Fri Oct 29 15:45:05 2021
estimating distribution for each gene and each individual by dca_direct

> 
> date()
[1] "Fri Oct 29 15:45:36 2021"
> 
> # not sure why, it will take a few gc() to see the reduction of memory usage
> for(gi in 1:10){
+   gc()
+ }
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  3243938 173.3    5852698 312.6         NA  5852698 312.6
Vcells 36208788 276.3   92554894 706.2      65536 91204242 695.9
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by kernel regression, ZINB
> # ---------------------------------------------------------------
> 
> y = as.numeric(as.factor(meta_ind$diagnosis)) - 1
> table(y)
y
 0  1 
10 13 
> 
> X = model.matrix(~ age + sex + Seqbatch + RIN, data=meta_ind)
> 
> dim(X)
[1] 23  5
> X[1:2,]
  (Intercept)        age sexM SeqbatchSB2        RIN
1           1 -0.4507329    1           1 -0.9669783
2           1 -1.7119873    1           0  0.3990061
> X = X[,-1]
> 
> n_gene = nrow(dist_list[[1]])
> pval_KR = matrix(NA, nrow = n_gene, ncol = length(dist_list))
> rownames(pval_KR) = genes
> colnames(pval_KR) = paste("KR", names(dist_list), sep="_")
> 
> 
> set.seed(905)
> 
> date()
[1] "Fri Oct 29 15:45:38 2021"
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   
+   pval_KR[,k] = foreach(i_g = 1:dim(dist_k)[1], .combine = "c") %dorng% {
+     Di = dist_k[i_g,,]
+     
+     if(any(is.na(Di))){
+       pval = NA 
+     }else{
+       Ki = D2K(Di)
+       m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                   method = "permutation", nperm = 4999)
+       pval = m1$p_values
+       
+       if(pval < 0.1){
+         m1 = MiRKAT(y = y, X = X, Ks = Ki, out_type = "D", 
+                     method = "permutation", nperm = 9999)
+         pval = m1$p_values
+       }
+     }
+     pval
+   }
+ }
dca_direct_Was
Fri Oct 29 15:45:38 2021
dca_direct_JSD
Fri Oct 29 15:48:36 2021
> date()
[1] "Fri Oct 29 15:51:30 2021"
> 
> dim(pval_KR)
[1] 5555    2
> pval_KR[1:2,]
        KR_dca_direct_Was KR_dca_direct_JSD
DNAJC11            0.0508            0.0432
VPS13D             0.0405            0.0379
> 
> 
> # ---------------------------------------------------------------
> # pval calculation by permanova
> # ---------------------------------------------------------------
> 
> n_perm  = 4999
> n_perm2 = 9999
> r.seed  = 904
> 
> pval_PS = matrix(NA, nrow=n_gene, ncol=length(dist_list))
> rownames(pval_PS) = genes
> colnames(pval_PS) = names(dist_list)
> colnames(pval_PS) = paste("PS", names(dist_list), sep="_")
> 
> date()
[1] "Fri Oct 29 15:51:30 2021"
> 
> for(k in 1:length(dist_list)){
+   message(names(dist_list)[k])
+   message(date())
+   dist_k  = dist_list[[k]]
+   pval_k  = permanova(dist_k, meta_ind, var2test, var2adjust, 
+                       var2test_type, n_perm=n_perm, r.seed=r.seed)
+   w2rerun = which(pval_k < 0.1)
+   if(length(w2rerun) > 0){
+     if (length(w2rerun) == 1){
+       slice_dist_k = dist_k[w2rerun, , ]  
+       rerun_dist_k = array(dim = c(1, dim(slice_dist_k)))
+       rerun_dist_k[1, , ] = slice_dist_k
+     }else{
+       rerun_dist_k = dist_k[w2rerun, , ]
+     }
+     pval_kr = permanova(rerun_dist_k, meta_ind, var2test, var2adjust, 
+                         var2test_type, n_perm=n_perm2, r.seed=r.seed)
+     pval_k[w2rerun] = pval_kr
+   }
+   pval_PS[,k] = pval_k
+ }
dca_direct_Was
Fri Oct 29 15:51:30 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

dca_direct_JSD
Fri Oct 29 16:04:11 2021
testing for 'diagnosis', a binary variable

testing for 'diagnosis', a binary variable

> 
> date()
[1] "Fri Oct 29 16:16:22 2021"
> 
> summary(pval_KR)
 KR_dca_direct_Was KR_dca_direct_JSD
 Min.   :0.0002    Min.   :0.0001   
 1st Qu.:0.1263    1st Qu.:0.1307   
 Median :0.3158    Median :0.3514   
 Mean   :0.3831    Mean   :0.4041   
 3rd Qu.:0.6205    3rd Qu.:0.6566   
 Max.   :0.9996    Max.   :0.9998   
> summary(pval_PS)
 PS_dca_direct_Was PS_dca_direct_JSD
 Min.   :0.0001    Min.   :0.0001   
 1st Qu.:0.0556    1st Qu.:0.0684   
 Median :0.1944    Median :0.2480   
 Mean   :0.3040    Mean   :0.3388   
 3rd Qu.:0.5070    3rd Qu.:0.5686   
 Max.   :0.9996    Max.   :0.9998   
> 
> # ------------------------------------------------------------------------
> # summarize and save the results
> # ------------------------------------------------------------------------
> 
> df = data.frame(gene=genes, pval_KR, pval_PS)
> dim(df)
[1] 5555    5
> head(df)
           gene KR_dca_direct_Was KR_dca_direct_JSD PS_dca_direct_Was
DNAJC11 DNAJC11            0.0508            0.0432            0.0157
VPS13D   VPS13D            0.0405            0.0379            0.0179
PER3       PER3            0.4334            0.2552            0.4680
KIF1B     KIF1B            0.7480            0.5910            0.6480
PRKCZ     PRKCZ            0.4164            0.4876            0.1462
KCNAB2   KCNAB2            0.6602            0.7282            0.6280
        PS_dca_direct_JSD
DNAJC11            0.0148
VPS13D             0.0146
PER3               0.3056
KIF1B              0.4592
PRKCZ              0.2592
KCNAB2             0.7078
> 
> gh = list()
> for(k in 2:ncol(df)){
+   method_nm = names(df)[k]
+   gh[[k-1]] = ggplot(df, aes_string(x = method_nm)) + 
+     labs(title = method_nm) + 
+     geom_histogram(color = "darkblue", fill = "lightblue", 
+                    breaks = seq(0,1,by = 0.02))
+ }
> 
> fig.name  = sprintf("figures/step1d_dca_direct_pval_hist_%s.pdf", 
+                     grp)
> file.name = sprintf("res/step1d_dca_direct_pvals_%s.tsv", 
+                     grp)
> 
> 
> pdf(fig.name, width = 9, height = 9)
> ggarrange(plotlist=gh, ncol = 2, nrow = 2)
> dev.off()
null device 
          1 
> 
> fwrite(df, file = file.name, sep = "\t")
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)
Ncells  3386453 180.9    5852698 312.6         NA   5852698  312.6
Vcells 37430757 285.6  113566034 866.5      65536 192351233 1467.6
> 
> sessionInfo()
R version 4.1.0 (2021-05-18)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

Random number generation:
 RNG:     L'Ecuyer-CMRG 
 Normal:  Inversion 
 Sample:  Rejection 
 
locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ideas_0.0.9000       emdbook_1.3.12       pscl_1.5.5          
 [4] ggpointdensity_0.1.0 ggpubr_0.4.0         ggplot2_3.3.5       
 [7] transport_0.12-2     MiRKAT_1.1.4         svd_0.5             
[10] doRNG_1.8.2          rngtools_1.5         doParallel_1.0.16   
[13] iterators_1.0.13     foreach_1.5.1        dplyr_1.0.7         
[16] data.table_1.14.0    Matrix_1.3-3         MASS_7.3-54         

loaded via a namespace (and not attached):
 [1] segmented_1.3-4     nlme_3.1-152        matrixStats_0.61.0 
 [4] numDeriv_2016.8-1.1 tools_4.1.0         backports_1.2.1    
 [7] utf8_1.2.1          R6_2.5.0            vegan_2.5-7        
[10] DBI_1.1.1           mgcv_1.8-35         colorspace_2.0-2   
[13] permute_0.9-5       withr_2.4.2         tidyselect_1.1.1   
[16] curl_4.3.2          compiler_4.1.0      quantreg_5.86      
[19] SparseM_1.81        labeling_0.4.2      scales_1.1.1       
[22] mvtnorm_1.1-2       digest_0.6.27       foreign_0.8-81     
[25] minqa_1.2.4         mixtools_1.2.0      R.utils_2.11.0     
[28] rio_0.5.27          pkgconfig_2.0.3     lme4_1.1-27.1      
[31] bbmle_1.0.23.1      rlang_0.4.11        readxl_1.3.1       
[34] farver_2.1.0        generics_0.1.0      R.oo_1.24.0        
[37] zip_2.2.0           car_3.0-11          magrittr_2.0.1     
[40] Rcpp_1.0.7          munsell_0.5.0       fansi_0.5.0        
[43] ape_5.5             abind_1.4-5         R.methodsS3_1.8.1  
[46] lifecycle_1.0.0     stringi_1.6.2       CompQuadForm_1.4.3 
[49] carData_3.0-4       plyr_1.8.6          grid_4.1.0         
[52] bdsmatrix_1.3-4     forcats_0.5.1       crayon_1.4.1       
[55] lattice_0.20-44     cowplot_1.1.1       haven_2.4.1        
[58] splines_4.1.0       hms_1.1.0           pillar_1.6.1       
[61] boot_1.3-28         ggsignif_0.6.2      codetools_0.2-18   
[64] stats4_4.1.0        glue_1.4.2          GUniFrac_1.2       
[67] vctrs_0.3.8         nloptr_1.2.2.2      MatrixModels_0.5-0 
[70] cellranger_1.1.0    gtable_0.3.0        purrr_0.3.4        
[73] tidyr_1.1.3         kernlab_0.9-29      assertthat_0.2.1   
[76] openxlsx_4.2.4      broom_0.7.8         coda_0.19-4        
[79] rstatix_0.7.0       PearsonDS_1.2       survival_3.2-11    
[82] tibble_3.1.2        conquer_1.0.2       cluster_2.1.2      
[85] ellipsis_0.3.2     
> q(save="no")
> proc.time()
    user   system  elapsed 
7204.599  309.691 1916.114 
