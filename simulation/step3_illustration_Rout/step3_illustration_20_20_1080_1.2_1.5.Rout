
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # illustrate a few examples
> 
> args = commandArgs(trailingOnly=TRUE)
> args
[1] "ncase=20"   "nctrl=20"   "ncell=1080" "r_mean=1.2" "r_var=1.5" 
> 
> if (length(args) < 5) {
+   message("no enough arguments, using default values")
+   r_mean   = 1.2     # The expected fold-changes in mean
+   r_var    = 1.5     # The expected fold-changes in variances
+   ncase    = 13       # case individuals
+   nctrl    = 10       # control individuals
+   ncell    = 1080     # numbers of cells collected from each individuals.
+ } else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> 
> if(ncell == 0){
+   UNEQ_N_CELL = TRUE
+ }else{
+   UNEQ_N_CELL = FALSE
+ }
> 
> if(UNEQ_N_CELL){
+   config = sprintf("ncase_%d_nctrl_%d_unequal_n_cell", ncase, nctrl)
+ }else{
+   config = sprintf("ncase_%d_nctrl_%d_ncell_%d", ncase, nctrl, ncell)
+ }
> 
> config = sprintf("%s_fold_mean_%.1f_var_%.1f", config, r_mean, r_var)
> config
[1] "ncase_20_nctrl_20_ncell_1080_fold_mean_1.2_var_1.5"
> 
> # ---------------------------------------------------------------
> # initial setup
> # ---------------------------------------------------------------
> 
> library(MASS)
> library(emdbook)
> library(moments)
> library(MAST)
Loading required package: SingleCellExperiment
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

> library(lme4)
Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:S4Vectors’:

    expand

> library(DESeq2)
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
> library(foreach)
> library(doRNG)
Loading required package: rngtools
> library(MiRKAT)
> library(reticulate)
> library(transport)
> library(stringr)
> 
> library(data.table)

Attaching package: ‘data.table’

The following object is masked from ‘package:SummarizedExperiment’:

    shift

The following object is masked from ‘package:GenomicRanges’:

    shift

The following object is masked from ‘package:IRanges’:

    shift

The following objects are masked from ‘package:S4Vectors’:

    first, second

> library(pryr)
Registered S3 method overwritten by 'pryr':
  method      from
  print.bytes Rcpp

Attaching package: ‘pryr’

The following object is masked from ‘package:data.table’:

    address

> library(ggplot2)
> library(ggpubr)
Registered S3 methods overwritten by 'car':
  method                          from
  influence.merMod                lme4
  cooks.distance.influence.merMod lme4
  dfbeta.influence.merMod         lme4
  dfbetas.influence.merMod        lme4
> theme_set(theme_classic())
> 
> library(ideas)
> library(reshape2)

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

> 
> # ---------------------------------------------------------------
> # load data
> # ---------------------------------------------------------------
> 
> sim_data     = readRDS(sprintf("data/sim_data_%s.rds", config))
> count_matrix = sim_data$count_matrix
> meta_cell    = sim_data$meta_cell
> meta_ind     = sim_data$meta_ind
> gene_index   = sim_data$gene_index
> 
> ls()
 [1] "args"         "config"       "count_matrix" "gene_index"   "i"           
 [6] "meta_cell"    "meta_ind"     "ncase"        "ncell"        "nctrl"       
[11] "r_mean"       "r_var"        "sim_data"     "UNEQ_N_CELL" 
> EE_index   = gene_index$EE_index
> mean_index = gene_index$mean_index
> var_index  = gene_index$var_index
> 
> dim(count_matrix)
[1]  8000 43200
> count_matrix[1:3,1:6]
      cell1 cell2 cell3 cell4 cell5 cell6
gene1     1     1     0     1     0     0
gene2     0     1     0     0     2     0
gene3     0     0     0     2     0     1
> 
> dim(meta_cell)
[1] 43200     5
> meta_cell[1:2,]
      cell_id individual phenotype cell_rd      CDR
cell1   cell1       ind1         1    9451 0.442875
cell2   cell2       ind1         1    9471 0.443500
> 
> dim(meta_ind)
[1] 40  3
> meta_ind[1:2,]
     individual phenotype        RIN
ind1       ind1         1 -0.7018300
ind2       ind2         1  0.3460781
> 
> rm(sim_data)
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   7817988  417.6   13973607  746.3         NA   9710537  518.6
Vcells 359015291 2739.1  518830148 3958.4      32768 359077494 2739.6
> 
> # ---------------------------------------------------------------
> # read in p-values
> # ---------------------------------------------------------------
> 
> pvals = fread(sprintf("results/pval_%s.txt", config))
> dim(pvals)
[1] 8000   12
> pvals[1:2,]
   geneType KR_zinb_Was KR_zinb_JSD KR_kde_Was KR_kde_JSD PS_zinb_Was
1:       EE       0.912       0.673      0.829      0.816       0.885
2:       EE       0.617       0.425      0.385      0.016       0.615
   PS_zinb_JSD PS_kde_Was PS_kde_JSD deseq2_pval mast_pval_glm mast_pval_glmer
1:       0.682      0.791      0.802   0.9255981  2.323481e-02       0.9390057
2:       0.397      0.344      0.009   0.1976305  1.276337e-09       0.8812422
> 
> table(pvals$geneType)

    EE meanDE  varDE 
  6000   1000   1000 
> 
> pvals_rank_sum = fread(sprintf("results/pval_ranksum_%s.txt", config))
> dim(pvals_rank_sum)
[1] 8000   13
> pvals_rank_sum[1:2,]
   geneType KR_zinb_Was KR_zinb_JSD KR_kde_Was KR_kde_JSD PS_zinb_Was
1:       EE       0.912       0.673      0.829      0.816       0.885
2:       EE       0.617       0.425      0.385      0.016       0.615
   PS_zinb_JSD PS_kde_Was PS_kde_JSD deseq2_pval mast_pval_glm mast_pval_glmer
1:       0.682      0.791      0.802   0.9255981  2.323481e-02       0.9390057
2:       0.397      0.344      0.009   0.1976305  1.276337e-09       0.8812422
   ranksum_pval
1: 6.688112e-01
2: 3.116024e-08
> 
> stopifnot(max(abs(pvals$PS_zinb_Was - 
+                     pvals_rank_sum$PS_zinb_Was), na.rm=TRUE) < 1e-10)
> pvals = pvals_rank_sum
> 
> # ---------------------------------------------------------------
> # read in scDD p-values
> # ---------------------------------------------------------------
> 
> fnm_scDD = sprintf("results/res_scDD_%s.txt", config)
> 
> if(file.exists(fnm_scDD)){
+   pvals_scDD = fread()
+   dim(pvals_scDD)
+   pvals_scDD[1:2,]
+   
+   pvals$scDD = pvals_scDD$combined.pvalue
+   pvals$scDD_category = pvals_scDD$DDcategory
+   
+   t1 = table(pvals$geneType, pvals$scDD_category)
+   t1
+   
+   scDD_cat = melt(t1, varnames = c("gene_type", "scDD_category"))
+   
+   g1 = ggplot(scDD_cat %>% group_by(gene_type) %>% 
+                 mutate(rel_freq = round(value/sum(value),2)), 
+               aes(x = gene_type, y = rel_freq, 
+                   fill = scDD_category, cumulative = TRUE)) +
+     geom_col() +
+     geom_text(aes(label = paste0(rel_freq*100,"%")), 
+               position = position_stack(vjust = 0.5))
+   
+   pdf(sprintf("figures/scDD_cat_%s.pdf", config), width=4, height=4)
+   print(g1)
+   dev.off()
+ }
> 
> # ---------------------------------------------------------------
> # read in ZINB-WaVE p-values
> # ---------------------------------------------------------------
> 
> fnm_zinb_wave = sprintf("results/res_ZINB-WaVE_%s.txt", config)
> 
> if(file.exists(fnm_zinb_wave)){
+   pvals_zw = fread(sprintf("results/res_ZINB-WaVE_%s.txt", config))
+   dim(pvals_zw)
+   pvals_zw[1:2,]
+   
+   pvals$ZINB_WaVE = pvals_zw$pvalue
+ }
> 
> # ---------------------------------------------------------------
> # find a few examples to illustrate
> # ---------------------------------------------------------------
> 
> w2use = which(pvals$geneType == "varDE" & pvals$deseq2_pval > 0.1 & 
+                 pvals$PS_zinb_Was <= 0.001)
> length(w2use)
[1] 78
> w2use
 [1]   49   93  204  473  528  541  599  872  984 1223 1224 1376 1786 1804 1988
[16] 2033 2258 2320 2380 2400 2485 2579 2696 2836 2952 3020 3023 3038 3381 3403
[31] 3512 3531 3584 3778 3853 3884 3921 4145 4342 4428 4452 4703 4786 4893 5178
[46] 5203 5233 5386 5504 5560 5584 5686 5689 5822 5970 6194 6249 6391 6399 6412
[61] 6416 6419 6433 6534 6566 6624 6750 6771 7020 7136 7181 7224 7340 7397 7660
[76] 7809 7833 7947
> pvals[w2use,]
    geneType KR_zinb_Was KR_zinb_JSD KR_kde_Was KR_kde_JSD PS_zinb_Was
 1:    varDE       0.001       0.001      0.003      0.007       0.001
 2:    varDE       0.001       0.005      0.001      0.001       0.001
 3:    varDE       0.003       0.001      0.001      0.013       0.001
 4:    varDE       0.002       0.001      0.001      0.002       0.001
 5:    varDE       0.001       0.002      0.006      0.016       0.001
 6:    varDE       0.001       0.001      0.001      0.001       0.001
 7:    varDE       0.002       0.001      0.003      0.065       0.001
 8:    varDE       0.010       0.001      0.008      0.696       0.001
 9:    varDE       0.001       0.001      0.001      0.031       0.001
10:    varDE       0.001       0.001      0.001      0.008       0.001
11:    varDE       0.003       0.001      0.001      0.001       0.001
12:    varDE       0.001       0.001      0.001      0.001       0.001
13:    varDE       0.001       0.001      0.001      0.654       0.001
14:    varDE       0.001       0.001      0.001      0.001       0.001
15:    varDE       0.001       0.001      0.001      0.058       0.001
16:    varDE       0.001       0.001      0.001      0.004       0.001
17:    varDE       0.001       0.001      0.001      0.043       0.001
18:    varDE       0.001       0.001      0.001      0.004       0.001
19:    varDE       0.001       0.001      0.001      0.008       0.001
20:    varDE       0.001       0.001      0.001      0.005       0.001
21:    varDE       0.001       0.001      0.001      0.001       0.001
22:    varDE       0.001       0.001      0.001      0.083       0.001
23:    varDE       0.001       0.001      0.001      0.001       0.001
24:    varDE       0.001       0.001      0.001      0.003       0.001
25:    varDE       0.001       0.001      0.001      0.019       0.001
26:    varDE       0.001       0.001      0.001      0.406       0.001
27:    varDE       0.003       0.001      0.001      0.001       0.001
28:    varDE       0.001       0.001      0.001      0.004       0.001
29:    varDE       0.001       0.001      0.001      0.011       0.001
30:    varDE       0.001       0.001      0.001      0.480       0.001
31:    varDE       0.001       0.001      0.001      0.001       0.001
32:    varDE       0.001       0.001      0.001      0.236       0.001
33:    varDE       0.001       0.001      0.001      0.008       0.001
34:    varDE       0.001       0.001      0.001      0.031       0.001
35:    varDE       0.001       0.001      0.001      0.207       0.001
36:    varDE       0.001       0.001      0.001      0.186       0.001
37:    varDE       0.001       0.001      0.001      0.030       0.001
38:    varDE       0.001       0.001      0.001      0.001       0.001
39:    varDE       0.001       0.001      0.001      0.060       0.001
40:    varDE       0.001       0.001      0.001      0.051       0.001
41:    varDE       0.002       0.001      0.001      0.287       0.001
42:    varDE       0.001       0.001      0.001      0.003       0.001
43:    varDE       0.001       0.001      0.001      0.002       0.001
44:    varDE       0.001       0.001      0.001      0.691       0.001
45:    varDE       0.001       0.001      0.001      0.333       0.001
46:    varDE       0.001       0.001      0.001      0.025       0.001
47:    varDE       0.001       0.001      0.001      0.001       0.001
48:    varDE       0.001       0.001      0.001      0.034       0.001
49:    varDE       0.001       0.001      0.001      0.066       0.001
50:    varDE       0.002       0.001      0.001      0.001       0.001
51:    varDE       0.001       0.001      0.001      0.904       0.001
52:    varDE       0.001       0.001      0.001      0.001       0.001
53:    varDE       0.001       0.001      0.002      0.002       0.001
54:    varDE       0.001       0.001      0.002      0.001       0.001
55:    varDE       0.001       0.001      0.001      0.103       0.001
56:    varDE       0.001       0.001      0.001      0.004       0.001
57:    varDE       0.002       0.001      0.001      0.036       0.001
58:    varDE       0.001       0.001      0.001      0.282       0.001
59:    varDE       0.001       0.001      0.001      0.003       0.001
60:    varDE       0.001       0.001      0.001      0.002       0.001
61:    varDE       0.001       0.001      0.001      0.004       0.001
62:    varDE       0.001       0.001      0.001      0.021       0.001
63:    varDE       0.001       0.001      0.001      0.001       0.001
64:    varDE       0.001       0.001      0.001      0.772       0.001
65:    varDE       0.001       0.001      0.001      0.001       0.001
66:    varDE       0.001       0.001      0.001      0.001       0.001
67:    varDE       0.001       0.001      0.001      0.001       0.001
68:    varDE       0.001       0.001      0.001      0.378       0.001
69:    varDE       0.001       0.001      0.001      0.083       0.001
70:    varDE       0.001       0.001      0.001      0.007       0.001
71:    varDE       0.001       0.001      0.001      0.013       0.001
72:    varDE       0.001       0.001      0.001      0.133       0.001
73:    varDE       0.004       0.001      0.001      0.023       0.001
74:    varDE       0.001       0.001      0.001      0.533       0.001
75:    varDE       0.003       0.001      0.001      0.001       0.001
76:    varDE       0.001       0.001      0.001      0.353       0.001
77:    varDE       0.001       0.001      0.006      0.799       0.001
78:    varDE       0.002       0.001      0.001      0.004       0.001
    geneType KR_zinb_Was KR_zinb_JSD KR_kde_Was KR_kde_JSD PS_zinb_Was
    PS_zinb_JSD PS_kde_Was PS_kde_JSD deseq2_pval mast_pval_glm mast_pval_glmer
 1:       0.001      0.003      0.013   0.8901153 2.712381e-100    2.793005e-06
 2:       0.003      0.001      0.001   0.2286419  2.044892e-89    2.929127e-07
 3:       0.001      0.001      0.006   0.8854795 3.068914e-109    2.352268e-03
 4:       0.002      0.001      0.006   0.3888671 1.243870e-102    2.642914e-06
 5:       0.001      0.002      0.018   0.8629936 2.902184e-110    4.265120e-07
 6:       0.001      0.001      0.001   0.3870911 1.295698e-104    8.852630e-03
 7:       0.001      0.003      0.069   0.1948636 1.344494e-111    1.047102e-06
 8:       0.001      0.004      0.717   0.4404175 4.508106e-102    1.785108e-08
 9:       0.001      0.001      0.027   0.3288672 1.002437e-128    2.831782e-09
10:       0.001      0.001      0.004   0.7696975  2.421164e-80    9.576968e-04
11:       0.001      0.001      0.001   0.8635120 3.359332e-101    5.779727e-09
12:       0.001      0.001      0.001   0.7816371  4.301758e-89    8.311914e-09
13:       0.001      0.001      0.637   0.6563927  7.319184e-93    4.672086e-05
14:       0.001      0.001      0.001   0.8580975 2.151898e-126    1.108436e-04
15:       0.001      0.001      0.045   0.7922471 3.798602e-108    1.319533e-07
16:       0.001      0.001      0.006   0.3740153 1.627056e-127    6.082230e-10
17:       0.001      0.001      0.046   0.7927417 6.513163e-111    4.555955e-10
18:       0.001      0.001      0.005   0.1796839 5.503339e-114    1.846930e-13
19:       0.001      0.001      0.003   0.4308249  4.474714e-77    2.514101e-04
20:       0.001      0.001      0.006   0.5938647  7.559976e-84    1.315964e-03
21:       0.001      0.001      0.001   0.4972469 1.459423e-106    7.795484e-02
22:       0.001      0.001      0.067   0.1714146  1.887945e-69    2.473497e-04
23:       0.001      0.001      0.001   0.3571366 1.025577e-113    1.049216e-05
24:       0.001      0.001      0.006   0.3617975  5.372081e-87    5.610482e-11
25:       0.001      0.001      0.016   0.7370839 9.117742e-142    9.343110e-06
26:       0.001      0.001      0.418   0.7252155  7.179883e-64    9.761602e-05
27:       0.001      0.001      0.001   0.1759972 2.916800e-141    8.222173e-08
28:       0.001      0.001      0.011   0.2364574  8.033097e-83    3.276697e-03
29:       0.001      0.001      0.006   0.1276566 7.110083e-136    3.504052e-05
30:       0.001      0.001      0.432   0.1389687  7.013190e-76    4.592167e-04
31:       0.001      0.001      0.001   0.9563445 3.701875e-107    1.071463e-05
32:       0.001      0.001      0.230   0.3872373  6.614892e-83    3.088290e-06
33:       0.001      0.001      0.006   0.3147733  1.198047e-82    6.924446e-02
34:       0.001      0.001      0.040   0.5238070  2.617998e-75    2.636665e-07
35:       0.001      0.001      0.225   0.4459842 1.207256e-136    1.254352e-06
36:       0.001      0.001      0.168   0.8550722  4.219526e-86    2.383841e-04
37:       0.001      0.001      0.025   0.1426146  3.276520e-96    4.612477e-03
38:       0.001      0.001      0.001   0.5713910 1.174910e-104    1.041935e-06
39:       0.001      0.001      0.082   0.4956991  2.249476e-62    4.030107e-05
40:       0.001      0.001      0.035   0.1531208  1.281501e-96    9.450418e-02
41:       0.001      0.001      0.301   0.4503732  3.781318e-66    8.319764e-04
42:       0.001      0.001      0.004   0.8343826  1.795012e-72    2.303755e-03
43:       0.001      0.001      0.001   0.6833665  9.766399e-84    2.890865e-04
44:       0.001      0.001      0.688   0.4559146  1.036158e-92    2.345041e-04
45:       0.001      0.001      0.327   0.5268891  4.020819e-97    1.902027e-07
46:       0.001      0.001      0.010   0.3653928 6.540275e-114    9.685318e-13
47:       0.001      0.001      0.001   0.7355020  7.574016e-95    8.511781e-08
48:       0.001      0.001      0.024   0.1073567  6.024777e-84    3.801503e-04
49:       0.001      0.001      0.068   0.2611317 1.006398e-118    2.588694e-07
50:       0.001      0.001      0.001   0.8069407  1.873830e-70    1.106119e-01
51:       0.001      0.001      0.873   0.3503655  4.702422e-76    1.317616e-05
52:       0.001      0.001      0.001   0.6955195 1.631232e-123    2.127766e-05
53:       0.001      0.001      0.001   0.1260985 7.100148e-107    2.760089e-02
54:       0.001      0.001      0.001   0.9563279  6.350106e-83    1.630747e-03
55:       0.001      0.001      0.095   0.8927516  2.853280e-91    1.295521e-08
56:       0.001      0.001      0.002   0.7205742  1.229976e-80    4.393557e-05
57:       0.001      0.001      0.048   0.6349572  9.301773e-61    3.521280e-07
58:       0.001      0.001      0.292   0.8015177  9.447459e-83    8.535183e-07
59:       0.001      0.001      0.001   0.5496768 7.235598e-137    3.235829e-06
60:       0.001      0.001      0.003   0.1954103 1.985860e-113    1.232663e-03
61:       0.001      0.001      0.005   0.3590609 3.964262e-137    1.202653e-09
62:       0.001      0.001      0.016   0.7496210 8.711044e-131    1.451521e-06
63:       0.001      0.001      0.001   0.3049768  5.392897e-81    1.949717e-10
64:       0.001      0.001      0.775   0.5797644  1.448479e-70    2.019426e-04
65:       0.001      0.001      0.001   0.5022036 1.248759e-124    7.086527e-04
66:       0.001      0.001      0.001   0.7609565  1.416249e-81    1.698527e-01
67:       0.001      0.001      0.001   0.7528043 1.802180e-114    8.644600e-06
68:       0.001      0.001      0.386   0.5161633  2.062729e-94    8.749738e-04
69:       0.001      0.001      0.072   0.2430488 6.264045e-111    3.617654e-06
70:       0.001      0.001      0.004   0.6520346  7.883602e-95    1.000000e+00
71:       0.001      0.001      0.005   0.8540632 2.770372e-114    1.357197e-06
72:       0.001      0.001      0.166   0.8441393 1.662296e-124    4.965156e-07
73:       0.001      0.001      0.021   0.9711168 1.622080e-132    3.464221e-08
74:       0.001      0.001      0.529   0.8520944  2.734868e-71    1.550422e-04
75:       0.001      0.001      0.001   0.6284733 1.037292e-112    3.360927e-03
76:       0.001      0.001      0.413   0.9491312  3.210988e-94    1.689062e-04
77:       0.001      0.002      0.796   0.7484947  9.556722e-59    3.014793e-06
78:       0.001      0.001      0.012   0.4731018 8.698527e-129    5.359074e-06
    PS_zinb_JSD PS_kde_Was PS_kde_JSD deseq2_pval mast_pval_glm mast_pval_glmer
    ranksum_pval
 1: 1.232635e-16
 2: 2.279692e-10
 3: 2.700677e-21
 4: 3.600561e-24
 5: 1.642197e-26
 6: 1.696454e-33
 7: 2.530996e-10
 8: 1.384019e-19
 9: 9.593023e-38
10: 1.080900e-25
11: 2.068212e-24
12: 5.431357e-22
13: 2.737102e-18
14: 3.497297e-25
15: 1.334402e-21
16: 1.263501e-42
17: 1.132278e-26
18: 3.508860e-37
19: 1.786728e-21
20: 1.770714e-22
21: 8.846202e-29
22: 2.116272e-25
23: 5.300755e-30
24: 2.013618e-29
25: 6.816931e-33
26: 8.126075e-15
27: 3.504632e-70
28: 8.354527e-31
29: 2.105367e-53
30: 4.428296e-30
31: 2.257544e-23
32: 3.898421e-22
33: 6.659258e-34
34: 7.107461e-21
35: 8.813903e-36
36: 1.741910e-17
37: 2.594431e-36
38: 2.857816e-26
39: 7.493126e-10
40: 5.474311e-41
41: 7.764652e-20
42: 8.754130e-15
43: 2.269410e-15
44: 2.930017e-25
45: 3.569067e-17
46: 5.522570e-37
47: 2.439680e-20
48: 1.016736e-30
49: 4.841231e-13
50: 3.910856e-25
51: 2.520379e-20
52: 4.383654e-33
53: 1.874321e-45
54: 1.461404e-17
55: 1.177376e-23
56: 1.737427e-18
57: 7.946049e-21
58: 2.386838e-20
59: 4.264912e-35
60: 2.311568e-47
61: 8.444848e-50
62: 6.437774e-22
63: 5.804299e-26
64: 2.544932e-18
65: 4.080102e-18
66: 1.989087e-20
67: 1.703376e-23
68: 7.703170e-29
69: 1.662294e-12
70: 2.455662e-21
71: 2.481214e-29
72: 1.185043e-25
73: 2.307199e-25
74: 4.685811e-16
75: 4.023175e-21
76: 1.790924e-22
77: 4.536303e-11
78: 2.436175e-37
    ranksum_pval
> 
> if(length(w2use) >= 2){
+   row_id = w2use[2]
+   row_id
+   
+   # ------------------------------------------------------------------------
+   # extract gene expression in cells and bulk samples
+   # ------------------------------------------------------------------------
+   
+   ct_cell = count_matrix[row_id,]
+   length(ct_cell)
+   print(table(ct_cell))
+   meta_ind$diagnosis = as.factor(meta_ind$phenotype)
+   
+   ct_ind = tapply(ct_cell, as.character(meta_cell$individual), sum)
+   mat1 = match(meta_ind$individual, names(ct_ind))
+   table(names(ct_ind)[mat1] == meta_ind$individual)
+   meta_ind[["gene1"]] = as.numeric(ct_ind)[mat1]
+   
+   nb2 = glm.nb(gene1 ~ RIN + diagnosis, data=meta_ind)
+   print(summary(nb2))
+   
+   # ------------------------------------------------------------------------
+   # boxplot of bulk gene expression vs. diagnosis
+   # ------------------------------------------------------------------------
+   
+   p1 = ggplot(meta_ind, aes(x=diagnosis, y=log10(gene1+0.5), col=diagnosis)) + 
+     geom_boxplot() + labs(y="log10(ind. level counts)")
+   p1 = p1 + geom_jitter(shape=16, position=position_jitter(0.2))
+   
+   # ------------------------------------------------------------------------
+   # density plot of cell level gene expression vs. diagnosis
+   # ------------------------------------------------------------------------
+   
+   mat2 = match(meta_cell$individual, meta_ind$individual)
+   meta_cell$diagnosis = as.factor(meta_ind$diagnosis[mat2])
+   
+   df_test = meta_cell
+   df_test$count = ct_cell
+   mat2 = match(meta_cell$individual, meta_ind$individual)
+   df_test$diagnosis = as.factor(df_test$diagnosis)
+   
+   table(df_test$count)
+   tb0 = table(df_test$count[which(df_test$phenotype==0)])
+   tb1 = table(df_test$count[which(df_test$phenotype==1)])
+   
+   tb0
+   tb1
+   
+   df_test$count[which(df_test$count >= 7)] = 7
+   
+   p3 = ggplot(df_test, aes(x=count, col=diagnosis, line_type=individual)) + 
+     geom_freqpoly(binwidth=1, closed="left") + guides(color = FALSE) + 
+     xlim(0, 7) + ylab("frequency")
+   
+   gg0 = ggarrange(p1, p3, ncol=2, nrow=1, widths = c(1.5, 2))
+   
+   pdf(sprintf("figures/ex1_%s.pdf", config), width=6.5, height=2.5)
+   print(gg0)
+   dev.off()
+ }
ct_cell
    0     1     2     3     4     5     6     7     8     9    10    11 
22092 12720  5363  1911   715   256    92    33    10     6     1     1 

Call:
glm.nb(formula = gene1 ~ RIN + diagnosis, data = meta_ind, init.theta = 85.93609492, 
    link = log)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-1.7274  -0.6354  -0.2225   0.3700   2.4247  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  6.72874    0.02541 264.759   <2e-16 ***
RIN          0.04009    0.02086   1.922   0.0547 .  
diagnosis1   0.04839    0.03615   1.339   0.1806    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for Negative Binomial(85.9361) family taken to be 1)

    Null deviance: 44.757  on 39  degrees of freedom
Residual deviance: 39.981  on 37  degrees of freedom
AIC: 486.95

Number of Fisher Scoring iterations: 1


              Theta:  85.9 
          Std. Err.:  21.1 

 2 x log-likelihood:  -478.954 
null device 
          1 
Warning message:
Removed 80 row(s) containing missing values (geom_path). 
> 
> # ------------------------------------------------------------------------
> # extract gene expression in cells and bulk samples
> # ------------------------------------------------------------------------
> 
> cal.power <- function(x, geneType){
+   tapply(x, geneType, function(x){sum(x < 0.05, na.rm=TRUE)/sum(!is.na(x))})
+ }
> 
> ms = c("PS_zinb_Was", "PS_kde_Was", "deseq2_pval", "mast_pval_glm", 
+        "mast_pval_glmer", "ranksum_pval", "scDD", "ZINB_WaVE")
> ms = ms[which(ms %in% names(pvals))]
> powers = apply(pvals[,..ms], 2, cal.power, geneType=pvals$geneType)
> 
> print(config)
[1] "ncase_20_nctrl_20_ncell_1080_fold_mean_1.2_var_1.5"
> print(powers)
       PS_zinb_Was PS_kde_Was deseq2_pval mast_pval_glm mast_pval_glmer
EE      0.04693019     0.0465       0.060        0.8855      0.04133333
meanDE  0.51855567     0.5580       0.596        0.9880      0.38100000
varDE   0.46392786     0.5330       0.060        1.0000      0.84900000
       ranksum_pval
EE        0.7261667
meanDE    0.9660000
varDE     0.9360000
> 
> gg = melt(powers)
> 
> names(gg) = c("geneType", "method", "power")
> gg$method = gsub("deseq2_pval", "DEseq2", gg$method)
> gg$method = gsub("PS_zinb_Was", "IDEAS_ZINB",  gg$method)
> gg$method = gsub("PS_kde_Was",  "IDEAS_KDE", gg$method)
> gg$method = gsub("mast_pval_glmer", "MAST_glmer", gg$method)
> gg$method = gsub("mast_pval_glm", "MAST", gg$method)
> gg$method = gsub("ranksum_pval", "Rank-sum", gg$method)
> table(gg$method)

    DEseq2  IDEAS_KDE IDEAS_ZINB       MAST MAST_glmer   Rank-sum 
         3          3          3          3          3          3 
> 
> lvs = c("Rank-sum", "MAST", "scDD", "ZINB_WaVE",  
+         "MAST_glmer", "DEseq2", "IDEAS_ZINB", "IDEAS_KDE")
> lvs = lvs[which(lvs %in% unique(gg$method))]
> 
> gg$method = factor(gg$method, levels = lvs)
> 
> g1 = ggplot(subset(gg, geneType %in% c("EE")), 
+             aes(x=geneType, y=power, fill=method)) +
+   geom_bar(stat="identity", position=position_dodge()) + 
+   scale_fill_brewer(palette="Paired") + 
+   geom_hline(yintercept=0.05, col="red") + 
+   ylab("type I error")
> 
> g2 = ggplot(subset(gg, geneType %in% c("meanDE", "varDE")), 
+             aes(x=geneType, y=power, fill=method)) +
+   geom_bar(stat="identity", position=position_dodge()) + 
+   scale_fill_brewer(palette="Paired") + 
+   geom_hline(yintercept=0.05, col="red")
> 
> gg1 = ggarrange(g1, g2, ncol = 2, nrow = 1, widths=c(1.25,2), 
+                 common.legend = TRUE, legend = "top")
> 
> pdf(sprintf("figures/power_%s.pdf", config), width=5.2, height=2.5)
> print(gg1)
> dev.off()
pdf 
  2 
> 
> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] reshape2_1.4.4              ideas_0.0.9000             
 [3] ggpubr_0.4.0                ggplot2_3.3.3              
 [5] pryr_0.1.4                  data.table_1.13.6          
 [7] stringr_1.4.0               transport_0.12-2           
 [9] reticulate_1.18             MiRKAT_1.1.4               
[11] doRNG_1.8.2                 rngtools_1.5               
[13] doParallel_1.0.16           iterators_1.0.13           
[15] foreach_1.5.1               DESeq2_1.30.0              
[17] lme4_1.1-26                 Matrix_1.3-0               
[19] MAST_1.16.0                 SingleCellExperiment_1.12.0
[21] SummarizedExperiment_1.20.0 Biobase_2.50.0             
[23] GenomicRanges_1.42.0        GenomeInfoDb_1.26.2        
[25] IRanges_2.24.1              S4Vectors_0.28.1           
[27] BiocGenerics_0.36.0         MatrixGenerics_1.2.0       
[29] matrixStats_0.57.0          moments_0.14               
[31] emdbook_1.3.12              MASS_7.3-53                

loaded via a namespace (and not attached):
  [1] minqa_1.2.4            colorspace_2.0-0       ggsignif_0.6.0        
  [4] rio_0.5.16             ellipsis_0.3.1         XVector_0.30.0        
  [7] farver_2.0.3           MatrixModels_0.4-1     bit64_4.0.5           
 [10] AnnotationDbi_1.52.0   mvtnorm_1.1-1          codetools_0.2-18      
 [13] splines_4.0.3          pscl_1.5.5             geneplotter_1.68.0    
 [16] jsonlite_1.7.2         nloptr_1.2.2.2         broom_0.7.3           
 [19] annotate_1.68.0        cluster_2.1.0          kernlab_0.9-29        
 [22] compiler_4.0.3         httr_1.4.2             backports_1.2.1       
 [25] quantreg_5.75          tools_4.0.3            coda_0.19-4           
 [28] gtable_0.3.0           glue_1.4.2             GenomeInfoDbData_1.2.4
 [31] dplyr_1.0.2            Rcpp_1.0.5             carData_3.0-4         
 [34] bbmle_1.0.23.1         cellranger_1.1.0       vctrs_0.3.6           
 [37] ape_5.4-1              nlme_3.1-151           conquer_1.0.2         
 [40] openxlsx_4.2.3         CompQuadForm_1.4.3     lifecycle_0.2.0       
 [43] GUniFrac_1.1           rstatix_0.6.0          statmod_1.4.35        
 [46] XML_3.99-0.5           PearsonDS_1.1          zlibbioc_1.36.0       
 [49] scales_1.1.1           hms_0.5.3              SparseM_1.78          
 [52] RColorBrewer_1.1-2     curl_4.3               gridExtra_2.3         
 [55] memoise_1.1.0          bdsmatrix_1.3-4        segmented_1.3-3       
 [58] stringi_1.5.3          RSQLite_2.2.1          genefilter_1.72.0     
 [61] permute_0.9-5          zip_2.1.1              boot_1.3-25           
 [64] BiocParallel_1.24.1    rlang_0.4.10           pkgconfig_2.0.3       
 [67] bitops_1.0-6           lattice_0.20-41        purrr_0.3.4           
 [70] labeling_0.4.2         cowplot_1.1.1          bit_4.0.4             
 [73] tidyselect_1.1.0       plyr_1.8.6             magrittr_2.0.1        
 [76] R6_2.5.0               generics_0.1.0         DelayedArray_0.16.0   
 [79] DBI_1.1.0              haven_2.3.1            foreign_0.8-81        
 [82] withr_2.3.0            pillar_1.4.7           mgcv_1.8-33           
 [85] mixtools_1.2.0         survival_3.2-7         abind_1.4-5           
 [88] RCurl_1.98-1.2         tibble_3.0.4           car_3.0-10            
 [91] crayon_1.3.4           readxl_1.3.1           locfit_1.5-9.4        
 [94] grid_4.0.3             blob_1.2.1             vegan_2.5-7           
 [97] forcats_0.5.0          digest_0.6.27          xtable_1.8-4          
[100] tidyr_1.1.2            numDeriv_2016.8-1.1    munsell_0.5.0         
> 
> mem_used()
3.33 GB
> gc()
            used   (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   8071818  431.1   13973607  746.3         NA  13608803  726.8
Vcells 359816763 2745.2  518830148 3958.4      32768 369854757 2821.8
> 
> q(save = "no")
> proc.time()
   user  system elapsed 
 35.887   4.062  42.430 
